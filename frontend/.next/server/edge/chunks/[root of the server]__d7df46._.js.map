{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["// middleware.ts\r\nimport { NextResponse } from 'next/server'\r\nimport type { NextRequest } from 'next/server'\r\n\r\nexport function middleware(request: NextRequest) {\r\n    const token = request.cookies.get('token')?.value\r\n    const path = request.nextUrl.pathname\r\n\r\n    // Public routes\r\n    const isPublicPath =\r\n        path === '/login' || path === '/register' || path === '/'\r\n\r\n    // If no token and trying to access protected route\r\n    if (!token && !isPublicPath) {\r\n        return NextResponse.redirect(new URL('/', request.url))\r\n    }\r\n\r\n    // If token exists and trying to access login/register\r\n    if (token && (path === '/login' || path === '/register')) {\r\n        return NextResponse.redirect(new URL('/dashboard', request.url))\r\n    }\r\n\r\n    return NextResponse.next()\r\n}\r\n\r\n// See \"Matching Paths\" below to learn more\r\nexport const config = {\r\n    matcher: [\r\n        '/',\r\n        '/login',\r\n        '/register',\r\n        '/dashboard/:path*',\r\n        // '/slot-game',\r\n        '/blackjack',\r\n    ],\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;;AAChB;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC3C,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU;IAC5C,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,gBAAgB;IAChB,MAAM,eACF,SAAS,YAAY,SAAS,eAAe,SAAS;IAE1D,mDAAmD;IACnD,IAAI,CAAC,SAAS,CAAC,cAAc;QACzB,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACzD;IAEA,sDAAsD;IACtD,IAAI,SAAS,CAAC,SAAS,YAAY,SAAS,WAAW,GAAG;QACtD,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAClE;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC5B;AAGO,MAAM,SAAS;IAClB,SAAS;QACL;QACA;QACA;QACA;QACA,gBAAgB;QAChB;KACH;AACL"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}