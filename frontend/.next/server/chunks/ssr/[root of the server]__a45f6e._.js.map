{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,sMAAM,UAAU,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,sMAAM,UAAU,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,sMAAM,UAAU,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,sMAAM,UAAU,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,sMAAM,UAAU,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/src/app/pages/games/SlotGameBoard3.tsx"],"sourcesContent":["'use client'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { io, Socket } from 'socket.io-client'\r\nimport { Card, CardContent } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\n\r\nconst CasinoGameLayout = () => {\r\n    const [socket, setSocket] = useState<Socket | null>(null)\r\n    const [grid, setGrid] = useState<string[][]>([\r\n        ['', '', '', '', ''],\r\n        ['', '', '', '', ''],\r\n        ['', '', '', '', ''],\r\n    ])\r\n    const [balance, setBalance] = useState<number>(1000)\r\n    const [userId, setUserId] = useState<string | null>(null)\r\n    const [betAmount, setBetAmount] = useState<number>(10)\r\n    const [lastWinnings, setLastWinnings] = useState<number>(0)\r\n\r\n    useEffect(() => {\r\n        // Connect to WebSocket server\r\n        const newSocket = io('http://localhost:3001', {\r\n            path: '/gamelive',\r\n            transports: ['websocket'],\r\n        })\r\n\r\n        newSocket.on('connect', () => {\r\n            // Authenticate user\r\n            newSocket.emit('authenticate', {})\r\n        })\r\n\r\n        newSocket.on('authenticated', (data) => {\r\n            setUserId(data.userId)\r\n            setBalance(data.balance)\r\n        })\r\n\r\n        newSocket.on('spinResult', (result) => {\r\n            setGrid(result.grid)\r\n            setLastWinnings(result.winnings)\r\n            setBalance((prevBalance) => prevBalance + result.winnings)\r\n\r\n            if (result.bonusAwarded) {\r\n                alert(\r\n                    `Bonus Awarded: $${result.bonusAwarded.amount} (${result.bonusAwarded.type})`\r\n                )\r\n            }\r\n        })\r\n\r\n        setSocket(newSocket)\r\n\r\n        // Cleanup on component unmount\r\n        return () => {\r\n            newSocket.disconnect()\r\n        }\r\n    }, [])\r\n\r\n    const handleSpin = () => {\r\n        if (socket && userId) {\r\n            socket.emit('spin', { betAmount })\r\n        }\r\n    }\r\n\r\n    const renderSymbol = (symbol: string) => {\r\n        const symbolMap: { [key: string]: string } = {\r\n            'üçí': 'üçí',\r\n            'üçã': 'üçã',\r\n            'üçá': 'üçá',\r\n            'üçä': 'üçä',\r\n            'üíé': 'üíé',\r\n            'üçÄ': 'üçÄ',\r\n            '': '‚ùì',\r\n        }\r\n        return symbolMap[symbol]\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gradient-to-br from-[#1a1a2e] via-[#16213e] to-[#0f3460] flex items-center justify-center p-4\">\r\n            <Card className=\"w-full max-w-4xl bg-[#0f3460] border-4 border-[#e94560] shadow-2xl\">\r\n                <CardContent className=\"p-6\">\r\n                    <div className=\"grid grid-cols-5 gap-4 mb-6\">\r\n                        {grid.map((row, rowIndex) =>\r\n                            row.map((cell, colIndex) => (\r\n                                <div\r\n                                    key={`${rowIndex}-${colIndex}`}\r\n                                    className=\"bg-[#1a1a2e] border-2 border-[#e94560] rounded-lg h-24 flex items-center justify-center text-white text-4xl font-bold\"\r\n                                >\r\n                                    {renderSymbol(cell)}\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"flex justify-between items-center\">\r\n                        <div className=\"flex space-x-4 items-center\">\r\n                            <Button\r\n                                variant=\"destructive\"\r\n                                className=\"bg-[#e94560] hover:bg-[#ff6b81] text-white font-bold py-3 px-6 rounded-lg\"\r\n                                onClick={handleSpin}\r\n                            >\r\n                                SPIN\r\n                            </Button>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <span className=\"text-white\">Bet:</span>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={betAmount}\r\n                                    onChange={(e) =>\r\n                                        setBetAmount(Number(e.target.value))\r\n                                    }\r\n                                    min=\"1\"\r\n                                    max={balance}\r\n                                    className=\"w-20 p-2 rounded bg-[#1a1a2e] text-white\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"text-white text-xl flex items-center space-x-4\">\r\n                            <div>\r\n                                <span>Balance: </span>\r\n                                <span className=\"font-bold text-[#e94560]\">\r\n                                    ${balance.toFixed(2)}\r\n                                </span>\r\n                            </div>\r\n                            <div>\r\n                                <span>Last Winnings: </span>\r\n                                <span className=\"font-bold text-green-500\">\r\n                                    ${lastWinnings.toFixed(2)}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CasinoGameLayout\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}