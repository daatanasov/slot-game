{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/src/app/context/BalanceContext.tsx"],"sourcesContent":["'use client'\r\nimport { createContext, useState, ReactNode } from 'react'\r\n\r\ntype BalanceContextType = {\r\n    balance: number\r\n    updateBalance: (newBalance: number) => void\r\n}\r\n\r\nexport const BalanceContext = createContext<BalanceContextType>({\r\n    balance: 100,\r\n    updateBalance: () => {},\r\n})\r\n\r\nexport const BalanceProvider = ({ children }: { children: ReactNode }) => {\r\n    const [balance, setBalance] = useState(100)\r\n\r\n    const updateBalance = (newBalance: number) => {\r\n        console.log(newBalance)\r\n        setBalance(newBalance)\r\n    }\r\n\r\n    return (\r\n        <BalanceContext.Provider value={{ balance, updateBalance }}>\r\n            {children}\r\n        </BalanceContext.Provider>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAQO,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAsB;IAC5D,SAAS;IACT,eAAe,KAAO;AAC1B;AAEO,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAA2B;IACjE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,gBAAgB,CAAC;QACnB,QAAQ,GAAG,CAAC;QACZ,WAAW;IACf;IAEA,qBACI,8OAAC,eAAe,QAAQ;QAAC,OAAO;YAAE;YAAS;QAAc;kBACpD;;;;;;AAGb"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/src/app/components/Spinner.tsx"],"sourcesContent":["const Spinner = () => (\r\n    <div className=\"flex items-center justify-center space-x-1\">\r\n        <div className=\"w-2 h-2 bg-white rounded-full animate-bounce\"></div>\r\n        <div className=\"w-2 h-2 bg-white rounded-full animate-bounce delay-200\"></div>\r\n        <div className=\"w-2 h-2 bg-white rounded-full animate-bounce delay-400\"></div>\r\n    </div>\r\n)\r\n\r\nexport default Spinner\r\n"],"names":[],"mappings":";;;;;AAAA,MAAM,UAAU,kBACZ,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;;;;;;;;;;;;uCAIR"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/src/app/pages/games/SlotGameBoard.tsx"],"sourcesContent":["'use client'\r\nimport { useState, useContext } from 'react'\r\nimport { BalanceContext } from '@/app/context/BalanceContext'\r\nimport Spinner from '@/app/components/Spinner'\r\n\r\nconst SlotGameBoard = () => {\r\n    const { balance, updateBalance } = useContext(BalanceContext)\r\n    const [bet, setBet] = useState<number>(10)\r\n    const [reels, setReels] = useState<string[][]>([\r\n        ['üçí', 'üçí', 'üçí', 'üçí', 'üçí'],\r\n        ['üçí', 'üçí', 'üçí', 'üçí', 'üçí'],\r\n        ['üçí', 'üçí', 'üçí', 'üçí', 'üçí'],\r\n    ])\r\n    const [result, setResult] = useState<string | null>(null)\r\n    const [isSpinning, setIsSpinning] = useState(false) // Disable spin button while spinning\r\n\r\n    const columns = 3 // Number of columns (reels)\r\n    const rows = 5 // Number of rows\r\n\r\n    const spinReels = async () => {\r\n        if (bet > balance) {\r\n            setResult('Insufficient balance!')\r\n            return\r\n        }\r\n\r\n        setIsSpinning(true) // Disable spin button\r\n        setResult(null) // Clear result\r\n\r\n        // Simulate spinning animation before fetching the result\r\n        setReels(\r\n            Array.from(\r\n                { length: columns },\r\n                () => Array.from({ length: rows }, () => 'üí´') // Temporary spinning symbol\r\n            )\r\n        )\r\n\r\n        // Add a timeout to simulate spinning duration\r\n        setTimeout(async () => {\r\n            const response = await fetch(\r\n                'http://localhost:3001/api/game/spin',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ bet, balance }),\r\n                }\r\n            )\r\n\r\n            const data = await response.json()\r\n            setReels(data.reels) // Update with actual results\r\n            updateBalance(data.newBalance)\r\n            setResult(data.isWin ? `You win $${data.payout}!` : 'You lose!')\r\n            setIsSpinning(false) // Re-enable spin button\r\n        }, 2000) // Adjust spinning duration (2 seconds)\r\n    }\r\n    console.log(reels)\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-screen\">\r\n            {/* Slot Machine */}\r\n            <div className=\"grid grid-rows-3 grid-cols-5 gap-1 justify-center items-center p-4 rounded-lg shadow-md\">\r\n                {reels.map((row, rowIndex) =>\r\n                    row.map((symbol, colIndex) => (\r\n                        <div\r\n                            key={`${rowIndex}-${colIndex}`}\r\n                            className=\"w-16 h-16 flex items-center justify-center text-2xl bg-gray-200 rounded-md border\"\r\n                        >\r\n                            {symbol}\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n\r\n            {/* Bet Input */}\r\n            <div className=\"mb-4 mt-6\">\r\n                <input\r\n                    type=\"number\"\r\n                    value={bet}\r\n                    onChange={(e) => setBet(Number(e.target.value))}\r\n                    min=\"1\"\r\n                    max={balance}\r\n                    className=\"border rounded-md px-2 py-1\"\r\n                />\r\n                <span> Bet</span>\r\n            </div>\r\n\r\n            {/* Spin Button */}\r\n            <button\r\n                onClick={spinReels}\r\n                disabled={isSpinning} // Disable while spinning\r\n                className={`px-4 py-2 rounded-md ${\r\n                    isSpinning\r\n                        ? 'bg-gray-400 text-gray-700'\r\n                        : 'bg-green-500 text-white'\r\n                }`}\r\n            >\r\n                {isSpinning ? <Spinner /> : 'Spin'}\r\n            </button>\r\n\r\n            {/* Result and Balance */}\r\n            {result && <p className=\"mt-4 text-lg\">{result}</p>}\r\n            <p className=\"mt-2\">Balance: ${balance}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlotGameBoard\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAHA;;;;;AAKA,MAAM,gBAAgB;IAClB,MAAM,EAAE,OAAO,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,wIAAA,CAAA,iBAAc;IAC5D,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;QAC3C;YAAC;YAAM;YAAM;YAAM;YAAM;SAAK;QAC9B;YAAC;YAAM;YAAM;YAAM;YAAM;SAAK;QAC9B;YAAC;YAAM;YAAM;YAAM;YAAM;SAAK;KACjC;IACD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,qCAAqC;;IAEzF,MAAM,UAAU,EAAE,4BAA4B;;IAC9C,MAAM,OAAO,EAAE,iBAAiB;;IAEhC,MAAM,YAAY;QACd,IAAI,MAAM,SAAS;YACf,UAAU;YACV;QACJ;QAEA,cAAc,MAAM,sBAAsB;;QAC1C,UAAU,MAAM,eAAe;;QAE/B,yDAAyD;QACzD,SACI,MAAM,IAAI,CACN;YAAE,QAAQ;QAAQ,GAClB,IAAM,MAAM,IAAI,CAAC;gBAAE,QAAQ;YAAK,GAAG,IAAM,MAAM,4BAA4B;;QAInF,8CAA8C;QAC9C,WAAW;YACP,MAAM,WAAW,MAAM,MACnB,uCACA;gBACI,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAK;gBAAQ;YACxC;YAGJ,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,SAAS,KAAK,KAAK,EAAE,6BAA6B;;YAClD,cAAc,KAAK,UAAU;YAC7B,UAAU,KAAK,KAAK,GAAG,CAAC,SAAS,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG;YACpD,cAAc,OAAO,wBAAwB;;QACjD,GAAG,MAAM,uCAAuC;;IACpD;IACA,QAAQ,GAAG,CAAC;IACZ,qBACI,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;0BACV,MAAM,GAAG,CAAC,CAAC,KAAK,WACb,IAAI,GAAG,CAAC,CAAC,QAAQ,yBACb,8OAAC;4BAEG,WAAU;sCAET;2BAHI,GAAG,SAAS,CAAC,EAAE,UAAU;;;;;;;;;;0BAU9C,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBACG,MAAK;wBACL,OAAO;wBACP,UAAU,CAAC,IAAM,OAAO,OAAO,EAAE,MAAM,CAAC,KAAK;wBAC7C,KAAI;wBACJ,KAAK;wBACL,WAAU;;;;;;kCAEd,8OAAC;kCAAK;;;;;;;;;;;;0BAIV,8OAAC;gBACG,SAAS;gBACT,UAAU;gBACV,WAAW,CAAC,qBAAqB,EAC7B,aACM,8BACA,2BACR;0BAED,2BAAa,8OAAC,oIAAA,CAAA,UAAO;;;;2BAAM;;;;;;YAI/B,wBAAU,8OAAC;gBAAE,WAAU;0BAAgB;;;;;;0BACxC,8OAAC;gBAAE,WAAU;;oBAAO;oBAAW;;;;;;;;;;;;;AAG3C;uCAEe"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}