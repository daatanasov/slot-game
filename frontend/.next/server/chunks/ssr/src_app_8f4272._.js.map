{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/src/app/pages/games/SlotGame.tsx"],"sourcesContent":["'use client'\r\nimport { useEffect, useRef, useState } from 'react'\r\n\r\nconst SlotGame = () => {\r\n    const [connected, setConnected] = useState(false)\r\n    const [result, setResult] = useState<string[]>([])\r\n    const wsRef = useRef<WebSocket | null>(null)\r\n\r\n    useEffect(() => {\r\n        const ws = new WebSocket('ws://localhost:8080') // Use unique userId\r\n        wsRef.current = ws\r\n\r\n        ws.onopen = () => {\r\n            setConnected(true)\r\n            ws.send('hellooo')\r\n            console.log('WebSocket connected')\r\n        }\r\n\r\n        ws.onmessage = (event) => {\r\n            const data = JSON.parse(event.data)\r\n            if (data.action === 'spinResult') {\r\n                setResult(data.result)\r\n            }\r\n        }\r\n\r\n        ws.onclose = () => {\r\n            setConnected(false)\r\n            console.log('WebSocket disconnected')\r\n        }\r\n\r\n        return () => ws.close()\r\n    }, [])\r\n\r\n    const spin = () => {\r\n        wsRef.current?.send(JSON.stringify({ action: 'spin' }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Slot Game</h1>\r\n            {connected ? (\r\n                <div>\r\n                    <button onClick={spin}>Spin</button>\r\n                    <div>Result: {result.join(' ')}</div>\r\n                </div>\r\n            ) : (\r\n                <p>Connecting to server...</p>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SlotGame\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGA,MAAM,WAAW;IACb,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjD,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,KAAK,IAAI,UAAU,uBAAuB,oBAAoB;;QACpE,MAAM,OAAO,GAAG;QAEhB,GAAG,MAAM,GAAG;YACR,aAAa;YACb,GAAG,IAAI,CAAC;YACR,QAAQ,GAAG,CAAC;QAChB;QAEA,GAAG,SAAS,GAAG,CAAC;YACZ,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,IAAI;YAClC,IAAI,KAAK,MAAM,KAAK,cAAc;gBAC9B,UAAU,KAAK,MAAM;YACzB;QACJ;QAEA,GAAG,OAAO,GAAG;YACT,aAAa;YACb,QAAQ,GAAG,CAAC;QAChB;QAEA,OAAO,IAAM,GAAG,KAAK;IACzB,GAAG,EAAE;IAEL,MAAM,OAAO;QACT,MAAM,OAAO,EAAE,KAAK,KAAK,SAAS,CAAC;YAAE,QAAQ;QAAO;IACxD;IAEA,qBACI,8OAAC;;0BACG,8OAAC;0BAAG;;;;;;YACH,0BACG,8OAAC;;kCACG,8OAAC;wBAAO,SAAS;kCAAM;;;;;;kCACvB,8OAAC;;4BAAI;4BAAS,OAAO,IAAI,CAAC;;;;;;;;;;;;qCAG9B,8OAAC;0BAAE;;;;;;;;;;;;AAInB;uCAEe"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}