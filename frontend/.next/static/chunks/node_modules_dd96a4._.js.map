{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"isMobile.js","sources":["file://D%3A/dev/slot-game/frontend/node_modules/ismobilejs/src/isMobile.ts"],"sourcesContent":["const appleIphone = /iPhone/i;\nconst appleIpod = /iPod/i;\nconst appleTablet = /iPad/i;\nconst appleUniversal = /\\biOS-universal(?:.+)Mac\\b/i;\nconst androidPhone = /\\bAndroid(?:.+)Mobile\\b/i; // Match 'Android' AND 'Mobile'\nconst androidTablet = /Android/i;\nconst amazonPhone = /(?:SD4930UR|\\bSilk(?:.+)Mobile\\b)/i; // Match 'Silk' AND 'Mobile'\nconst amazonTablet = /Silk/i;\nconst windowsPhone = /Windows Phone/i;\nconst windowsTablet = /\\bWindows(?:.+)ARM\\b/i; // Match 'Windows' AND 'ARM'\nconst otherBlackBerry = /BlackBerry/i;\nconst otherBlackBerry10 = /BB10/i;\nconst otherOpera = /Opera Mini/i;\nconst otherChrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i;\nconst otherFirefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\nexport type UserAgent = string;\nexport type Navigator = {\n  userAgent: string;\n  platform: string;\n  maxTouchPoints?: number;\n};\n\nconst isAppleTabletOnIos13 = (navigator?: Navigator): boolean => {\n  return (\n    typeof navigator !== 'undefined' &&\n    navigator.platform === 'MacIntel' &&\n    typeof navigator.maxTouchPoints === 'number' &&\n    navigator.maxTouchPoints > 1 &&\n    typeof MSStream === 'undefined'\n  );\n};\n\nfunction createMatch(userAgent: UserAgent): (regex: RegExp) => boolean {\n  return (regex: RegExp): boolean => regex.test(userAgent);\n}\n\nexport type isMobileResult = {\n  apple: {\n    phone: boolean;\n    ipod: boolean;\n    tablet: boolean;\n    universal: boolean;\n    device: boolean;\n  };\n  amazon: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  android: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  windows: {\n    phone: boolean;\n    tablet: boolean;\n    device: boolean;\n  };\n  other: {\n    blackberry: boolean;\n    blackberry10: boolean;\n    opera: boolean;\n    firefox: boolean;\n    chrome: boolean;\n    device: boolean;\n  };\n  phone: boolean;\n  tablet: boolean;\n  any: boolean;\n};\n\nexport type IsMobileParameter = UserAgent | Navigator;\n\nexport default function isMobile(param?: IsMobileParameter): isMobileResult {\n  let nav: Navigator = {\n    userAgent: '',\n    platform: '',\n    maxTouchPoints: 0,\n  };\n\n  if (!param && typeof navigator !== 'undefined') {\n    nav = {\n      userAgent: navigator.userAgent,\n      platform: navigator.platform,\n      maxTouchPoints: navigator.maxTouchPoints || 0,\n    };\n  } else if (typeof param === 'string') {\n    nav.userAgent = param;\n  } else if (param && param.userAgent) {\n    nav = {\n      userAgent: param.userAgent,\n      platform: param.platform,\n      maxTouchPoints: param.maxTouchPoints || 0,\n    };\n  }\n\n  let userAgent = nav.userAgent;\n\n  // Facebook mobile app's integrated browser adds a bunch of strings that\n  // match everything. Strip it out if it exists.\n  let tmp = userAgent.split('[FBAN');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n  // iPhone\" string. Same probably happens on other tablet platforms.\n  // This will confuse detection so strip it out if it exists.\n  tmp = userAgent.split('Twitter');\n  if (typeof tmp[1] !== 'undefined') {\n    userAgent = tmp[0];\n  }\n\n  const match = createMatch(userAgent);\n\n  const result: isMobileResult = {\n    apple: {\n      phone: match(appleIphone) && !match(windowsPhone),\n      ipod: match(appleIpod),\n      tablet:\n        !match(appleIphone) &&\n        (match(appleTablet) || isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n      universal: match(appleUniversal),\n      device:\n        (match(appleIphone) ||\n          match(appleIpod) ||\n          match(appleTablet) ||\n          match(appleUniversal) ||\n          isAppleTabletOnIos13(nav)) &&\n        !match(windowsPhone),\n    },\n    amazon: {\n      phone: match(amazonPhone),\n      tablet: !match(amazonPhone) && match(amazonTablet),\n      device: match(amazonPhone) || match(amazonTablet),\n    },\n    android: {\n      phone:\n        (!match(windowsPhone) && match(amazonPhone)) ||\n        (!match(windowsPhone) && match(androidPhone)),\n      tablet:\n        !match(windowsPhone) &&\n        !match(amazonPhone) &&\n        !match(androidPhone) &&\n        (match(amazonTablet) || match(androidTablet)),\n      device:\n        (!match(windowsPhone) &&\n          (match(amazonPhone) ||\n            match(amazonTablet) ||\n            match(androidPhone) ||\n            match(androidTablet))) ||\n        match(/\\bokhttp\\b/i),\n    },\n    windows: {\n      phone: match(windowsPhone),\n      tablet: match(windowsTablet),\n      device: match(windowsPhone) || match(windowsTablet),\n    },\n    other: {\n      blackberry: match(otherBlackBerry),\n      blackberry10: match(otherBlackBerry10),\n      opera: match(otherOpera),\n      firefox: match(otherFirefox),\n      chrome: match(otherChrome),\n      device:\n        match(otherBlackBerry) ||\n        match(otherBlackBerry10) ||\n        match(otherOpera) ||\n        match(otherFirefox) ||\n        match(otherChrome),\n    },\n    any: false,\n    phone: false,\n    tablet: false,\n  };\n\n  result.any =\n    result.apple.device ||\n    result.android.device ||\n    result.windows.device ||\n    result.other.device;\n  // excludes 'other' devices and ipods, targeting touchscreen phones\n  result.phone =\n    result.apple.phone || result.android.phone || result.windows.phone;\n  result.tablet =\n    result.apple.tablet || result.android.tablet || result.windows.tablet;\n\n  return result;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://D%3A/dev/slot-game/frontend/node_modules/ismobilejs/src/index.ts"],"sourcesContent":["export * from './isMobile';\nexport { default } from './isMobile';\n"],"names":[],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"file":"isMobile.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/browser/isMobile.ts"],"sourcesContent":["import isMobileJs from 'ismobilejs';\n\n// ismobilejs have different import behavior for CJS and ESM, so here is the hack\ntype isMobileJsType = typeof isMobileJs & { default?: typeof isMobileJs };\nconst isMobileCall = (isMobileJs as isMobileJsType).default ?? isMobileJs;\n\n/**\n * The result of the {@link utils.isMobile} function.\n * @ignore\n * @memberof utils\n */\nexport type isMobileResult = {\n    /**\n     * Whether the device is an Apple device.\n     * @memberof utils.isMobile\n     */\n    apple: {\n        phone: boolean;\n        ipod: boolean;\n        tablet: boolean;\n        universal: boolean;\n        device: boolean;\n    };\n    /**\n     * Whether the device is an Amazon device.\n     * @memberof utils.isMobile\n     */\n    amazon: {\n        phone: boolean;\n        tablet: boolean;\n        device: boolean;\n    };\n    /**\n     * Whether the device is an Android device.\n     * @memberof utils.isMobile\n     */\n    android: {\n        phone: boolean;\n        tablet: boolean;\n        device: boolean;\n    };\n    /**\n     * Whether the device is a Windows device.\n     * @memberof utils.isMobile\n     */\n    windows: {\n        phone: boolean;\n        tablet: boolean;\n        device: boolean;\n    };\n    /**\n     * Whether the device is a specific device.\n     * @memberof utils.isMobile\n     */\n    other: {\n        blackberry: boolean;\n        blackberry10: boolean;\n        opera: boolean;\n        firefox: boolean;\n        chrome: boolean;\n        device: boolean;\n    };\n    /**\n     * Whether the device is a phone device.\n     * @memberof utils.isMobile\n     */\n    phone: boolean;\n    /**\n     * Whether the device is a tablet device.\n     * @memberof utils.isMobile\n     */\n    tablet: boolean;\n    /**\n     * Whether the device is any kind of device.\n     * @memberof utils.isMobile\n     */\n    any: boolean;\n};\n\n/**\n * Detects whether the device is mobile and what type of mobile device it is.\n * ```js\n * import { isMobile } from 'pixi.js';\n *\n * if (isMobile.apple.tablet) {\n *    // The device is an Apple tablet device.\n * }\n * ```\n * @memberof utils\n */\nexport const isMobile: isMobileResult = isMobileCall(globalThis.navigator);\n"],"names":[],"mappings":";;;;;;;AAIA,MAAM,YAAA,oJAAgB,UAAA,CAA8B,OAAW,qJAAA,UAAA,CAAA;AAsFlD,MAAA,QAAA,GAA2B,YAAa,CAAA,UAAA,CAAW,SAAS","ignoreList":[0]}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"file":"Point.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/maths/point/Point.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type { PointData } from './PointData';\nimport type { PointLike } from './PointLike';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface Point extends PixiMixins.Point { }\n\n/**\n * The Point object represents a location in a two-dimensional coordinate system, where `x` represents\n * the position on the horizontal axis and `y` represents the position on the vertical axis.\n * <br/>\n * Many Pixi functions accept the `PointData` type as an alternative to `Point`,\n * which only requires `x` and `y` properties.\n * @class\n * @implements {PointLike}\n * @memberof maths\n */\nexport class Point implements PointLike\n{\n    /** Position of the point on the x axis */\n    public x = 0;\n    /** Position of the point on the y axis */\n    public y = 0;\n\n    /**\n     * Creates a new `Point`\n     * @param {number} [x=0] - position of the point on the x axis\n     * @param {number} [y=0] - position of the point on the y axis\n     */\n    constructor(x = 0, y = 0)\n    {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Creates a clone of this point\n     * @returns A clone of this point\n     */\n    public clone(): Point\n    {\n        return new Point(this.x, this.y);\n    }\n\n    /**\n     * Copies `x` and `y` from the given point into this point\n     * @param p - The point to copy from\n     * @returns The point instance itself\n     */\n    public copyFrom(p: PointData): this\n    {\n        this.set(p.x, p.y);\n\n        return this;\n    }\n\n    /**\n     * Copies this point's x and y into the given point (`p`).\n     * @param p - The point to copy to. Can be any of type that is or extends `PointData`\n     * @returns The point (`p`) with values updated\n     */\n    public copyTo<T extends PointLike>(p: T): T\n    {\n        p.set(this.x, this.y);\n\n        return p;\n    }\n\n    /**\n     * Accepts another point (`p`) and returns `true` if the given point is equal to this point\n     * @param p - The point to check\n     * @returns Returns `true` if both `x` and `y` are equal\n     */\n    public equals(p: PointData): boolean\n    {\n        return (p.x === this.x) && (p.y === this.y);\n    }\n\n    /**\n     * Sets the point to a new `x` and `y` position.\n     * If `y` is omitted, both `x` and `y` will be set to `x`.\n     * @param {number} [x=0] - position of the point on the `x` axis\n     * @param {number} [y=x] - position of the point on the `y` axis\n     * @returns The point instance itself\n     */\n    public set(x = 0, y: number = x): this\n    {\n        this.x = x;\n        this.y = y;\n\n        return this;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Point x=${this.x} y=${this.y}]`;\n    }\n    // #endif\n\n    /**\n     * A static Point object with `x` and `y` values of `0`. Can be used to avoid creating new objects multiple times.\n     * @readonly\n     */\n    static get shared(): Point\n    {\n        tempPoint.x = 0;\n        tempPoint.y = 0;\n\n        return tempPoint;\n    }\n}\n\nconst tempPoint = new Point();\n"],"names":[],"mappings":";;;;AAiBO,MAAM,KACb,CAAA;IAAA;;;;GAAA,GAWI,WAAY,CAAA,CAAA,GAAI,CAAG,EAAA,CAAA,GAAI,CACvB,CAAA;QAVA,wCAAA,GAAA,IAAA,CAAO,CAAI,GAAA,CAAA,CAAA;QAEX,wCAAA,GAAA,IAAA,CAAO,CAAI,GAAA,CAAA,CAAA;QASP,IAAA,CAAK,CAAI,GAAA,CAAA,CAAA;QACT,IAAA,CAAK,CAAI,GAAA,CAAA,CAAA;IAAA,CACb;IAAA;;;GAAA,GAMO,KACP,GAAA;QACI,OAAO,IAAI,KAAA,CAAM,IAAK,CAAA,CAAA,EAAG,IAAA,CAAK,CAAC,CAAA,CAAA;IAAA,CACnC;IAAA;;;;GAAA,GAOO,SAAS,CAChB,EAAA;QACI,IAAA,CAAK,GAAI,CAAA,CAAA,CAAE,CAAG,EAAA,CAAA,CAAE,CAAC,CAAA,CAAA;QAEV,OAAA,IAAA,CAAA;IAAA,CACX;IAAA;;;;GAAA,GAOO,OAA4B,CACnC,EAAA;QACI,CAAA,CAAE,GAAI,CAAA,IAAA,CAAK,CAAG,EAAA,IAAA,CAAK,CAAC,CAAA,CAAA;QAEb,OAAA,CAAA,CAAA;IAAA,CACX;IAAA;;;;GAAA,GAOO,OAAO,CACd,EAAA;QACI,OAAQ,EAAE,CAAM,KAAA,IAAA,CAAK,CAAO,IAAA,CAAA,CAAE,CAAA,KAAM,IAAK,CAAA,CAAA,CAAA;IAAA,CAC7C;IAAA;;;;;;GAAA,GASO,GAAI,CAAA,CAAA,GAAI,CAAG,EAAA,CAAA,GAAY,CAC9B,EAAA;QACI,IAAA,CAAK,CAAI,GAAA,CAAA,CAAA;QACT,IAAA,CAAK,CAAI,GAAA,CAAA,CAAA;QAEF,OAAA,IAAA,CAAA;IAAA,CACX;IAGO,QACP,GAAA;QACI,OAAO,CAAyB,sBAAA,EAAA,IAAA,CAAK,CAAC,CAAA,GAAA,EAAM,IAAA,CAAK,CAAC,CAAA,CAAA,CAAA,CAAA;IAAA,CACtD;IAAA;;;GAAA,GAOA,WAAW,MACX,GAAA;QACI,SAAA,CAAU,CAAI,GAAA,CAAA,CAAA;QACd,SAAA,CAAU,CAAI,GAAA,CAAA,CAAA;QAEP,OAAA,SAAA,CAAA;IAAA,CACX;AACJ,CAAA;AAEA,MAAM,SAAA,GAAY,IAAI,KAAM,EAAA","ignoreList":[0]}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"file":"FederatedEvent.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/FederatedEvent.ts"],"sourcesContent":["import { Point } from '../maths/point/Point';\n\nimport type { Container } from '../scene/container/Container';\nimport type { EventBoundary } from './EventBoundary';\n\n/**\n * A PixiJS compatible {@code Touch} event.\n * @memberof events\n */\nexport interface PixiTouch extends Touch\n{\n    button: number;\n    buttons: number;\n    isPrimary: boolean;\n    width: number;\n    height: number;\n    tiltX: number;\n    tiltY: number;\n    pointerType: string;\n    pointerId: number;\n    pressure: number;\n    twist: number;\n    tangentialPressure: number;\n    layerX: number;\n    layerY: number;\n    offsetX: number;\n    offsetY: number;\n    isNormalized: boolean;\n    type: string;\n}\n\n/**\n * An DOM-compatible synthetic event implementation that is \"forwarded\" on behalf of an original\n * FederatedEvent or native {@link https://dom.spec.whatwg.org/#event Event}.\n * @typeParam N - The type of native event held.\n * @memberof events\n */\nexport class FederatedEvent<N extends UIEvent | PixiTouch = UIEvent | PixiTouch> implements UIEvent\n{\n    /** Flags whether this event bubbles. This will take effect only if it is set before propagation. */\n    public bubbles = true;\n\n    /** @deprecated since 7.0.0 */\n    public cancelBubble = true;\n\n    /**\n     * Flags whether this event can be canceled using {@link FederatedEvent.preventDefault}. This is always\n     * false (for now).\n     */\n    public readonly cancelable = false;\n\n    /**\n     * Flag added for compatibility with DOM {@code Event}. It is not used in the Federated Events\n     * API.\n     * @see https://dom.spec.whatwg.org/#dom-event-composed\n     */\n    public readonly composed = false;\n\n    /** The listeners of the event target that are being notified. */\n    public currentTarget: Container;\n\n    /** Flags whether the default response of the user agent was prevent through this event. */\n    public defaultPrevented = false;\n\n    /**\n     * The propagation phase.\n     * @default {@link FederatedEvent.NONE}\n     */\n    public eventPhase = FederatedEvent.prototype.NONE;\n\n    /** Flags whether this is a user-trusted event */\n    public isTrusted: boolean;\n\n    /** @deprecated since 7.0.0 */\n    public returnValue: boolean;\n\n    /** @deprecated since 7.0.0 */\n    public srcElement: EventTarget;\n\n    /** The event target that this will be dispatched to. */\n    public target: Container;\n\n    /** The timestamp of when the event was created. */\n    public timeStamp: number;\n\n    /** The type of event, e.g. {@code \"mouseup\"}. */\n    public type: string;\n\n    /** The native event that caused the foremost original event. */\n    public nativeEvent: N;\n\n    /** The original event that caused this event, if any. */\n    public originalEvent: FederatedEvent<N>;\n\n    /** Flags whether propagation was stopped. */\n    public propagationStopped = false;\n\n    /** Flags whether propagation was immediately stopped. */\n    public propagationImmediatelyStopped = false;\n\n    /** The composed path of the event's propagation. The {@code target} is at the end. */\n    public path: Container[];\n\n    /** The {@link EventBoundary} that manages this event. Null for root events. */\n    public readonly manager: EventBoundary;\n\n    /** Event-specific detail */\n    public detail: number;\n\n    /** The global Window object. */\n    public view: WindowProxy;\n\n    /**\n     * Not supported.\n     * @deprecated since 7.0.0\n     */\n    public which: number;\n\n    /** The coordinates of the event relative to the nearest DOM layer. This is a non-standard property. */\n    public layer: Point = new Point();\n\n    /** @readonly */\n    get layerX(): number { return this.layer.x; }\n\n    /** @readonly */\n    get layerY(): number { return this.layer.y; }\n\n    /** The coordinates of the event relative to the DOM document. This is a non-standard property. */\n    public page: Point = new Point();\n\n    /** @readonly */\n    get pageX(): number { return this.page.x; }\n\n    /** @readonly */\n    get pageY(): number { return this.page.y; }\n\n    /**\n     * @param manager - The event boundary which manages this event. Propagation can only occur\n     *  within the boundary's jurisdiction.\n     */\n    constructor(manager: EventBoundary)\n    {\n        this.manager = manager;\n    }\n\n    /**\n     * Fallback for the deprecated @code{InteractionEvent.data}.\n     * @deprecated since 7.0.0\n     */\n    get data(): this\n    {\n        return this;\n    }\n\n    /** The propagation path for this event. Alias for {@link EventBoundary.propagationPath}. */\n    public composedPath(): Container[]\n    {\n        // Find the propagation path if it isn't cached or if the target has changed since since\n        // the last evaluation.\n        if (this.manager && (!this.path || this.path[this.path.length - 1] !== this.target))\n        {\n            this.path = this.target ? this.manager.propagationPath(this.target) : [];\n        }\n\n        return this.path;\n    }\n\n    /**\n     * Unimplemented method included for implementing the DOM interface {@code Event}. It will throw an {@code Error}.\n     * @deprecated\n     * @param _type\n     * @param _bubbles\n     * @param _cancelable\n     */\n    public initEvent(_type: string, _bubbles?: boolean, _cancelable?: boolean): void\n    {\n        throw new Error('initEvent() is a legacy DOM API. It is not implemented in the Federated Events API.');\n    }\n\n    /**\n     * Unimplemented method included for implementing the DOM interface {@code UIEvent}. It will throw an {@code Error}.\n     * @deprecated\n     * @param _typeArg\n     * @param _bubblesArg\n     * @param _cancelableArg\n     * @param _viewArg\n     * @param _detailArg\n     */\n    public initUIEvent(_typeArg: string, _bubblesArg?: boolean, _cancelableArg?: boolean, _viewArg?: Window | null,\n        _detailArg?: number): void\n    {\n        throw new Error('initUIEvent() is a legacy DOM API. It is not implemented in the Federated Events API.');\n    }\n\n    /** Prevent default behavior of PixiJS and the user agent. */\n    public preventDefault(): void\n    {\n        if (this.nativeEvent instanceof Event && this.nativeEvent.cancelable)\n        {\n            this.nativeEvent.preventDefault();\n        }\n\n        this.defaultPrevented = true;\n    }\n\n    /**\n     * Stop this event from propagating to any addition listeners, including on the\n     * {@link FederatedEventTarget.currentTarget currentTarget} and also the following\n     * event targets on the propagation path.\n     */\n    public stopImmediatePropagation(): void\n    {\n        this.propagationImmediatelyStopped = true;\n    }\n\n    /**\n     * Stop this event from propagating to the next {@link FederatedEventTarget}. The rest of the listeners\n     * on the {@link FederatedEventTarget.currentTarget currentTarget} will still be notified.\n     */\n    public stopPropagation(): void\n    {\n        this.propagationStopped = true;\n    }\n\n    public readonly NONE = 0;\n    public readonly CAPTURING_PHASE = 1;\n    public readonly AT_TARGET = 2;\n    public readonly BUBBLING_PHASE = 3;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"file":"AccessibilitySystem.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/accessibility/AccessibilitySystem.ts"],"sourcesContent":["import { FederatedEvent } from '../events/FederatedEvent';\nimport { ExtensionType } from '../extensions/Extensions';\nimport { isMobile } from '../utils/browser/isMobile';\nimport { removeItems } from '../utils/data/removeItems';\nimport { type AccessibleHTMLElement } from './accessibilityTarget';\n\nimport type { Rectangle } from '../maths/shapes/Rectangle';\nimport type { System } from '../rendering/renderers/shared/system/System';\nimport type { Renderer } from '../rendering/renderers/types';\nimport type { Container } from '../scene/container/Container';\nimport type { isMobileResult } from '../utils/browser/isMobile';\n\n/**\n * The accessibility module recreates the ability to tab and have content read by screen readers.\n * This is very important as it can possibly help people with disabilities access PixiJS content.\n *\n * This module is a mixin for {@link AbstractRenderer} and will need to be imported if you are managing your own renderer.\n * Usage:\n * ```js\n * import 'pixi.js/accessibility';\n * ```\n * To make an object accessible do the following:\n * ```js\n * container.accessible = true; // object is now accessible to screen readers!\n * ```\n * See {@link accessibility.AccessibleOptions} for more accessibility related properties that can be set.\n * @namespace accessibility\n */\n\n/** @ignore */\nconst KEY_CODE_TAB = 9;\n\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\n\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1000;\nconst DIV_HOOK_POS_Y = -1000;\nconst DIV_HOOK_ZINDEX = 2;\n\n/** @ignore */\nexport interface AccessibilityOptions\n{\n    /** Setting this to true will visually show the divs. */\n    debug?: boolean;\n}\n\n/**\n * The Accessibility system recreates the ability to tab and have content read by screen readers.\n * This is very important as it can possibly help people with disabilities access PixiJS content.\n *\n * A Container can be made accessible just like it can be made interactive. This manager will map the\n * events as if the mouse was being used, minimizing the effort required to implement.\n *\n * An instance of this class is automatically created by default, and can be found at `renderer.accessibility`\n * @memberof accessibility\n */\nexport class AccessibilitySystem implements System<AccessibilityOptions>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n        ],\n        name: 'accessibility',\n    } as const;\n\n    /** Setting this to true will visually show the divs. */\n    public debug = false;\n\n    /**\n     * The renderer this accessibility manager works for.\n     * @type {WebGLRenderer|WebGPURenderer}\n     */\n    private _renderer: Renderer;\n\n    /** Internal variable, see isActive getter. */\n    private _isActive = false;\n\n    /** Internal variable, see isMobileAccessibility getter. */\n    private _isMobileAccessibility = false;\n\n    /** Button element for handling touch hooks. */\n    private _hookDiv: HTMLElement | null;\n\n    /** This is the dom element that will sit over the PixiJS element. This is where the div overlays will go. */\n    private _div: HTMLElement;\n\n    /** A simple pool for storing divs. */\n    private _pool: AccessibleHTMLElement[] = [];\n\n    /** This is a tick used to check if an object is no longer being rendered. */\n    private _renderId = 0;\n\n    /** The array of currently active accessible items. */\n    private _children: Container[] = [];\n\n    /** Count to throttle div updates on android devices. */\n    private _androidUpdateCount = 0;\n\n    /**  The frequency to update the div elements. */\n    private readonly _androidUpdateFrequency = 500; // 2fps\n\n    // eslint-disable-next-line jsdoc/require-param\n    /**\n     * @param {WebGLRenderer|WebGPURenderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer: Renderer, private readonly _mobileInfo: isMobileResult = isMobile)\n    {\n        this._hookDiv = null;\n\n        if (_mobileInfo.tablet || _mobileInfo.phone)\n        {\n            this._createTouchHook();\n        }\n\n        // first we create a div that will sit over the PixiJS element. This is where the div overlays will go.\n        const div = document.createElement('div');\n\n        div.style.width = `${DIV_TOUCH_SIZE}px`;\n        div.style.height = `${DIV_TOUCH_SIZE}px`;\n        div.style.position = 'absolute';\n        div.style.top = `${DIV_TOUCH_POS_X}px`;\n        div.style.left = `${DIV_TOUCH_POS_Y}px`;\n        div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n\n        this._div = div;\n        this._renderer = renderer;\n\n        /**\n         * pre-bind the functions\n         * @type {Function}\n         * @private\n         */\n        this._onKeyDown = this._onKeyDown.bind(this);\n\n        /**\n         * pre-bind the functions\n         * @type {Function}\n         * @private\n         */\n        this._onMouseMove = this._onMouseMove.bind(this);\n\n        // let listen for tab.. once pressed we can fire up and show the accessibility layer\n        globalThis.addEventListener('keydown', this._onKeyDown, false);\n    }\n\n    /**\n     * Value of `true` if accessibility is currently active and accessibility layers are showing.\n     * @member {boolean}\n     * @readonly\n     */\n    get isActive(): boolean\n    {\n        return this._isActive;\n    }\n\n    /**\n     * Value of `true` if accessibility is enabled for touch devices.\n     * @member {boolean}\n     * @readonly\n     */\n    get isMobileAccessibility(): boolean\n    {\n        return this._isMobileAccessibility;\n    }\n\n    get hookDiv()\n    {\n        return this._hookDiv;\n    }\n\n    /**\n     * Creates the touch hooks.\n     * @private\n     */\n    private _createTouchHook(): void\n    {\n        const hookDiv = document.createElement('button');\n\n        hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.position = 'absolute';\n        hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n        hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n        hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n        hookDiv.style.backgroundColor = '#FF0000';\n        hookDiv.title = 'select to enable accessibility for this content';\n\n        hookDiv.addEventListener('focus', () =>\n        {\n            this._isMobileAccessibility = true;\n            this._activate();\n            this._destroyTouchHook();\n        });\n\n        document.body.appendChild(hookDiv);\n        this._hookDiv = hookDiv;\n    }\n\n    /**\n     * Destroys the touch hooks.\n     * @private\n     */\n    private _destroyTouchHook(): void\n    {\n        if (!this._hookDiv)\n        {\n            return;\n        }\n        document.body.removeChild(this._hookDiv);\n        this._hookDiv = null;\n    }\n\n    /**\n     * Activating will cause the Accessibility layer to be shown.\n     * This is called when a user presses the tab key.\n     * @private\n     */\n    private _activate(): void\n    {\n        if (this._isActive)\n        {\n            return;\n        }\n\n        this._isActive = true;\n\n        globalThis.document.addEventListener('mousemove', this._onMouseMove, true);\n        globalThis.removeEventListener('keydown', this._onKeyDown, false);\n\n        this._renderer.runners.postrender.add(this);\n        this._renderer.view.canvas.parentNode?.appendChild(this._div);\n    }\n\n    /**\n     * Deactivating will cause the Accessibility layer to be hidden.\n     * This is called when a user moves the mouse.\n     * @private\n     */\n    private _deactivate(): void\n    {\n        if (!this._isActive || this._isMobileAccessibility)\n        {\n            return;\n        }\n\n        this._isActive = false;\n\n        globalThis.document.removeEventListener('mousemove', this._onMouseMove, true);\n        globalThis.addEventListener('keydown', this._onKeyDown, false);\n\n        this._renderer.runners.postrender.remove(this);\n        this._div.parentNode?.removeChild(this._div);\n    }\n\n    /**\n     * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n     * @private\n     * @param {Container} container - The Container to check.\n     */\n    private _updateAccessibleObjects(container: Container): void\n    {\n        if (!container.visible || !container.accessibleChildren)\n        {\n            return;\n        }\n\n        if (container.accessible && container.isInteractive())\n        {\n            if (!container._accessibleActive)\n            {\n                this._addChild(container);\n            }\n\n            container._renderId = this._renderId;\n        }\n\n        const children = container.children;\n\n        if (children)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                this._updateAccessibleObjects(children[i] as Container);\n            }\n        }\n    }\n\n    /**\n     * Runner init called, view is available at this point.\n     * @ignore\n     */\n    public init(options?: AccessibilityOptions)\n    {\n        this.debug = options?.debug ?? this.debug;\n        this._renderer.runners.postrender.remove(this);\n    }\n\n    /**\n     * Runner postrender was called, ensure that all divs are mapped correctly to their Containers.\n     * Only fires while active.\n     * @ignore\n     */\n    public postrender(): void\n    {\n        /* On Android default web browser, tab order seems to be calculated by position rather than tabIndex,\n        *  moving buttons can cause focus to flicker between two buttons making it hard/impossible to navigate,\n        *  so I am just running update every half a second, seems to fix it.\n        */\n        const now = performance.now();\n\n        if (this._mobileInfo.android.device && now < this._androidUpdateCount)\n        {\n            return;\n        }\n\n        this._androidUpdateCount = now + this._androidUpdateFrequency;\n\n        if (!this._renderer.renderingToScreen || !this._renderer.view.canvas)\n        {\n            return;\n        }\n\n        // update children...\n        if (this._renderer.lastObjectRendered)\n        {\n            this._updateAccessibleObjects(this._renderer.lastObjectRendered as Container);\n        }\n\n        const { x, y, width, height } = this._renderer.view.canvas.getBoundingClientRect();\n        const { width: viewWidth, height: viewHeight, resolution } = this._renderer;\n\n        const sx = (width / viewWidth) * resolution;\n        const sy = (height / viewHeight) * resolution;\n\n        let div = this._div;\n\n        div.style.left = `${x}px`;\n        div.style.top = `${y}px`;\n        div.style.width = `${viewWidth}px`;\n        div.style.height = `${viewHeight}px`;\n\n        for (let i = 0; i < this._children.length; i++)\n        {\n            const child = this._children[i];\n\n            if (child._renderId !== this._renderId)\n            {\n                child._accessibleActive = false;\n\n                removeItems(this._children, i, 1);\n                this._div.removeChild(child._accessibleDiv);\n                this._pool.push(child._accessibleDiv);\n                child._accessibleDiv = null;\n\n                i--;\n            }\n            else\n            {\n                // map div to display..\n                div = child._accessibleDiv;\n                let hitArea = child.hitArea as Rectangle;\n                const wt = child.worldTransform;\n\n                if (child.hitArea)\n                {\n                    div.style.left = `${(wt.tx + (hitArea.x * wt.a)) * sx}px`;\n                    div.style.top = `${(wt.ty + (hitArea.y * wt.d)) * sy}px`;\n\n                    div.style.width = `${hitArea.width * wt.a * sx}px`;\n                    div.style.height = `${hitArea.height * wt.d * sy}px`;\n                }\n                else\n                {\n                    hitArea = child.getBounds().rectangle;\n\n                    this._capHitArea(hitArea);\n\n                    div.style.left = `${hitArea.x * sx}px`;\n                    div.style.top = `${hitArea.y * sy}px`;\n\n                    div.style.width = `${hitArea.width * sx}px`;\n                    div.style.height = `${hitArea.height * sy}px`;\n\n                    // update button titles and hints if they exist and they've changed\n                    if (div.title !== child.accessibleTitle && child.accessibleTitle !== null)\n                    {\n                        div.title = child.accessibleTitle || '';\n                    }\n                    if (div.getAttribute('aria-label') !== child.accessibleHint\n                        && child.accessibleHint !== null)\n                    {\n                        div.setAttribute('aria-label', child.accessibleHint || '');\n                    }\n                }\n\n                // the title or index may have changed, if so lets update it!\n                if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex)\n                {\n                    div.title = child.accessibleTitle || '';\n                    div.tabIndex = child.tabIndex;\n                    if (this.debug)\n                    {\n                        this._updateDebugHTML(div);\n                    }\n                }\n            }\n        }\n\n        // increment the render id..\n        this._renderId++;\n    }\n\n    /**\n     * private function that will visually add the information to the\n     * accessibility div\n     * @param {HTMLElement} div -\n     */\n    private _updateDebugHTML(div: AccessibleHTMLElement): void\n    {\n        div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n    }\n\n    /**\n     * Adjust the hit area based on the bounds of a display object\n     * @param {Rectangle} hitArea - Bounds of the child\n     */\n    private _capHitArea(hitArea: Rectangle): void\n    {\n        if (hitArea.x < 0)\n        {\n            hitArea.width += hitArea.x;\n            hitArea.x = 0;\n        }\n\n        if (hitArea.y < 0)\n        {\n            hitArea.height += hitArea.y;\n            hitArea.y = 0;\n        }\n\n        const { width: viewWidth, height: viewHeight } = this._renderer;\n\n        if (hitArea.x + hitArea.width > viewWidth)\n        {\n            hitArea.width = viewWidth - hitArea.x;\n        }\n\n        if (hitArea.y + hitArea.height > viewHeight)\n        {\n            hitArea.height = viewHeight - hitArea.y;\n        }\n    }\n\n    /**\n     * Adds a Container to the accessibility manager\n     * @private\n     * @param {Container} container - The child to make accessible.\n     */\n    private _addChild<T extends Container>(container: T): void\n    {\n        //    this.activate();\n\n        let div = this._pool.pop();\n\n        if (!div)\n        {\n            div = document.createElement('button');\n\n            div.style.width = `${DIV_TOUCH_SIZE}px`;\n            div.style.height = `${DIV_TOUCH_SIZE}px`;\n            div.style.backgroundColor = this.debug ? 'rgba(255,255,255,0.5)' : 'transparent';\n            div.style.position = 'absolute';\n            div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n            div.style.borderStyle = 'none';\n\n            // ARIA attributes ensure that button title and hint updates are announced properly\n            if (navigator.userAgent.toLowerCase().includes('chrome'))\n            {\n                // Chrome doesn't need aria-live to work as intended; in fact it just gets more confused.\n                div.setAttribute('aria-live', 'off');\n            }\n            else\n            {\n                div.setAttribute('aria-live', 'polite');\n            }\n\n            if (navigator.userAgent.match(/rv:.*Gecko\\//))\n            {\n                // FireFox needs this to announce only the new button name\n                div.setAttribute('aria-relevant', 'additions');\n            }\n            else\n            {\n                // required by IE, other browsers don't much care\n                div.setAttribute('aria-relevant', 'text');\n            }\n\n            div.addEventListener('click', this._onClick.bind(this));\n            div.addEventListener('focus', this._onFocus.bind(this));\n            div.addEventListener('focusout', this._onFocusOut.bind(this));\n        }\n\n        // set pointer events\n        div.style.pointerEvents = container.accessiblePointerEvents;\n        // set the type, this defaults to button!\n        div.type = container.accessibleType;\n\n        if (container.accessibleTitle && container.accessibleTitle !== null)\n        {\n            div.title = container.accessibleTitle;\n        }\n        else if (!container.accessibleHint\n            || container.accessibleHint === null)\n        {\n            div.title = `container ${container.tabIndex}`;\n        }\n\n        if (container.accessibleHint\n            && container.accessibleHint !== null)\n        {\n            div.setAttribute('aria-label', container.accessibleHint);\n        }\n\n        if (this.debug)\n        {\n            this._updateDebugHTML(div);\n        }\n\n        container._accessibleActive = true;\n        container._accessibleDiv = div;\n        div.container = container;\n\n        this._children.push(container);\n        this._div.appendChild(container._accessibleDiv);\n        container._accessibleDiv.tabIndex = container.tabIndex;\n    }\n\n    /**\n     * Dispatch events with the EventSystem.\n     * @param e\n     * @param type\n     * @private\n     */\n    private _dispatchEvent(e: UIEvent, type: string[]): void\n    {\n        const { container: target } = e.target as AccessibleHTMLElement;\n        const boundary = this._renderer.events.rootBoundary;\n        const event: FederatedEvent = Object.assign(new FederatedEvent(boundary), { target });\n\n        boundary.rootTarget = this._renderer.lastObjectRendered as Container;\n        type.forEach((type) => boundary.dispatchEvent(event, type));\n    }\n\n    /**\n     * Maps the div button press to pixi's EventSystem (click)\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */\n    private _onClick(e: MouseEvent): void\n    {\n        this._dispatchEvent(e, ['click', 'pointertap', 'tap']);\n    }\n\n    /**\n     * Maps the div focus events to pixi's EventSystem (mouseover)\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */\n    private _onFocus(e: FocusEvent): void\n    {\n        if (!(e.target as Element).getAttribute('aria-live'))\n        {\n            (e.target as Element).setAttribute('aria-live', 'assertive');\n        }\n\n        this._dispatchEvent(e, ['mouseover']);\n    }\n\n    /**\n     * Maps the div focus events to pixi's EventSystem (mouseout)\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */\n    private _onFocusOut(e: FocusEvent): void\n    {\n        if (!(e.target as Element).getAttribute('aria-live'))\n        {\n            (e.target as Element).setAttribute('aria-live', 'polite');\n        }\n\n        this._dispatchEvent(e, ['mouseout']);\n    }\n\n    /**\n     * Is called when a key is pressed\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */\n    private _onKeyDown(e: KeyboardEvent): void\n    {\n        if (e.keyCode !== KEY_CODE_TAB)\n        {\n            return;\n        }\n\n        this._activate();\n    }\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     * @private\n     * @param {MouseEvent} e - The mouse event.\n     */\n    private _onMouseMove(e: MouseEvent): void\n    {\n        if (e.movementX === 0 && e.movementY === 0)\n        {\n            return;\n        }\n\n        this._deactivate();\n    }\n\n    /** Destroys the accessibility manager */\n    public destroy(): void\n    {\n        this._destroyTouchHook();\n        this._div = null;\n\n        globalThis.document.removeEventListener('mousemove', this._onMouseMove, true);\n        globalThis.removeEventListener('keydown', this._onKeyDown);\n\n        this._pool = null;\n        this._children = null;\n        this._renderer = null;\n    }\n}\n"],"names":["type"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 724, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/node_modules/eventemitter3/index.js"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1000, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/node_modules/eventemitter3/index.mjs"],"sourcesContent":["import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n"],"names":[],"mappings":";;;AAAA;;;uCAGe,uKAAA,CAAA,UAAY","ignoreList":[0]}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"file":"getLocalBounds.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/bounds/getLocalBounds.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { warn } from '../../../utils/logging/warn';\nimport { boundsPool, matrixPool } from './utils/matrixAndBoundsPool';\n\nimport type { Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport type { Container } from '../Container';\nimport type { Bounds } from './Bounds';\n\nexport function getLocalBounds(target: Container, bounds: Bounds, relativeMatrix?: Matrix): Bounds\n{\n    bounds.clear();\n\n    relativeMatrix ||= Matrix.IDENTITY;\n\n    _getLocalBounds(target, bounds, relativeMatrix, target, true);\n\n    if (!bounds.isValid)\n    {\n        bounds.set(0, 0, 0, 0);\n    }\n\n    return bounds;\n}\n\nfunction _getLocalBounds(\n    target: Container,\n    bounds: Bounds,\n    parentTransform: Matrix,\n    rootContainer: Container,\n    isRoot: boolean\n): void\n{\n    let relativeTransform: Matrix;\n\n    if (!isRoot)\n    {\n        if (!target.visible || !target.measurable) return;\n\n        target.updateLocalTransform();\n\n        const localTransform = target.localTransform;\n\n        relativeTransform = matrixPool.get();\n        relativeTransform.appendFrom(localTransform, parentTransform);\n    }\n    else\n    {\n        relativeTransform = matrixPool.get();\n        relativeTransform = parentTransform.copyTo(relativeTransform);\n    }\n\n    const parentBounds = bounds;\n    const preserveBounds = !!target.effects.length;\n\n    if (preserveBounds)\n    {\n        bounds = boundsPool.get().clear();\n    }\n\n    if (target.boundsArea)\n    {\n        bounds.addRect(target.boundsArea, relativeTransform);\n    }\n    else\n    {\n        if (target.renderPipeId)\n        {\n            bounds.matrix = relativeTransform;\n            bounds.addBounds((target as Renderable).bounds);\n        }\n\n        const children = target.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            _getLocalBounds(children[i], bounds, relativeTransform, rootContainer, false);\n        }\n    }\n\n    if (preserveBounds)\n    {\n        for (let i = 0; i < target.effects.length; i++)\n        {\n            target.effects[i].addLocalBounds?.(bounds, rootContainer);\n        }\n\n        // TODO - make a add transformed bounds?\n        parentBounds.addBounds(bounds, Matrix.IDENTITY);\n\n        boundsPool.return(bounds);\n    }\n\n    matrixPool.return(relativeTransform);\n}\n\nexport function getParent(target: Container, root: Container, matrix: Matrix)\n{\n    const parent = target.parent;\n\n    if (!parent)\n    {\n        // we have reach the top of the tree!\n        // #if _DEBUG\n        warn('Item is not inside the root container');\n        // #endif\n\n        return;\n    }\n\n    if (parent !== root)\n    {\n        getParent(parent, root, matrix);\n\n        parent.updateLocalTransform();\n        matrix.append(parent.localTransform);\n    }\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"file":"measureMixin.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/container-mixins/measureMixin.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { Bounds } from '../bounds/Bounds';\nimport { getGlobalBounds } from '../bounds/getGlobalBounds';\nimport { getLocalBounds } from '../bounds/getLocalBounds';\nimport { checkChildrenDidChange } from '../utils/checkChildrenDidChange';\n\nimport type { Size } from '../../../maths/misc/Size';\nimport type { Container } from '../Container';\n\nexport type Optional<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\n\nexport interface MeasureMixinConstructor\n{\n    width?: number;\n    height?: number;\n}\nexport interface MeasureMixin extends Required<MeasureMixinConstructor>\n{\n    getSize(out?: Size): Size;\n    setSize(width: number, height?: number): void;\n    setSize(value: Optional<Size, 'height'>): void;\n    getLocalBounds(bounds?: Bounds): Bounds;\n    getBounds(skipUpdate?: boolean, bounds?: Bounds): Bounds;\n    _localBoundsCacheData: LocalBoundsCacheData;\n    _localBoundsCacheId: number;\n    _setWidth(width: number, localWidth: number): void;\n    _setHeight(height: number, localHeight: number): void;\n}\n\ninterface LocalBoundsCacheData\n{\n    data: number[];\n    index: number;\n    didChange: boolean;\n    localBounds: Bounds;\n}\n\nconst tempMatrix = new Matrix();\n\nexport const measureMixin: Partial<Container> = {\n\n    _localBoundsCacheId: -1,\n    _localBoundsCacheData: null,\n\n    _setWidth(value: number, localWidth: number)\n    {\n        const sign = Math.sign(this.scale.x) || 1;\n\n        if (localWidth !== 0)\n        {\n            this.scale.x = (value / localWidth) * sign;\n        }\n        else\n        {\n            this.scale.x = sign;\n        }\n    },\n\n    _setHeight(value: number, localHeight: number)\n    {\n        const sign = Math.sign(this.scale.y) || 1;\n\n        if (localHeight !== 0)\n        {\n            this.scale.y = (value / localHeight) * sign;\n        }\n        else\n        {\n            this.scale.y = sign;\n        }\n    },\n\n    /**\n     * Retrieves the local bounds of the container as a Bounds object.\n     * @returns - The bounding area.\n     * @memberof scene.Container#\n     */\n    getLocalBounds(): Bounds\n    {\n        if (!this._localBoundsCacheData)\n        {\n            this._localBoundsCacheData = {\n                data: [],\n                index: 1,\n                didChange: false,\n                localBounds: new Bounds()\n            };\n        }\n\n        const localBoundsCacheData = this._localBoundsCacheData;\n\n        localBoundsCacheData.index = 1;\n        localBoundsCacheData.didChange = false;\n\n        if (localBoundsCacheData.data[0] !== this._didViewChangeTick)\n        {\n            localBoundsCacheData.didChange = true;\n            localBoundsCacheData.data[0] = this._didViewChangeTick;\n        }\n\n        checkChildrenDidChange(this, localBoundsCacheData);\n\n        if (localBoundsCacheData.didChange)\n        {\n            getLocalBounds(this, localBoundsCacheData.localBounds, tempMatrix);\n        }\n\n        return localBoundsCacheData.localBounds;\n    },\n\n    /**\n     * Calculates and returns the (world) bounds of the display object as a [Rectangle]{@link Rectangle}.\n     * @param skipUpdate - Setting to `true` will stop the transforms of the scene graph from\n     *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n     *  nice performance boost.\n     * @param bounds - Optional bounds to store the result of the bounds calculation.\n     * @returns - The minimum axis-aligned rectangle in world space that fits around this object.\n     * @memberof scene.Container#\n     */\n    getBounds(skipUpdate?: boolean, bounds?: Bounds): Bounds\n    {\n        return getGlobalBounds(this, skipUpdate, bounds || new Bounds());\n    },\n} as Container;\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAqCA,MAAM,UAAA,GAAa,uKAAI,SAAO,EAAA,CAAA;AAEvB,MAAM,YAAmC,GAAA;IAE5C,mBAAqB,EAAA,CAAA,CAAA;IACrB,qBAAuB,EAAA,IAAA;IAEvB,SAAA,EAAU,KAAA,EAAe,UACzB,EAAA;QACI,MAAM,OAAO,IAAK,CAAA,IAAA,CAAK,IAAK,CAAA,KAAA,CAAM,CAAC,CAAK,IAAA,CAAA,CAAA;QAExC,IAAI,eAAe,CACnB,EAAA;YACS,IAAA,CAAA,KAAA,CAAM,CAAK,GAAA,KAAA,GAAQ,UAAc,GAAA,IAAA,CAAA;QAAA,CAG1C,MAAA;YACI,IAAA,CAAK,KAAA,CAAM,CAAI,GAAA,IAAA,CAAA;QAAA,CACnB;IAAA,CACJ;IAEA,UAAA,EAAW,KAAA,EAAe,WAC1B,EAAA;QACI,MAAM,OAAO,IAAK,CAAA,IAAA,CAAK,IAAK,CAAA,KAAA,CAAM,CAAC,CAAK,IAAA,CAAA,CAAA;QAExC,IAAI,gBAAgB,CACpB,EAAA;YACS,IAAA,CAAA,KAAA,CAAM,CAAK,GAAA,KAAA,GAAQ,WAAe,GAAA,IAAA,CAAA;QAAA,CAG3C,MAAA;YACI,IAAA,CAAK,KAAA,CAAM,CAAI,GAAA,IAAA,CAAA;QAAA,CACnB;IAAA,CACJ;IAAA;;;;GAAA,GAOA,cACA,GAAA;QACQ,IAAA,CAAC,IAAA,CAAK,qBACV,EAAA;YACI,IAAA,CAAK,qBAAwB,GAAA;gBACzB,MAAM,EAAC;gBACP,KAAO,EAAA,CAAA;gBACP,SAAW,EAAA,KAAA;gBACX,WAAA,EAAa,IAAI,yLAAO,EAAA;YAAA,CAC5B,CAAA;QAAA,CACJ;QAEA,MAAM,uBAAuB,IAAK,CAAA,qBAAA,CAAA;QAElC,oBAAA,CAAqB,KAAQ,GAAA,CAAA,CAAA;QAC7B,oBAAA,CAAqB,SAAY,GAAA,KAAA,CAAA;QAEjC,IAAI,oBAAqB,CAAA,IAAA,CAAK,CAAC,CAAA,KAAM,IAAA,CAAK,kBAC1C,EAAA;YACI,oBAAA,CAAqB,SAAY,GAAA,IAAA,CAAA;YACZ,oBAAA,CAAA,IAAA,CAAK,CAAC,CAAA,GAAI,IAAK,CAAA,kBAAA,CAAA;QAAA,CACxC;2MAEA,yBAAA,EAAuB,IAAA,EAAM,oBAAoB,CAAA,CAAA;QAEjD,IAAI,qBAAqB,SACzB,EAAA;wMACmB,iBAAA,EAAA,IAAA,EAAM,oBAAqB,CAAA,WAAA,EAAa,UAAU,CAAA,CAAA;QAAA,CACrE;QAEA,OAAO,oBAAqB,CAAA,WAAA,CAAA;IAAA,CAChC;IAAA;;;;;;;;GAAA,GAWA,SAAA,EAAU,UAAA,EAAsB,MAChC,EAAA;QACI,oMAAO,kBAAA,EAAgB,IAAM,EAAA,UAAA,EAAY,MAAU,IAAA,oLAAI,SAAA,EAAQ,CAAA,CAAA;IAAA,CACnE;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"file":"sortMixin.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/container-mixins/sortMixin.ts"],"sourcesContent":["import type { Container } from '../Container';\n\nexport interface SortMixinConstructor\n{\n    zIndex?: number;\n    sortDirty?: boolean;\n    sortableChildren?: boolean;\n}\nexport interface SortMixin extends Required<SortMixinConstructor>\n{\n    _zIndex: number;\n\n    sortChildren: () => void;\n    depthOfChildModified: () => void;\n}\n\nexport const sortMixin: Partial<Container> = {\n    _zIndex: 0,\n    /**\n     * Should children be sorted by zIndex at the next render call.\n     *\n     * Will get automatically set to true if a new child is added, or if a child's zIndex changes.\n     * @type {boolean}\n     * @memberof scene.Container#\n     */\n    sortDirty: false,\n    /**\n     * If set to true, the container will sort its children by `zIndex` value\n     * when the next render is called, or manually if `sortChildren()` is called.\n     *\n     * This actually changes the order of elements in the array, so should be treated\n     * as a basic solution that is not performant compared to other solutions,\n     * such as {@link https://github.com/pixijs/layers PixiJS Layers}\n     *\n     * Also be aware of that this may not work nicely with the `addChildAt()` function,\n     * as the `zIndex` sorting may cause the child to automatically sorted to another position.\n     * @type {boolean}\n     * @memberof scene.Container#\n     */\n    sortableChildren: false,\n\n    /**\n     * The zIndex of the container.\n     *\n     * Setting this value, will automatically set the parent to be sortable. Children will be automatically\n     * sorted by zIndex value; a higher value will mean it will be moved towards the end of the array,\n     * and thus rendered on top of other display objects within the same container.\n     * @see scene.Container#sortableChildren\n     * @memberof scene.Container#\n     */\n    get zIndex()\n    {\n        return this._zIndex;\n    },\n\n    set zIndex(value: number)\n    {\n        if (this._zIndex === value) return;\n\n        this._zIndex = value;\n\n        this.depthOfChildModified();\n    },\n\n    depthOfChildModified()\n    {\n        if (this.parent)\n        {\n            this.parent.sortableChildren = true;\n            this.parent.sortDirty = true;\n        }\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n    },\n\n    /**\n     * Sorts children by zIndex.\n     * @memberof scene.Container#\n     */\n    sortChildren()\n    {\n        if (!this.sortDirty) return;\n\n        this.sortDirty = false;\n\n        this.children.sort(sortChildren);\n    },\n} as Container;\n\nfunction sortChildren(a: Container, b: Container): number\n{\n    return a._zIndex - b._zIndex;\n}\n"],"names":[],"mappings":";;;;AAgBO,MAAM,SAAgC,GAAA;IACzC,OAAS,EAAA,CAAA;IAAA;;;;;;GAAA,GAQT,SAAW,EAAA,KAAA;IAAA;;;;;;;;;;;;GAAA,GAcX,gBAAkB,EAAA,KAAA;IAAA;;;;;;;;GAAA,GAWlB,IAAI,MACJ,IAAA;QACI,OAAO,IAAK,CAAA,OAAA,CAAA;IAAA,CAChB;IAEA,IAAI,QAAO,KACX,CAAA;QACI,IAAI,IAAA,CAAK,OAAY,KAAA,KAAA,EAAO,OAAA;QAE5B,IAAA,CAAK,OAAU,GAAA,KAAA,CAAA;QAEf,IAAA,CAAK,oBAAqB,EAAA,CAAA;IAAA,CAC9B;IAEA,oBACA,GAAA;QACI,IAAI,IAAA,CAAK,MACT,EAAA;YACI,IAAA,CAAK,MAAA,CAAO,gBAAmB,GAAA,IAAA,CAAA;YAC/B,IAAA,CAAK,MAAA,CAAO,SAAY,GAAA,IAAA,CAAA;QAAA,CAC5B;QAEA,IAAI,IAAA,CAAK,iBACT,EAAA;YACI,IAAA,CAAK,iBAAA,CAAkB,kBAAqB,GAAA,IAAA,CAAA;QAAA,CAChD;IAAA,CACJ;IAAA;;;GAAA,GAMA,YACA,GAAA;QACI,IAAI,CAAC,IAAK,CAAA,SAAA,EAAW,OAAA;QAErB,IAAA,CAAK,SAAY,GAAA,KAAA,CAAA;QAEZ,IAAA,CAAA,QAAA,CAAS,IAAA,CAAK,YAAY,CAAA,CAAA;IAAA,CACnC;AACJ,EAAA;AAEA,SAAS,YAAA,CAAa,CAAA,EAAc,CACpC,EAAA;IACW,OAAA,CAAA,CAAE,OAAA,GAAU,CAAE,CAAA,OAAA,CAAA;AACzB","ignoreList":[0]}},
    {"offset": {"line": 1242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"file":"Container.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/Container.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { Color, type ColorSource } from '../../color/Color';\nimport { cullingMixin } from '../../culling/cullingMixin';\nimport { Matrix } from '../../maths/matrix/Matrix';\nimport { DEG_TO_RAD, RAD_TO_DEG } from '../../maths/misc/const';\nimport { ObservablePoint } from '../../maths/point/ObservablePoint';\nimport { uid } from '../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation';\nimport { BigPool } from '../../utils/pool/PoolGroup';\nimport { cacheAsTextureMixin } from './container-mixins/cacheAsTextureMixin';\nimport { childrenHelperMixin } from './container-mixins/childrenHelperMixin';\nimport { effectsMixin } from './container-mixins/effectsMixin';\nimport { findMixin } from './container-mixins/findMixin';\nimport { bgr2rgb, getGlobalMixin } from './container-mixins/getGlobalMixin';\nimport { measureMixin } from './container-mixins/measureMixin';\nimport { onRenderMixin } from './container-mixins/onRenderMixin';\nimport { sortMixin } from './container-mixins/sortMixin';\nimport { toLocalGlobalMixin } from './container-mixins/toLocalGlobalMixin';\nimport { RenderGroup } from './RenderGroup';\nimport { assignWithIgnore } from './utils/assignWithIgnore';\n\nimport type { Size } from '../../maths/misc/Size';\nimport type { PointData } from '../../maths/point/PointData';\nimport type { Rectangle } from '../../maths/shapes/Rectangle';\nimport type { BLEND_MODES } from '../../rendering/renderers/shared/state/const';\nimport type { Dict } from '../../utils/types';\nimport type { Optional } from './container-mixins/measureMixin';\nimport type { DestroyOptions } from './destroyTypes';\n\nexport type ContainerChild = Container;\n\n/**\n * This is where you'll find all the display objects available in Pixi.\n *\n * All display objects inherit from the {@link scene.Container} class. You can use a `Container` for simple grouping of\n * other display objects. Here's all the available display object classes.\n *\n * - {@link scene.Container} is the base class for all display objects that act as a container for other objects.\n *   - {@link scene.Sprite} is a display object that uses a texture\n *      - {@link scene.AnimatedSprite} is a sprite that can play animations\n *   - {@link scene.TilingSprite} a fast way of rendering a tiling image\n *   - {@link scene.NineSliceSprite} allows you to stretch a texture using 9-slice scaling\n *   - {@link scene.Graphics} is a graphic object that can be drawn to the screen.\n *   - {@link scene.Mesh} empowers you to have maximum flexibility to render any kind of visuals you can think of\n *      - {@link scene.MeshSimple} mimics Mesh, providing easy-to-use constructor arguments\n *      - {@link scene.MeshPlane} allows you to draw a texture across several points and then manipulate these points\n *      - {@link scene.MeshRope} allows you to draw a texture across several points and then manipulate these points\n *   - {@link scene.Text} render text using custom fonts\n *      - {@link scene.BitmapText} render text using a bitmap font\n *      - {@link scene.HTMLText} render text using HTML and CSS\n * @namespace scene\n */\n\n// as pivot and skew are the least used properties of a container, we can use this optimisation\n// to avoid allocating lots of unnecessary objects for them.\nconst defaultSkew = new ObservablePoint(null);\nconst defaultPivot = new ObservablePoint(null);\nconst defaultScale = new ObservablePoint(null, 1, 1);\n\nexport interface ContainerEvents<C extends ContainerChild> extends PixiMixins.ContainerEvents\n{\n    added: [container: Container];\n    childAdded: [child: C, container: Container, index: number];\n    removed: [container: Container];\n    childRemoved: [child: C, container: Container, index: number];\n    destroyed: [container: Container];\n}\n\ntype AnyEvent = {\n    // The following is a hack to allow any custom event while maintaining type safety.\n    // For some reason, the tsc compiler gets angry about error TS1023\n    // \"An index signature parameter type must be either 'string' or 'number'.\"\n    // This is really odd since ({}&string) should interpret as string, but then again\n    // there is some black magic behind why this works in the first place.\n    // Closest thing to an explanation:\n    // https://stackoverflow.com/questions/70144348/why-does-a-union-of-type-literals-and-string-cause-ide-code-completion-wh\n    //\n    // Side note, we disable @typescript-eslint/ban-types since {}&string is the only syntax that works.\n    // Nor of the Record/unknown/never alternatives work.\n    [K: ({} & string) | ({} & symbol)]: any;\n};\n\nexport const UPDATE_COLOR = 0b0001;\nexport const UPDATE_BLEND = 0b0010;\nexport const UPDATE_VISIBLE = 0b0100;\nexport const UPDATE_TRANSFORM = 0b1000;\n\nexport interface UpdateTransformOptions\n{\n    x: number;\n    y: number;\n    scaleX: number;\n    scaleY: number;\n    rotation: number;\n    skewX: number;\n    skewY: number;\n    pivotX: number;\n    pivotY: number;\n}\n\n/**\n * Constructor options used for `Container` instances.\n * ```js\n * const container = new Container({\n *    position: new Point(100, 200),\n *    scale: new Point(2, 2),\n *    rotation: Math.PI / 2,\n * });\n * ```\n * @memberof scene\n * @see scene.Container\n */\nexport interface ContainerOptions<C extends ContainerChild = ContainerChild> extends PixiMixins.ContainerOptions\n{\n    /** @see scene.Container#isRenderGroup */\n    isRenderGroup?: boolean;\n\n    /** @see scene.Container#blendMode */\n    blendMode?: BLEND_MODES;\n    /** @see scene.Container#tint */\n    tint?: ColorSource;\n\n    /** @see scene.Container#alpha */\n    alpha?: number;\n    /** @see scene.Container#angle */\n    angle?: number;\n    /** @see scene.Container#children */\n    children?: C[];\n    /** @see scene.Container#parent */\n    parent?: Container;\n    /** @see scene.Container#renderable */\n    renderable?: boolean;\n    /** @see scene.Container#rotation */\n    rotation?: number;\n    /** @see scene.Container#scale */\n    scale?: PointData | number;\n    /** @see scene.Container#pivot */\n    pivot?: PointData | number;\n    /** @see scene.Container#position */\n    position?: PointData;\n    /** @see scene.Container#skew */\n    skew?: PointData;\n    /** @see scene.Container#visible */\n    visible?: boolean;\n    /** @see scene.Container#x */\n    x?: number;\n    /** @see scene.Container#y */\n    y?: number;\n    /** @see scene.Container#boundArea */\n    boundsArea?: Rectangle;\n}\n\nexport interface Container<C extends ContainerChild>\n    extends PixiMixins.Container<C>, EventEmitter<ContainerEvents<C> & AnyEvent> {}\n\n/**\n * Container is a general-purpose display object that holds children. It also adds built-in support for advanced\n * rendering features like masking and filtering.\n *\n * It is the base class of all display objects that act as a container for other objects, including Graphics\n * and Sprite.\n *\n * <details id=\"transforms\">\n *\n * <summary>Transforms</summary>\n *\n * The [transform]{@link scene.Container#transform} of a display object describes the projection from its\n * local coordinate space to its parent's local coordinate space. The following properties are derived\n * from the transform:\n *\n * <table>\n *   <thead>\n *     <tr>\n *       <th>Property</th>\n *       <th>Description</th>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td>[pivot]{@link scene.Container#pivot}</td>\n *       <td>\n *         Invariant under rotation, scaling, and skewing. The projection of into the parent's space of the pivot\n *         is equal to position, regardless of the other three transformations. In other words, It is the center of\n *         rotation, scaling, and skewing.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[position]{@link scene.Container#position}</td>\n *       <td>\n *         Translation. This is the position of the [pivot]{@link scene.Container#pivot} in the parent's local\n *         space. The default value of the pivot is the origin (0,0). If the top-left corner of your display object\n *         is (0,0) in its local space, then the position will be its top-left corner in the parent's local space.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[scale]{@link scene.Container#scale}</td>\n *       <td>\n *         Scaling. This will stretch (or compress) the display object's projection. The scale factors are along the\n *         local coordinate axes. In other words, the display object is scaled before rotated or skewed. The center\n *         of scaling is the [pivot]{@link scene.Container#pivot}.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[rotation]{@link scene.Container#rotation}</td>\n *       <td>\n *          Rotation. This will rotate the display object's projection by this angle (in radians).\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[skew]{@link scene.Container#skew}</td>\n *       <td>\n *         <p>Skewing. This can be used to deform a rectangular display object into a parallelogram.</p>\n *         <p>\n *         In PixiJS, skew has a slightly different behaviour than the conventional meaning. It can be\n *         thought of the net rotation applied to the coordinate axes (separately). For example, if \"skew.x\" is\n *         ⍺ and \"skew.y\" is β, then the line x = 0 will be rotated by ⍺ (y = -x*cot⍺) and the line y = 0 will be\n *         rotated by β (y = x*tanβ). A line y = x*tanϴ (i.e. a line at angle ϴ to the x-axis in local-space) will\n *         be rotated by an angle between ⍺ and β.\n *         </p>\n *         <p>\n *         It can be observed that if skew is applied equally to both axes, then it will be equivalent to applying\n *         a rotation. Indeed, if \"skew.x\" = -ϴ and \"skew.y\" = ϴ, it will produce an equivalent of \"rotation\" = ϴ.\n *         </p>\n *         <p>\n *         Another quite interesting observation is that \"skew.x\", \"skew.y\", rotation are commutative operations. Indeed,\n *         because rotation is essentially a careful combination of the two.\n *         </p>\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[angle]{@link scene.Container#angle}</td>\n *       <td>Rotation. This is an alias for [rotation]{@link scene.Container#rotation}, but in degrees.</td>\n *     </tr>\n *     <tr>\n *       <td>[x]{@link scene.Container#x}</td>\n *       <td>Translation. This is an alias for position.x!</td>\n *     </tr>\n *     <tr>\n *       <td>[y]{@link scene.Container#y}</td>\n *       <td>Translation. This is an alias for position.y!</td>\n *     </tr>\n *     <tr>\n *       <td>[width]{@link scene.Container#width}</td>\n *       <td>\n *         Implemented in [Container]{@link scene.Container}. Scaling. The width property calculates scale.x by dividing\n *         the \"requested\" width by the local bounding box width. It is indirectly an abstraction over scale.x, and there\n *         is no concept of user-defined width.\n *       </td>\n *     </tr>\n *     <tr>\n *       <td>[height]{@link scene.Container#height}</td>\n *       <td>\n *         Implemented in [Container]{@link scene.Container}. Scaling. The height property calculates scale.y by dividing\n *         the \"requested\" height by the local bounding box height. It is indirectly an abstraction over scale.y, and there\n *         is no concept of user-defined height.\n *       </td>\n *     </tr>\n *   </tbody>\n * </table>\n * </details>\n *\n * <details id=\"alpha\">\n * <summary>Alpha</summary>\n *\n * This alpha sets a display object's **relative opacity** w.r.t its parent. For example, if the alpha of a display\n * object is 0.5 and its parent's alpha is 0.5, then it will be rendered with 25% opacity (assuming alpha is not\n * applied on any ancestor further up the chain).\n * </details>\n *\n * <details id=\"visible\">\n * <summary>Renderable vs Visible</summary>\n *\n * The `renderable` and `visible` properties can be used to prevent a display object from being rendered to the\n * screen. However, there is a subtle difference between the two. When using `renderable`, the transforms  of the display\n * object (and its children subtree) will continue to be calculated. When using `visible`, the transforms will not\n * be calculated.\n * ```ts\n * import { BlurFilter, Container, Graphics, Sprite } from 'pixi.js';\n *\n * const container = new Container();\n * const sprite = Sprite.from('https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/IaUrttj.png');\n *\n * sprite.width = 512;\n * sprite.height = 512;\n *\n * // Adds a sprite as a child to this container. As a result, the sprite will be rendered whenever the container\n * // is rendered.\n * container.addChild(sprite);\n *\n * // Blurs whatever is rendered by the container\n * container.filters = [new BlurFilter()];\n *\n * // Only the contents within a circle at the center should be rendered onto the screen.\n * container.mask = new Graphics()\n *     .beginFill(0xffffff)\n *     .drawCircle(sprite.width / 2, sprite.height / 2, Math.min(sprite.width, sprite.height) / 2)\n *     .endFill();\n * ```\n *\n * </details>\n *\n * <details id=\"renderGroup\">\n * <summary>RenderGroup</summary>\n *\n * In PixiJS v8, containers can be set to operate in 'render group mode',\n * transforming them into entities akin to a stage in traditional rendering paradigms.\n * A render group is a root renderable entity, similar to a container,\n * but it's rendered in a separate pass with its own unique set of rendering instructions.\n * This approach enhances rendering efficiency and organization, particularly in complex scenes.\n *\n * You can enable render group mode on any container using container.enableRenderGroup()\n * or by initializing a new container with the render group property set to true (new Container({isRenderGroup: true})).\n *  The method you choose depends on your specific use case and setup requirements.\n *\n * An important aspect of PixiJS’s rendering process is the automatic treatment of rendered scenes as render groups.\n * This conversion streamlines the rendering process, but understanding when and how this happens is crucial\n * to fully leverage its benefits.\n *\n * One of the key advantages of using render groups is the performance efficiency in moving them. Since transformations\n *  are applied at the GPU level, moving a render group, even one with complex and numerous children,\n * doesn't require recalculating the rendering instructions or performing transformations on each child.\n * This makes operations like panning a large game world incredibly efficient.\n *\n * However, it's crucial to note that render groups do not batch together.\n * This means that turning every container into a render group could actually slow things down,\n * as each render group is processed separately. It's best to use render groups judiciously, at a broader level,\n * rather than on a per-child basis.\n * This approach ensures you get the performance benefits without overburdening the rendering process.\n *\n * RenderGroups maintain their own set of rendering instructions,\n * ensuring that changes or updates within a render group don't affect the rendering\n * instructions of its parent or other render groups.\n *  This isolation ensures more stable and predictable rendering behavior.\n *\n * Additionally, renderGroups can be nested, allowing for powerful options in organizing different aspects of your scene.\n * This feature is particularly beneficial for separating complex game graphics from UI elements,\n * enabling intricate and efficient scene management in complex applications.\n *\n * This means that Containers have 3 levels of matrix to be mindful of:\n *\n * 1. localTransform, this is the transform of the container based on its own properties\n * 2. groupTransform, this it the transform of the container relative to the renderGroup it belongs too\n * 3. worldTransform, this is the transform of the container relative to the Scene being rendered\n * </details>\n * @memberof scene\n */\nexport class Container<C extends ContainerChild = ContainerChild> extends EventEmitter<ContainerEvents<C> & AnyEvent>\n{\n    /**\n     * Mixes all enumerable properties and methods from a source object to Container.\n     * @param source - The source of properties and methods to mix in.\n     */\n    public static mixin(source: Dict<any>): void\n    {\n        Object.defineProperties(Container.prototype, Object.getOwnPropertyDescriptors(source));\n    }\n\n    /** unique id for this container */\n    public readonly uid: number = uid('renderable');\n\n    /** @private */\n    public _updateFlags = 0b1111;\n\n    // the render group this container owns\n    /** @private */\n    public renderGroup: RenderGroup = null;\n    // the render group this container belongs to\n    /** @private */\n    public parentRenderGroup: RenderGroup = null;\n    // the index of the container in the render group\n    /** @private */\n    public parentRenderGroupIndex: number = 0;\n\n    // set to true if the container has changed. It is reset once the changes have been applied\n    // by the transform system\n    // its here to stop ensure that when things change, only one update gets registers with the transform system\n    /** @private */\n    public didChange = false;\n    // same as above, but for the renderable\n    /** @private */\n    public didViewUpdate = false;\n\n    // how deep is the container relative to its render group..\n    // unless the element is the root render group - it will be relative to its parent\n    /** @private */\n    public relativeRenderGroupDepth = 0;\n\n    /**\n     * The array of children of this container.\n     * @readonly\n     */\n    public children: C[] = [];\n    /** The display object container that contains this display object. */\n    public parent: Container = null;\n\n    // used internally for changing up the render order.. mainly for masks and filters\n    // TODO setting this should cause a rebuild??\n    /** @private */\n    public includeInBuild = true;\n    /** @private */\n    public measurable = true;\n    /** @private */\n    public isSimple = true;\n\n    // / /////////////Transform related props//////////////\n\n    // used by the transform system to check if a container needs to be updated that frame\n    // if the tick matches the current transform system tick, it is not updated again\n    /**\n     * @internal\n     * @ignore\n     */\n    public updateTick = -1;\n\n    /**\n     * Current transform of the object based on local factors: position, scale, other stuff.\n     * @readonly\n     */\n    public localTransform: Matrix = new Matrix();\n    /**\n     * The relative group transform is a transform relative to the render group it belongs too. It will include all parent\n     * transforms and up to the render group (think of it as kind of like a stage - but the stage can be nested).\n     * If this container is is self a render group matrix will be relative to its parent render group\n     * @readonly\n     */\n    public relativeGroupTransform: Matrix = new Matrix();\n    /**\n     * The group transform is a transform relative to the render group it belongs too.\n     * If this container is render group then this will be an identity matrix. other wise it\n     * will be the same as the relativeGroupTransform.\n     * Use this value when actually rendering things to the screen\n     * @readonly\n     */\n    public groupTransform: Matrix = this.relativeGroupTransform;\n\n    // the global transform taking into account the render group and all parents\n    private _worldTransform: Matrix;\n\n    /** If the object has been destroyed via destroy(). If true, it should not be used. */\n    public destroyed = false;\n\n    // transform data..\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * @internal\n     * @ignore\n     */\n    public _position: ObservablePoint = new ObservablePoint(this, 0, 0);\n\n    /**\n     * The scale factor of the object.\n     * @internal\n     * @ignore\n     */\n    public _scale: ObservablePoint = defaultScale;\n\n    /**\n     * The pivot point of the container that it rotates around.\n     * @internal\n     * @ignore\n     */\n    public _pivot: ObservablePoint = defaultPivot;\n\n    /**\n     * The skew amount, on the x and y axis.\n     * @internal\n     * @ignore\n     */\n    public _skew: ObservablePoint = defaultSkew;\n\n    /**\n     * The X-coordinate value of the normalized local X axis,\n     * the first column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _cx = 1;\n\n    /**\n     * The Y-coordinate value of the normalized local X axis,\n     * the first column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _sx = 0;\n\n    /**\n     * The X-coordinate value of the normalized local Y axis,\n     * the second column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _cy = 0;\n\n    /**\n     * The Y-coordinate value of the normalized local Y axis,\n     * the second column of the local transformation matrix without a scale.\n     * @internal\n     * @ignore\n     */\n    public _sy = 1;\n\n    /**\n     * The rotation amount.\n     * @internal\n     * @ignore\n     */\n    private _rotation = 0;\n\n    // / COLOR related props //////////////\n\n    // color stored as ABGR\n    public localColor = 0xFFFFFF;\n    public localAlpha = 1;\n\n    public groupAlpha = 1; // A\n    public groupColor = 0xFFFFFF; // BGR\n    public groupColorAlpha = 0xFFFFFFFF; // ABGR\n\n    // / BLEND related props //////////////\n\n    /**\n     * @internal\n     * @ignore\n     */\n    public localBlendMode: BLEND_MODES = 'inherit';\n    /**\n     * @internal\n     * @ignore\n     */\n    public groupBlendMode: BLEND_MODES = 'normal';\n\n    // / VISIBILITY related props //////////////\n\n    // visibility\n    // 0b11\n    // first bit is visible, second bit is renderable\n    /**\n     * This property holds three bits: culled, visible, renderable\n     * the third bit represents culling (0 = culled, 1 = not culled) 0b100\n     * the second bit represents visibility (0 = not visible, 1 = visible) 0b010\n     * the first bit represents renderable (0 = not renderable, 1 = renderable) 0b001\n     * @internal\n     * @ignore\n     */\n    public localDisplayStatus = 0b111; // 0b11 | 0b10 | 0b01 | 0b00\n    /**\n     * @internal\n     * @ignore\n     */\n    public globalDisplayStatus = 0b111; // 0b11 | 0b10 | 0b01 | 0b00\n\n    public readonly renderPipeId: string;\n\n    /**\n     * An optional bounds area for this container. Setting this rectangle will stop the renderer\n     * from recursively measuring the bounds of each children and instead use this single boundArea.\n     * This is great for optimisation! If for example you have a 1000 spinning particles and you know they all sit\n     * within a specific bounds, then setting it will mean the renderer will not need to measure the\n     * 1000 children to find the bounds. Instead it will just use the bounds you set.\n     */\n    public boundsArea: Rectangle;\n\n    /**\n     * A value that increments each time the containe is modified\n     * eg children added, removed etc\n     * @ignore\n     */\n    public _didContainerChangeTick = 0;\n    /**\n     * A value that increments each time the container view is modified\n     * eg texture swap, geometry change etc\n     * @ignore\n     */\n    public _didViewChangeTick = 0;\n\n    /**\n     * We now use the _didContainerChangeTick and _didViewChangeTick to track changes\n     * @deprecated since 8.2.6\n     * @ignore\n     */\n    set _didChangeId(value: number)\n    {\n        this._didViewChangeTick = (value >> 12) & 0xFFF; // Extract the upper 12 bits\n        this._didContainerChangeTick = value & 0xFFF; // Extract the lower 12 bits\n    }\n\n    get _didChangeId(): number\n    {\n        return (this._didContainerChangeTick & 0xfff) | ((this._didViewChangeTick & 0xfff) << 12);\n    }\n\n    /**\n     * property that tracks if the container transform has changed\n     * @ignore\n     */\n    private _didLocalTransformChangeId = -1;\n\n    constructor(options: ContainerOptions<C> = {})\n    {\n        super();\n\n        this.effects = [];\n        assignWithIgnore(this, options, {\n            children: true,\n            parent: true,\n            effects: true,\n        });\n\n        options.children?.forEach((child) => this.addChild(child));\n        options.parent?.addChild(this);\n    }\n\n    /**\n     * Adds one or more children to the container.\n     *\n     * Multiple items can be added like so: `myContainer.addChild(thingOne, thingTwo, thingThree)`\n     * @param {...Container} children - The Container(s) to add to the container\n     * @returns {Container} - The first child that was added.\n     */\n    public addChild<U extends C[]>(...children: U): U[0]\n    {\n        // #if _DEBUG\n        if (!this.allowChildren)\n        {\n            deprecation(v8_0_0, 'addChild: Only Containers will be allowed to add children in v8.0.0');\n        }\n        // #endif\n\n        if (children.length > 1)\n        {\n            // loop through the array and add all children\n            for (let i = 0; i < children.length; i++)\n            {\n                this.addChild(children[i]);\n            }\n\n            return children[0];\n        }\n\n        const child = children[0];\n\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (child.parent === this)\n        {\n            this.children.splice(this.children.indexOf(child), 1);\n            this.children.push(child);\n\n            if (renderGroup)\n            {\n                renderGroup.structureDidChange = true;\n            }\n\n            return child;\n        }\n\n        if (child.parent)\n        {\n            // TODO Optimisation...if the parent has the same render group, this does not need to change!\n            child.parent.removeChild(child);\n        }\n\n        this.children.push(child);\n\n        if (this.sortableChildren) this.sortDirty = true;\n\n        child.parent = this;\n\n        child.didChange = true;\n\n        // TODO - OPtimise this? could check what the parent has set?\n        child._updateFlags = 0b1111;\n\n        if (renderGroup)\n        {\n            renderGroup.addChild(child);\n        }\n\n        this.emit('childAdded', child, this, this.children.length - 1);\n        child.emit('added', this);\n\n        this._didViewChangeTick++;\n\n        if (child._zIndex !== 0)\n        {\n            child.depthOfChildModified();\n        }\n\n        return child;\n    }\n\n    /**\n     * Removes one or more children from the container.\n     * @param {...Container} children - The Container(s) to remove\n     * @returns {Container} The first child that was removed.\n     */\n    public removeChild<U extends C[]>(...children: U): U[0]\n    {\n        // if there is only one argument we can bypass looping through the them\n        if (children.length > 1)\n        {\n            // loop through the arguments property and remove all children\n            for (let i = 0; i < children.length; i++)\n            {\n                this.removeChild(children[i]);\n            }\n\n            return children[0];\n        }\n\n        const child = children[0];\n\n        const index = this.children.indexOf(child);\n\n        if (index > -1)\n        {\n            this._didViewChangeTick++;\n\n            this.children.splice(index, 1);\n\n            if (this.renderGroup)\n            {\n                this.renderGroup.removeChild(child);\n            }\n            else if (this.parentRenderGroup)\n            {\n                this.parentRenderGroup.removeChild(child);\n            }\n\n            child.parent = null;\n            this.emit('childRemoved', child, this, index);\n            child.emit('removed', this);\n        }\n\n        return child;\n    }\n\n    /** @ignore */\n    public _onUpdate(point?: ObservablePoint)\n    {\n        if (point)\n        {\n            //   this.updateFlags |= UPDATE_TRANSFORM;\n\n            if (point === this._skew)\n            {\n                this._updateSkew();\n            }\n        }\n\n        this._didContainerChangeTick++;\n\n        if (this.didChange) return;\n        this.didChange = true;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.onChildUpdate(this);\n        }\n    }\n\n    set isRenderGroup(value: boolean)\n    {\n        if (!!this.renderGroup === value) return;\n\n        if (value)\n        {\n            this.enableRenderGroup();\n        }\n        else\n        {\n            this.disableRenderGroup();\n        }\n    }\n\n    /**\n     * Returns true if this container is a render group.\n     * This means that it will be rendered as a separate pass, with its own set of instructions\n     */\n    get isRenderGroup(): boolean\n    {\n        return !!this.renderGroup;\n    }\n\n    /**\n     * Calling this enables a render group for this container.\n     * This means it will be rendered as a separate set of instructions.\n     * The transform of the container will also be handled on the GPU rather than the CPU.\n     */\n    public enableRenderGroup(): void\n    {\n        if (this.renderGroup) return;\n\n        const parentRenderGroup = this.parentRenderGroup;\n\n        parentRenderGroup?.removeChild(this);\n\n        this.renderGroup = BigPool.get(RenderGroup, this);\n\n        // this group matrix will now be an identity matrix,\n        // as its own transform will be passed to the GPU\n        this.groupTransform = Matrix.IDENTITY;\n\n        parentRenderGroup?.addChild(this);\n\n        this._updateIsSimple();\n    }\n\n    /** This will disable the render group for this container. */\n    public disableRenderGroup(): void\n    {\n        if (!this.renderGroup) return;\n\n        const parentRenderGroup = this.parentRenderGroup;\n\n        parentRenderGroup?.removeChild(this);\n\n        BigPool.return(this.renderGroup);\n\n        this.renderGroup = null;\n        this.groupTransform = this.relativeGroupTransform;\n\n        parentRenderGroup?.addChild(this);\n\n        this._updateIsSimple();\n    }\n\n    /** @ignore */\n    public _updateIsSimple()\n    {\n        this.isSimple = !(this.renderGroup) && (this.effects.length === 0);\n    }\n\n    /**\n     * Current transform of the object based on world (parent) factors.\n     * @readonly\n     */\n    get worldTransform()\n    {\n        this._worldTransform ||= new Matrix();\n\n        if (this.renderGroup)\n        {\n            this._worldTransform.copyFrom(this.renderGroup.worldTransform);\n        }\n        else if (this.parentRenderGroup)\n        {\n            this._worldTransform.appendFrom(this.relativeGroupTransform, this.parentRenderGroup.worldTransform);\n        }\n\n        return this._worldTransform;\n    }\n\n    /**\n     * The position of the container on the x axis relative to the local coordinates of the parent.\n     * An alias to position.x\n     */\n    get x(): number\n    {\n        return this._position.x;\n    }\n\n    set x(value: number)\n    {\n        this._position.x = value;\n    }\n\n    /**\n     * The position of the container on the y axis relative to the local coordinates of the parent.\n     * An alias to position.y\n     */\n    get y(): number\n    {\n        return this._position.y;\n    }\n\n    set y(value: number)\n    {\n        this._position.y = value;\n    }\n\n    /**\n     * The coordinate of the object relative to the local coordinates of the parent.\n     * @since 4.0.0\n     */\n    get position(): ObservablePoint\n    {\n        return this._position;\n    }\n\n    set position(value: PointData)\n    {\n        this._position.copyFrom(value);\n    }\n\n    /**\n     * The rotation of the object in radians.\n     * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n     */\n    get rotation(): number\n    {\n        return this._rotation;\n    }\n\n    set rotation(value: number)\n    {\n        if (this._rotation !== value)\n        {\n            this._rotation = value;\n            this._onUpdate(this._skew);\n        }\n    }\n\n    /**\n     * The angle of the object in degrees.\n     * 'rotation' and 'angle' have the same effect on a display object; rotation is in radians, angle is in degrees.\n     */\n    get angle(): number\n    {\n        return this.rotation * RAD_TO_DEG;\n    }\n\n    set angle(value: number)\n    {\n        this.rotation = value * DEG_TO_RAD;\n    }\n\n    /**\n     * The center of rotation, scaling, and skewing for this display object in its local space. The `position`\n     * is the projection of `pivot` in the parent's local space.\n     *\n     * By default, the pivot is the origin (0, 0).\n     * @since 4.0.0\n     */\n    get pivot(): ObservablePoint\n    {\n        if (this._pivot === defaultPivot)\n        {\n            this._pivot = new ObservablePoint(this, 0, 0);\n        }\n\n        return this._pivot;\n    }\n\n    set pivot(value: PointData | number)\n    {\n        if (this._pivot === defaultPivot)\n        {\n            this._pivot = new ObservablePoint(this, 0, 0);\n        }\n\n        typeof value === 'number' ? this._pivot.set(value) : this._pivot.copyFrom(value);\n    }\n\n    /**\n     * The skew factor for the object in radians.\n     * @since 4.0.0\n     */\n    get skew(): ObservablePoint\n    {\n        if (this._skew === defaultSkew)\n        {\n            this._skew = new ObservablePoint(this, 0, 0);\n        }\n\n        return this._skew;\n    }\n\n    set skew(value: PointData)\n    {\n        if (this._skew === defaultSkew)\n        {\n            this._skew = new ObservablePoint(this, 0, 0);\n        }\n\n        this._skew.copyFrom(value);\n    }\n\n    /**\n     * The scale factors of this object along the local coordinate axes.\n     *\n     * The default scale is (1, 1).\n     * @since 4.0.0\n     */\n    get scale(): ObservablePoint\n    {\n        if (this._scale === defaultScale)\n        {\n            this._scale = new ObservablePoint(this, 1, 1);\n        }\n\n        return this._scale;\n    }\n\n    set scale(value: PointData | number)\n    {\n        if (this._scale === defaultScale)\n        {\n            this._scale = new ObservablePoint(this, 0, 0);\n        }\n\n        typeof value === 'number' ? this._scale.set(value) : this._scale.copyFrom(value);\n    }\n\n    /**\n     * The width of the Container, setting this will actually modify the scale to achieve the value set.\n     * @memberof scene.Container#\n     */\n    get width(): number\n    {\n        return Math.abs(this.scale.x * this.getLocalBounds().width);\n    }\n\n    set width(value: number)\n    {\n        const localWidth = this.getLocalBounds().width;\n\n        this._setWidth(value, localWidth);\n    }\n\n    /**\n     * The height of the Container, setting this will actually modify the scale to achieve the value set.\n     * @memberof scene.Container#\n     */\n    get height(): number\n    {\n        return Math.abs(this.scale.y * this.getLocalBounds().height);\n    }\n\n    set height(value: number)\n    {\n        const localHeight = this.getLocalBounds().height;\n\n        this._setHeight(value, localHeight);\n    }\n\n    /**\n     * Retrieves the size of the container as a [Size]{@link Size} object.\n     * This is faster than get the width and height separately.\n     * @param out - Optional object to store the size in.\n     * @returns - The size of the container.\n     * @memberof scene.Container#\n     */\n    public getSize(out?: Size): Size\n    {\n        if (!out)\n        {\n            out = {} as Size;\n        }\n\n        const bounds = this.getLocalBounds();\n\n        out.width = Math.abs(this.scale.x * bounds.width);\n        out.height = Math.abs(this.scale.y * bounds.height);\n\n        return out;\n    }\n\n    /**\n     * Sets the size of the container to the specified width and height.\n     * This is faster than setting the width and height separately.\n     * @param value - This can be either a number or a [Size]{@link Size} object.\n     * @param height - The height to set. Defaults to the value of `width` if not provided.\n     * @memberof scene.Container#\n     */\n    public setSize(value: number | Optional<Size, 'height'>, height?: number)\n    {\n        const size = this.getLocalBounds();\n\n        if (typeof value === 'object')\n        {\n            height = value.height ?? value.width;\n            value = value.width;\n        }\n        else\n        {\n            height ??= value;\n        }\n\n        value !== undefined && this._setWidth(value, size.width);\n        height !== undefined && this._setHeight(height, size.height);\n    }\n\n    /** Called when the skew or the rotation changes. */\n    private _updateSkew(): void\n    {\n        const rotation = this._rotation;\n        const skew = this._skew;\n\n        this._cx = Math.cos(rotation + skew._y);\n        this._sx = Math.sin(rotation + skew._y);\n        this._cy = -Math.sin(rotation - skew._x); // cos, added PI/2\n        this._sy = Math.cos(rotation - skew._x); // sin, added PI/2\n    }\n\n    /**\n     * Updates the transform properties of the container (accepts partial values).\n     * @param {object} opts - The options for updating the transform.\n     * @param {number} opts.x - The x position of the container.\n     * @param {number} opts.y - The y position of the container.\n     * @param {number} opts.scaleX - The scale factor on the x-axis.\n     * @param {number} opts.scaleY - The scale factor on the y-axis.\n     * @param {number} opts.rotation - The rotation of the container, in radians.\n     * @param {number} opts.skewX - The skew factor on the x-axis.\n     * @param {number} opts.skewY - The skew factor on the y-axis.\n     * @param {number} opts.pivotX - The x coordinate of the pivot point.\n     * @param {number} opts.pivotY - The y coordinate of the pivot point.\n     */\n    public updateTransform(opts: Partial<UpdateTransformOptions>): this\n    {\n        this.position.set(\n            typeof opts.x === 'number' ? opts.x : this.position.x,\n            typeof opts.y === 'number' ? opts.y : this.position.y\n        );\n        this.scale.set(\n            typeof opts.scaleX === 'number' ? opts.scaleX || 1 : this.scale.x,\n            typeof opts.scaleY === 'number' ? opts.scaleY || 1 : this.scale.y\n        );\n        this.rotation = typeof opts.rotation === 'number' ? opts.rotation : this.rotation;\n        this.skew.set(\n            typeof opts.skewX === 'number' ? opts.skewX : this.skew.x,\n            typeof opts.skewY === 'number' ? opts.skewY : this.skew.y\n        );\n        this.pivot.set(\n            typeof opts.pivotX === 'number' ? opts.pivotX : this.pivot.x,\n            typeof opts.pivotY === 'number' ? opts.pivotY : this.pivot.y\n        );\n\n        return this;\n    }\n\n    /**\n     * Updates the local transform using the given matrix.\n     * @param matrix - The matrix to use for updating the transform.\n     */\n    public setFromMatrix(matrix: Matrix): void\n    {\n        matrix.decompose(this);\n    }\n\n    /** Updates the local transform. */\n    public updateLocalTransform(): void\n    {\n        const localTransformChangeId = this._didContainerChangeTick;\n\n        if (this._didLocalTransformChangeId === localTransformChangeId) return;\n\n        this._didLocalTransformChangeId = localTransformChangeId;\n        //   this.didChange = false;\n\n        const lt = this.localTransform;\n        const scale = this._scale;\n        const pivot = this._pivot;\n        const position = this._position;\n\n        const sx = scale._x;\n        const sy = scale._y;\n\n        const px = pivot._x;\n        const py = pivot._y;\n\n        // get the matrix values of the container based on its this properties..\n        lt.a = this._cx * sx;\n        lt.b = this._sx * sx;\n        lt.c = this._cy * sy;\n        lt.d = this._sy * sy;\n\n        lt.tx = position._x - ((px * lt.a) + (py * lt.c));\n        lt.ty = position._y - ((px * lt.b) + (py * lt.d));\n    }\n\n    // / ///// color related stuff\n\n    set alpha(value: number)\n    {\n        if (value === this.localAlpha) return;\n\n        this.localAlpha = value;\n\n        this._updateFlags |= UPDATE_COLOR;\n\n        this._onUpdate();\n    }\n\n    /** The opacity of the object. */\n    get alpha(): number\n    {\n        return this.localAlpha;\n    }\n\n    set tint(value: ColorSource)\n    {\n        const tempColor = Color.shared.setValue(value ?? 0xFFFFFF);\n        const bgr = tempColor.toBgrNumber();\n\n        if (bgr === this.localColor) return;\n\n        this.localColor = bgr;\n\n        this._updateFlags |= UPDATE_COLOR;\n\n        this._onUpdate();\n    }\n\n    /**\n     * The tint applied to the sprite. This is a hex value.\n     *\n     * A value of 0xFFFFFF will remove any tint effect.\n     * @default 0xFFFFFF\n     */\n    get tint(): number\n    {\n        // convert bgr to rgb..\n        return bgr2rgb(this.localColor);\n    }\n\n    // / //////////////// blend related stuff\n\n    set blendMode(value: BLEND_MODES)\n    {\n        if (this.localBlendMode === value) return;\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._updateFlags |= UPDATE_BLEND;\n\n        this.localBlendMode = value;\n\n        this._onUpdate();\n    }\n\n    /**\n     * The blend mode to be applied to the sprite. Apply a value of `'normal'` to reset the blend mode.\n     * @default 'normal'\n     */\n    get blendMode(): BLEND_MODES\n    {\n        return this.localBlendMode;\n    }\n\n    // / ///////// VISIBILITY / RENDERABLE /////////////////\n\n    /** The visibility of the object. If false the object will not be drawn, and the transform will not be updated. */\n    get visible()\n    {\n        return !!(this.localDisplayStatus & 0b010);\n    }\n\n    set visible(value: boolean)\n    {\n        const valueNumber = value ? 0b010 : 0;\n\n        if ((this.localDisplayStatus & 0b010) === valueNumber) return;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._updateFlags |= UPDATE_VISIBLE;\n\n        this.localDisplayStatus ^= 0b010;\n\n        this._onUpdate();\n    }\n\n    /** @ignore */\n    get culled()\n    {\n        return !(this.localDisplayStatus & 0b100);\n    }\n\n    /** @ignore */\n    set culled(value: boolean)\n    {\n        const valueNumber = value ? 0 : 0b100;\n\n        if ((this.localDisplayStatus & 0b100) === valueNumber) return;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._updateFlags |= UPDATE_VISIBLE;\n        this.localDisplayStatus ^= 0b100;\n\n        this._onUpdate();\n    }\n\n    /** Can this object be rendered, if false the object will not be drawn but the transform will still be updated. */\n    get renderable()\n    {\n        return !!(this.localDisplayStatus & 0b001);\n    }\n\n    set renderable(value: boolean)\n    {\n        const valueNumber = value ? 0b001 : 0;\n\n        if ((this.localDisplayStatus & 0b001) === valueNumber) return;\n\n        this._updateFlags |= UPDATE_VISIBLE;\n        this.localDisplayStatus ^= 0b001;\n\n        if (this.parentRenderGroup)\n        {\n            this.parentRenderGroup.structureDidChange = true;\n        }\n\n        this._onUpdate();\n    }\n\n    /** Whether or not the object should be rendered. */\n    get isRenderable(): boolean\n    {\n        return (this.localDisplayStatus === 0b111 && this.groupAlpha > 0);\n    }\n\n    /**\n     * Removes all internal references and listeners as well as removes children from the display list.\n     * Do not use a Container after calling `destroy`.\n     * @param options - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'options' will be passed on to those calls.\n     * @param {boolean} [options.texture=false] - Only used for children with textures e.g. Sprites. If options.children\n     * is set to true it should destroy the texture of the child sprite\n     * @param {boolean} [options.textureSource=false] - Only used for children with textures e.g. Sprites.\n     * If options.children is set to true it should destroy the texture source of the child sprite\n     * @param {boolean} [options.context=false] - Only used for children with graphicsContexts e.g. Graphics.\n     * If options.children is set to true it should destroy the context of the child graphics\n     */\n    public destroy(options: DestroyOptions = false): void\n    {\n        if (this.destroyed) return;\n        this.destroyed = true;\n\n        // remove children is faster than removeChild..\n\n        let oldChildren: ContainerChild[];\n\n        // we add this check as calling removeChildren on particle container will throw an error\n        // As we know it does cannot have any children, check before calling the function.\n        if (this.children.length)\n        {\n            oldChildren = this.removeChildren(0, this.children.length);\n        }\n\n        this.removeFromParent();\n        this.parent = null;\n        this._maskEffect = null;\n        this._filterEffect = null;\n        this.effects = null;\n        this._position = null;\n        this._scale = null;\n        this._pivot = null;\n        this._skew = null;\n\n        this.emit('destroyed', this);\n\n        this.removeAllListeners();\n\n        const destroyChildren = typeof options === 'boolean' ? options : options?.children;\n\n        if (destroyChildren && oldChildren)\n        {\n            for (let i = 0; i < oldChildren.length; ++i)\n            {\n                oldChildren[i].destroy(options);\n            }\n        }\n\n        this.renderGroup?.destroy();\n        this.renderGroup = null;\n    }\n}\n\nContainer.mixin(childrenHelperMixin);\nContainer.mixin(toLocalGlobalMixin);\nContainer.mixin(onRenderMixin);\nContainer.mixin(measureMixin);\nContainer.mixin(effectsMixin);\nContainer.mixin(findMixin);\nContainer.mixin(sortMixin);\nContainer.mixin(cullingMixin);\nContainer.mixin(cacheAsTextureMixin);\nContainer.mixin(getGlobalMixin);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1963, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1969, "column": 0}, "map": {"version":3,"file":"accessibilityTarget.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/accessibility/accessibilityTarget.ts"],"sourcesContent":["import type { Container } from '../scene/container/Container';\n\n/**\n * The type of the pointer event to listen for.\n * Can be any of the following:\n * - `auto`\n * - `none`\n * - `visiblePainted`\n * - `visibleFill`\n * - `visibleStroke`\n * - `visible`\n * - `painted`\n * - `fill`\n * - `stroke`\n * - `all`\n * - `inherit`\n * @memberof accessibility\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events\n */\nexport type PointerEvents = 'auto'\n| 'none'\n| 'visiblePainted'\n| 'visibleFill'\n| 'visibleStroke'\n| 'visible'\n| 'painted'\n| 'fill'\n| 'stroke'\n| 'all'\n| 'inherit';\n\n/**\n * When `accessible` is enabled on any display object, these properties will affect its accessibility.\n * @memberof accessibility\n */\nexport interface AccessibleOptions\n{\n    /**\n     * Flag for if the object is accessible. If true AccessibilityManager will overlay a\n     * shadow div with attributes set\n     * @default false\n     */\n    accessible: boolean;\n    /**\n     * Sets the title attribute of the shadow div\n     * If accessibleTitle AND accessibleHint has not been this will default to 'container [tabIndex]'\n     * @member {string}\n     */\n    accessibleTitle: string | null;\n    /** Sets the aria-label attribute of the shadow div */\n    accessibleHint: string | null;\n    /**\n     * @default 0\n     */\n    tabIndex: number;\n    /**\n     * Specify the type of div the accessible layer is. Screen readers treat the element differently\n     * depending on this type. Defaults to button.\n     * @default 'button'\n     */\n    accessibleType: string;\n    /**\n     * Specify the pointer-events the accessible div will use\n     * Defaults to auto.\n     * @default 'auto'\n     * @type {accessibility.PointerEvents}\n     */\n    accessiblePointerEvents: PointerEvents;\n    /**\n     * Setting to false will prevent any children inside this container to\n     * be accessible. Defaults to true.\n     * @default true\n     */\n    accessibleChildren: boolean;\n}\n\n/**\n * The Accessibility object is attached to the {@link Container}.\n * @private\n */\nexport interface AccessibleTarget extends AccessibleOptions\n{\n    _accessibleActive: boolean;\n    _accessibleDiv: AccessibleHTMLElement | null;\n    _renderId: number;\n}\n\nexport interface AccessibleHTMLElement extends HTMLElement\n{\n    type?: string;\n    container?: Container;\n}\n\n/**\n * Default property values of accessible objects\n * used by {@link AccessibilitySystem}.\n * @private\n * @example\n * import { accessibleTarget } from 'pixi.js';\n *\n * function MyObject() {}\n * Object.assign(MyObject.prototype, accessibleTarget);\n */\nexport const accessibilityTarget: AccessibleTarget = {\n    /**\n     * Flag for if the object is accessible. If true AccessibilityManager will overlay a\n     * shadow div with attributes set\n     * @member {boolean}\n     * @memberof scene.Container#\n     */\n    accessible: false,\n\n    /**\n     * Sets the title attribute of the shadow div\n     * If accessibleTitle AND accessibleHint has not been this will default to 'container [tabIndex]'\n     * @member {string}\n     * @memberof scene.Container#\n     */\n    accessibleTitle: null,\n\n    /**\n     * Sets the aria-label attribute of the shadow div\n     * @member {string}\n     * @memberof scene.Container#\n     */\n    accessibleHint: null,\n\n    /**\n     * @member {number}\n     * @memberof scene.Container#\n     * @todo Needs docs.\n     */\n    tabIndex: 0,\n\n    /**\n     * @member {boolean}\n     * @memberof scene.Container#\n     * @private\n     */\n    _accessibleActive: false,\n\n    /**\n     * @memberof scene.Container#\n     * @private\n     */\n    _accessibleDiv: null,\n\n    /**\n     * Specify the type of div the accessible layer is. Screen readers treat the element differently\n     * depending on this type. Defaults to button.\n     * @member {string}\n     * @memberof scene.Container#\n     * @default 'button'\n     */\n    accessibleType: 'button',\n\n    /**\n     * Specify the pointer-events the accessible div will use\n     * Defaults to auto.\n     * @type {PointerEvents}\n     * @memberof scene.Container#\n     * @default 'auto'\n     */\n    accessiblePointerEvents: 'auto',\n\n    /**\n     * Setting to false will prevent any children inside this container to\n     * be accessible. Defaults to true.\n     * @member {boolean}\n     * @memberof scene.Container#\n     * @default true\n     */\n    accessibleChildren: true,\n\n    /**\n     * @member {number}\n     * @memberof scene.Container#\n     * @private\n     */\n    _renderId: -1,\n};\n"],"names":[],"mappings":";;;;AAuGO,MAAM,mBAAwC,GAAA;IAAA;;;;;GAAA,GAOjD,UAAY,EAAA,KAAA;IAAA;;;;;GAAA,GAQZ,eAAiB,EAAA,IAAA;IAAA;;;;GAAA,GAOjB,cAAgB,EAAA,IAAA;IAAA;;;;GAAA,GAOhB,QAAU,EAAA,CAAA;IAAA;;;;GAAA,GAOV,iBAAmB,EAAA,KAAA;IAAA;;;GAAA,GAMnB,cAAgB,EAAA,IAAA;IAAA;;;;;;GAAA,GAShB,cAAgB,EAAA,QAAA;IAAA;;;;;;GAAA,GAShB,uBAAyB,EAAA,MAAA;IAAA;;;;;;GAAA,GASzB,kBAAoB,EAAA,IAAA;IAAA;;;;GAAA,GAOpB,SAAW,EAAA,CAAA,CAAA;AACf","ignoreList":[0]}},
    {"offset": {"line": 2034, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2040, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/accessibility/init.ts"],"sourcesContent":["import { extensions } from '../extensions/Extensions';\nimport { Container } from '../scene/container/Container';\nimport { AccessibilitySystem } from './AccessibilitySystem';\nimport { accessibilityTarget } from './accessibilityTarget';\n\nextensions.add(AccessibilitySystem);\nContainer.mixin(accessibilityTarget);\n"],"names":[],"mappings":";;;;;;;;;;kKAKA,aAAA,CAAW,GAAA,+KAAI,sBAAmB,CAAA,CAAA;yKAClC,YAAA,CAAU,KAAA,+KAAM,sBAAmB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2058, "column": 0}, "map": {"version":3,"file":"ResizePlugin.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/app/ResizePlugin.ts"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions';\n\nimport type { ExtensionMetadata } from '../extensions/Extensions';\nimport type { Renderer } from '../rendering/renderers/types';\n\ntype ResizeableRenderer = Pick<Renderer, 'resize'>;\n\n/**\n * Application options for the {@link app.ResizePlugin}.\n * @memberof app\n * @property {Window|HTMLElement} [resizeTo=window] - Element to automatically resize the renderer to.\n */\nexport interface ResizePluginOptions\n{\n    /**\n     * Element to automatically resize the renderer to.\n     * @memberof app.ApplicationOptions\n     */\n    resizeTo?: Window | HTMLElement;\n}\n\n/**\n * Middleware for Application's resize functionality.\n *\n * Adds the following methods to {@link app.Application}:\n * * {@link app.Application#resizeTo}\n * * {@link app.Application#resize}\n * * {@link app.Application#queueResize}\n * * {@link app.Application#cancelResize}\n * @example\n * import { extensions, ResizePlugin } from 'pixi.js';\n *\n * extensions.add(ResizePlugin);\n * @memberof app\n */\nexport class ResizePlugin\n{\n    /** @ignore */\n    public static extension: ExtensionMetadata = ExtensionType.Application;\n\n    public static resizeTo: Window | HTMLElement;\n    public static resize: () => void;\n    public static renderer: ResizeableRenderer;\n    public static queueResize: () => void;\n    public static render: () => void;\n    private static _resizeId: number;\n    private static _resizeTo: Window | HTMLElement;\n    private static _cancelResize: () => void;\n\n    /**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */\n    public static init(options: ResizePluginOptions): void\n    {\n        Object.defineProperty(this, 'resizeTo',\n            /**\n             * The HTML element or window to automatically resize the\n             * renderer's view element to match width and height.\n             * @member {Window|HTMLElement}\n             * @name resizeTo\n             * @memberof app.Application#\n             */\n            {\n                set(dom: Window | HTMLElement)\n                {\n                    globalThis.removeEventListener('resize', this.queueResize);\n                    this._resizeTo = dom;\n                    if (dom)\n                    {\n                        globalThis.addEventListener('resize', this.queueResize);\n                        this.resize();\n                    }\n                },\n                get()\n                {\n                    return this._resizeTo;\n                },\n            });\n\n        /**\n         * Resize is throttled, so it's safe to call this multiple times per frame and it'll\n         * only be called once.\n         * @memberof app.Application#\n         * @method queueResize\n         * @private\n         */\n        this.queueResize = (): void =>\n        {\n            if (!this._resizeTo)\n            {\n                return;\n            }\n\n            this._cancelResize();\n\n            // // Throttle resize events per raf\n            this._resizeId = requestAnimationFrame(() => this.resize());\n        };\n\n        /**\n         * Cancel the resize queue.\n         * @memberof app.Application#\n         * @method cancelResize\n         * @private\n         */\n        this._cancelResize = (): void =>\n        {\n            if (this._resizeId)\n            {\n                cancelAnimationFrame(this._resizeId);\n                this._resizeId = null;\n            }\n        };\n\n        /**\n         * Execute an immediate resize on the renderer, this is not\n         * throttled and can be expensive to call many times in a row.\n         * Will resize only if `resizeTo` property is set.\n         * @memberof app.Application#\n         * @method resize\n         */\n        this.resize = (): void =>\n        {\n            if (!this._resizeTo)\n            {\n                return;\n            }\n\n            // clear queue resize\n            this._cancelResize();\n\n            let width: number;\n            let height: number;\n\n            // Resize to the window\n            if (this._resizeTo === globalThis.window)\n            {\n                width = globalThis.innerWidth;\n                height = globalThis.innerHeight;\n            }\n            // Resize to other HTML entities\n            else\n            {\n                const { clientWidth, clientHeight } = this._resizeTo as HTMLElement;\n\n                width = clientWidth;\n                height = clientHeight;\n            }\n\n            this.renderer.resize(width, height);\n            this.render();\n        };\n\n        // On resize\n        this._resizeId = null;\n        this._resizeTo = null;\n        this.resizeTo = options.resizeTo || null;\n    }\n\n    /**\n     * Clean up the ticker, scoped to application\n     * @static\n     * @private\n     */\n    public static destroy(): void\n    {\n        globalThis.removeEventListener('resize', this.queueResize);\n        this._cancelResize();\n        this._cancelResize = null;\n        this.queueResize = null;\n        this.resizeTo = null;\n        this.resize = null;\n    }\n}\n"],"names":[],"mappings":";;;;;;AAmCO,MAAM,YACb,CAAA;IAAA;;;;;GAAA,GAmBI,OAAc,KAAK,OACnB,EAAA;QACW,MAAA,CAAA,cAAA,CAAe,IAAA,EAAM,UAAA,EAAA;;;;;;OAAA,GAQxB;YACI,KAAI,GACJ,EAAA;gBACe,UAAA,CAAA,mBAAA,CAAoB,QAAU,EAAA,IAAA,CAAK,WAAW,CAAA,CAAA;gBACzD,IAAA,CAAK,SAAY,GAAA,GAAA,CAAA;gBACjB,IAAI,GACJ,EAAA;oBACe,UAAA,CAAA,gBAAA,CAAiB,QAAU,EAAA,IAAA,CAAK,WAAW,CAAA,CAAA;oBACtD,IAAA,CAAK,MAAO,EAAA,CAAA;gBAAA,CAChB;YAAA,CACJ;YACA,GACA,GAAA;gBACI,OAAO,IAAK,CAAA,SAAA,CAAA;YAAA,CAChB;QAAA,CACJ;QASJ,IAAA,CAAK,WAAA,GAAc,MACnB;YACQ,IAAA,CAAC,IAAA,CAAK,SACV,EAAA;gBACI,OAAA;YAAA,CACJ;YAEA,IAAA,CAAK,aAAc,EAAA,CAAA;YAGnB,IAAA,CAAK,SAAY,GAAA,qBAAA,CAAsB,IAAM,IAAA,CAAK,MAAA,EAAQ,CAAA,CAAA;QAAA,CAC9D,CAAA;QAQA,IAAA,CAAK,aAAA,GAAgB,MACrB;YACI,IAAI,IAAA,CAAK,SACT,EAAA;gBACI,oBAAA,CAAqB,IAAA,CAAK,SAAS,CAAA,CAAA;gBACnC,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;YAAA,CACrB;QAAA,CACJ,CAAA;QASA,IAAA,CAAK,MAAA,GAAS,MACd;YACQ,IAAA,CAAC,IAAA,CAAK,SACV,EAAA;gBACI,OAAA;YAAA,CACJ;YAGA,IAAA,CAAK,aAAc,EAAA,CAAA;YAEf,IAAA,KAAA,CAAA;YACA,IAAA,MAAA,CAAA;YAGA,IAAA,IAAA,CAAK,SAAc,KAAA,UAAA,CAAW,MAClC,EAAA;gBACI,KAAA,GAAQ,UAAW,CAAA,UAAA,CAAA;gBACnB,MAAA,GAAS,UAAW,CAAA,WAAA,CAAA;YAAA,CAIxB,MAAA;gBACI,MAAM,EAAE,WAAA,EAAa,YAAa,EAAA,GAAI,IAAK,CAAA,SAAA,CAAA;gBAEnC,KAAA,GAAA,WAAA,CAAA;gBACC,MAAA,GAAA,YAAA,CAAA;YAAA,CACb;YAEK,IAAA,CAAA,QAAA,CAAS,MAAO,CAAA,KAAA,EAAO,MAAM,CAAA,CAAA;YAClC,IAAA,CAAK,MAAO,EAAA,CAAA;QAAA,CAChB,CAAA;QAGA,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;QACjB,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;QACZ,IAAA,CAAA,QAAA,GAAW,QAAQ,QAAY,IAAA,IAAA,CAAA;IAAA,CACxC;IAAA;;;;GAAA,GAOA,OAAc,OACd,GAAA;QACe,UAAA,CAAA,mBAAA,CAAoB,QAAU,EAAA,IAAA,CAAK,WAAW,CAAA,CAAA;QACzD,IAAA,CAAK,aAAc,EAAA,CAAA;QACnB,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;QACrB,IAAA,CAAK,WAAc,GAAA,IAAA,CAAA;QACnB,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;QAChB,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;IAAA,CAClB;AACJ,CAAA;AAAA,YAAA,GA7Ia,YAAA,CAGK,SAAA,qKAA+B,gBAAc,CAAA,WAAA","ignoreList":[0]}},
    {"offset": {"line": 2141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2147, "column": 0}, "map": {"version":3,"file":"const.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/ticker/const.ts"],"sourcesContent":["/**\n * Represents the update priorities used by internal Pixi classes when registered with\n * the {@link ticker.Ticker} object. Higher priority items are updated first and lower\n * priority items, such as render, should go later.\n * @static\n * @enum {number}\n * @memberof ticker\n */\nexport enum UPDATE_PRIORITY\n{\n    /**\n     * Highest priority used for interaction events in {@link EventSystem}\n     * @default 50\n     */\n    INTERACTION = 50,\n    /**\n     * High priority updating, used by {@link AnimatedSprite}\n     * @default 25\n     */\n    HIGH = 25,\n    /**\n     * Default priority for ticker events, see {@link Ticker#add}.\n     * @default 0\n     */\n    NORMAL = 0,\n    /**\n     * Low priority used for {@link Application} rendering.\n     * @default -25\n     */\n    LOW = -25,\n    /**\n     * Lowest priority used for {@link BasePrepare} utility.\n     * @default -50\n     */\n    UTILITY = -50,\n}\n"],"names":["UPDATE_PRIORITY"],"mappings":";;;;AAQY,IAAA,eAAA,GAAA,aAAA,GAAA,CAAA,CAAAA,gBAAL,KAAA;IAMHA,gBAAAA,CAAAA,gBAAAA,CAAA,cAAA,GAAc,EAAd,CAAA,GAAA,aAAA,CAAA;IAKAA,gBAAAA,CAAAA,gBAAAA,CAAA,OAAA,GAAO,EAAP,CAAA,GAAA,MAAA,CAAA;IAKAA,gBAAAA,CAAAA,gBAAAA,CAAA,SAAA,GAAS,CAAT,CAAA,GAAA,QAAA,CAAA;IAKAA,gBAAAA,CAAAA,gBAAAA,CAAA,MAAA,GAAM,CAAN,EAAA,CAAA,GAAA,KAAA,CAAA;IAKAA,gBAAAA,CAAAA,gBAAAA,CAAA,UAAA,GAAU,CAAV,EAAA,CAAA,GAAA,SAAA,CAAA;IA1BQA,OAAAA,gBAAAA,CAAAA;AAAA,CAAA,EAAA,eAAA,IAAA,CAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2167, "column": 0}, "map": {"version":3,"file":"TickerPlugin.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/app/TickerPlugin.ts"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions';\nimport { UPDATE_PRIORITY } from '../ticker/const';\nimport { Ticker } from '../ticker/Ticker';\n\nimport type { ExtensionMetadata } from '../extensions/Extensions';\n\n/**\n * Application options for the {@link app.TickerPlugin}.\n * @memberof app\n * @property {boolean} [autoStart=true] - Automatically starts the rendering after the construction.\n * **Note**: Setting this parameter to `false` does NOT stop the shared ticker even if you set\n * `options.sharedTicker` to `true` in case that it is already started. Stop it by your own.\n * @property {boolean} [sharedTicker=false] - Set`true` to use `Ticker.shared`, `false` to create new ticker.\n * If set to `false`, you cannot register a handler to occur before anything that runs on the shared ticker.\n * The system ticker will always run before both the shared ticker and the app ticker.\n */\nexport interface TickerPluginOptions\n{\n    /**\n     * Automatically starts the rendering after the construction.\n     *  **Note**: Setting this parameter to `false` does NOT stop the shared ticker even if you set\n     *  `options.sharedTicker` to `true` in case that it is already started. Stop it by your own.\n     * @memberof app.ApplicationOptions\n     * @default true\n     */\n    autoStart?: boolean;\n    /**\n     * Set`true` to use `Ticker.shared`, `false` to create new ticker.\n     *  If set to `false`, you cannot register a handler to occur before anything that runs on the shared ticker.\n     *  The system ticker will always run before both the shared ticker and the app ticker.\n     * @memberof app.ApplicationOptions\n     * @default false\n     */\n    sharedTicker?: boolean;\n}\n\n/**\n * Middleware for Application's {@link ticker.Ticker} functionality.\n *\n * Adds the following methods to {@link app.Application}:\n * * {@link app.Application#start}\n * * {@link app.Application#stop}\n * * {@link app.Application#ticker}\n * @example\n * import { extensions, TickerPlugin } from 'pixi.js';\n *\n * extensions.add(TickerPlugin);\n * @memberof app\n */\nexport class TickerPlugin\n{\n    /** @ignore */\n    public static extension: ExtensionMetadata = ExtensionType.Application;\n\n    public static start: () => void;\n    public static stop: () => void;\n    private static _ticker: Ticker;\n    public static ticker: Ticker;\n\n    /**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */\n    public static init(options?: PixiMixins.ApplicationOptions): void\n    {\n        // Set default\n        options = Object.assign({\n            autoStart: true,\n            sharedTicker: false,\n        }, options);\n\n        // Create ticker setter\n        Object.defineProperty(this, 'ticker',\n            {\n                set(ticker)\n                {\n                    if (this._ticker)\n                    {\n                        this._ticker.remove(this.render, this);\n                    }\n                    this._ticker = ticker;\n                    if (ticker)\n                    {\n                        ticker.add(this.render, this, UPDATE_PRIORITY.LOW);\n                    }\n                },\n                get()\n                {\n                    return this._ticker;\n                },\n            });\n\n        /**\n         * Convenience method for stopping the render.\n         * @method\n         * @memberof app.Application\n         * @instance\n         */\n        this.stop = (): void =>\n        {\n            this._ticker.stop();\n        };\n\n        /**\n         * Convenience method for starting the render.\n         * @method\n         * @memberof app.Application\n         * @instance\n         */\n        this.start = (): void =>\n        {\n            this._ticker.start();\n        };\n\n        /**\n         * Internal reference to the ticker.\n         * @type {Ticker}\n         * @name _ticker\n         * @memberof app.Application#\n         * @private\n         */\n        this._ticker = null;\n\n        /**\n         * Ticker for doing render updates.\n         * @type {ticker.Ticker}\n         * @name ticker\n         * @memberof app.Application#\n         * @default Ticker.shared\n         */\n        this.ticker = options.sharedTicker ? Ticker.shared : new Ticker();\n\n        // Start the rendering\n        if (options.autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Clean up the ticker, scoped to application.\n     * @static\n     * @private\n     */\n    public static destroy(): void\n    {\n        if (this._ticker)\n        {\n            const oldTicker = this._ticker;\n\n            this.ticker = null;\n            oldTicker.destroy();\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAiDO,MAAM,YACb,CAAA;IAAA;;;;;GAAA,GAeI,OAAc,KAAK,OACnB,EAAA;QAEI,OAAA,GAAU,OAAO,MAAO,CAAA;YACpB,SAAW,EAAA,IAAA;YACX,YAAc,EAAA,KAAA;QAAA,GACf,OAAO,CAAA,CAAA;QAGH,MAAA,CAAA,cAAA,CAAe,IAAA,EAAM,QAAA,EACxB;YACI,KAAI,MACJ,EAAA;gBACI,IAAI,IAAA,CAAK,OACT,EAAA;oBACI,IAAA,CAAK,OAAQ,CAAA,MAAA,CAAO,IAAK,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;gBAAA,CACzC;gBACA,IAAA,CAAK,OAAU,GAAA,MAAA,CAAA;gBACf,IAAI,MACJ,EAAA;oBACI,MAAA,CAAO,GAAI,CAAA,IAAA,CAAK,MAAQ,EAAA,IAAA,2JAAM,kBAAA,CAAgB,GAAG,CAAA,CAAA;gBAAA,CACrD;YAAA,CACJ;YACA,GACA,GAAA;gBACI,OAAO,IAAK,CAAA,OAAA,CAAA;YAAA,CAChB;QAAA,CACJ;QAQJ,IAAA,CAAK,IAAA,GAAO,MACZ;YACI,IAAA,CAAK,OAAA,CAAQ,IAAK,EAAA,CAAA;QAAA,CACtB,CAAA;QAQA,IAAA,CAAK,KAAA,GAAQ,MACb;YACI,IAAA,CAAK,OAAA,CAAQ,KAAM,EAAA,CAAA;QAAA,CACvB,CAAA;QASA,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;QASf,IAAA,CAAK,MAAA,GAAS,OAAQ,CAAA,YAAA,4JAAe,UAAO,CAAA,MAAA,GAAS,8JAAI,SAAO,EAAA,CAAA;QAGhE,IAAI,QAAQ,SACZ,EAAA;YACI,IAAA,CAAK,KAAM,EAAA,CAAA;QAAA,CACf;IAAA,CACJ;IAAA;;;;GAAA,GAOA,OAAc,OACd,GAAA;QACI,IAAI,IAAA,CAAK,OACT,EAAA;YACI,MAAM,YAAY,IAAK,CAAA,OAAA,CAAA;YAEvB,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;YACd,SAAA,CAAU,OAAQ,EAAA,CAAA;QAAA,CACtB;IAAA,CACJ;AACJ,CAAA;AAAA,YAAA,GA3Ga,YAAA,CAGK,SAAA,qKAA+B,gBAAc,CAAA,WAAA","ignoreList":[0]}},
    {"offset": {"line": 2229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2235, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/app/init.ts"],"sourcesContent":["import { extensions } from '../extensions/Extensions';\nimport { ResizePlugin } from './ResizePlugin';\nimport { TickerPlugin } from './TickerPlugin';\n\nextensions.add(ResizePlugin);\nextensions.add(TickerPlugin);\n"],"names":[],"mappings":";;;;;;;;kKAIA,aAAA,CAAW,GAAA,8JAAI,eAAY,CAAA,CAAA;kKAC3B,aAAA,CAAW,GAAA,8JAAI,eAAY,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"file":"EventTicker.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/EventTicker.ts"],"sourcesContent":["import { UPDATE_PRIORITY } from '../ticker/const';\nimport { Ticker } from '../ticker/Ticker';\n\nimport type { EventSystem } from './EventSystem';\n\n/**\n * This class handles automatic firing of PointerEvents\n * in the case where the pointer is stationary for too long.\n * This is to ensure that hit-tests are still run on moving objects.\n * @since 7.2.0\n * @memberof events\n * @class EventsTicker\n */\nclass EventsTickerClass\n{\n    /** The event system. */\n    public events: EventSystem;\n    /** The DOM element to listen to events on. */\n    public domElement: HTMLElement;\n    /** The frequency that fake events will be fired. */\n    public interactionFrequency = 10;\n\n    private _deltaTime = 0;\n    private _didMove = false;\n    private _tickerAdded = false;\n    private _pauseUpdate = true;\n\n    /**\n     * Initializes the event ticker.\n     * @param events - The event system.\n     */\n    public init(events: EventSystem): void\n    {\n        this.removeTickerListener();\n        this.events = events;\n        this.interactionFrequency = 10;\n        this._deltaTime = 0;\n        this._didMove = false;\n        this._tickerAdded = false;\n        this._pauseUpdate = true;\n    }\n\n    /** Whether to pause the update checks or not. */\n    get pauseUpdate(): boolean\n    {\n        return this._pauseUpdate;\n    }\n\n    set pauseUpdate(paused: boolean)\n    {\n        this._pauseUpdate = paused;\n    }\n\n    /** Adds the ticker listener. */\n    public addTickerListener(): void\n    {\n        if (this._tickerAdded || !this.domElement)\n        {\n            return;\n        }\n\n        Ticker.system.add(this._tickerUpdate, this, UPDATE_PRIORITY.INTERACTION);\n\n        this._tickerAdded = true;\n    }\n\n    /** Removes the ticker listener. */\n    public removeTickerListener(): void\n    {\n        if (!this._tickerAdded)\n        {\n            return;\n        }\n\n        Ticker.system.remove(this._tickerUpdate, this);\n\n        this._tickerAdded = false;\n    }\n\n    /** Sets flag to not fire extra events when the user has already moved there mouse */\n    public pointerMoved(): void\n    {\n        this._didMove = true;\n    }\n\n    /** Updates the state of interactive objects. */\n    private _update(): void\n    {\n        if (!this.domElement || this._pauseUpdate)\n        {\n            return;\n        }\n\n        // if the user move the mouse this check has already been done using the mouse move!\n        if (this._didMove)\n        {\n            this._didMove = false;\n\n            return;\n        }\n\n        // eslint-disable-next-line dot-notation\n        const rootPointerEvent = this.events['_rootPointerEvent'];\n\n        if (this.events.supportsTouchEvents && (rootPointerEvent as PointerEvent).pointerType === 'touch')\n        {\n            return;\n        }\n\n        globalThis.document.dispatchEvent(new PointerEvent('pointermove', {\n            clientX: rootPointerEvent.clientX,\n            clientY: rootPointerEvent.clientY,\n            pointerType: rootPointerEvent.pointerType,\n            pointerId: rootPointerEvent.pointerId,\n        }));\n    }\n\n    /**\n     * Updates the state of interactive objects if at least {@link interactionFrequency}\n     * milliseconds have passed since the last invocation.\n     *\n     * Invoked by a throttled ticker update from {@link Ticker.system}.\n     * @param ticker - The throttled ticker.\n     */\n    private _tickerUpdate(ticker: Ticker): void\n    {\n        this._deltaTime += ticker.deltaTime;\n\n        if (this._deltaTime < this.interactionFrequency)\n        {\n            return;\n        }\n\n        this._deltaTime = 0;\n\n        this._update();\n    }\n}\n\nexport const EventsTicker = new EventsTickerClass();\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2345, "column": 0}, "map": {"version":3,"file":"FederatedMouseEvent.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/FederatedMouseEvent.ts"],"sourcesContent":["import { Point } from '../maths/point/Point';\nimport { FederatedEvent } from './FederatedEvent';\n\nimport type { PointData } from '../maths/point/PointData';\nimport type { Container } from '../scene/container/Container';\nimport type { PixiTouch } from './FederatedEvent';\n\n/**\n * A {@link FederatedEvent} for mouse events.\n * @memberof events\n */\nexport class FederatedMouseEvent extends FederatedEvent<\nMouseEvent | PointerEvent | PixiTouch\n> implements MouseEvent\n{\n    /** Whether the \"alt\" key was pressed when this mouse event occurred. */\n    public altKey: boolean;\n\n    /** The specific button that was pressed in this mouse event. */\n    public button: number;\n\n    /** The button depressed when this event occurred. */\n    public buttons: number;\n\n    /** Whether the \"control\" key was pressed when this mouse event occurred. */\n    public ctrlKey: boolean;\n\n    /** Whether the \"meta\" key was pressed when this mouse event occurred. */\n    public metaKey: boolean;\n\n    /** This is currently not implemented in the Federated Events API. */\n    public relatedTarget: EventTarget;\n\n    /** Whether the \"shift\" key was pressed when this mouse event occurred. */\n    public shiftKey: boolean;\n\n    /** The coordinates of the mouse event relative to the canvas. */\n    public client: Point = new Point();\n\n    /** @readonly */\n    public get clientX(): number { return this.client.x; }\n\n    /** @readonly */\n    public get clientY(): number { return this.client.y; }\n\n    /**\n     * Alias for {@link FederatedMouseEvent.clientX this.clientX}.\n     * @readonly\n     */\n    get x(): number { return this.clientX; }\n\n    /**\n     * Alias for {@link FederatedMouseEvent.clientY this.clientY}.\n     * @readonly\n     */\n    get y(): number { return this.clientY; }\n\n    /** This is the number of clicks that occurs in 200ms/click of each other. */\n    public detail: number;\n\n    /** The movement in this pointer relative to the last `mousemove` event. */\n    public movement: Point = new Point();\n\n    /** @readonly */\n    get movementX(): number { return this.movement.x; }\n\n    /** @readonly */\n    get movementY(): number { return this.movement.y; }\n\n    /** The offset of the pointer coordinates w.r.t. target Container in world space. This is not supported at the moment. */\n    public offset: Point = new Point();\n\n    /** @readonly */\n    get offsetX(): number { return this.offset.x; }\n\n    /** @readonly */\n    get offsetY(): number { return this.offset.y; }\n\n    /** The pointer coordinates in world space. */\n    public global: Point = new Point();\n\n    /** @readonly */\n    get globalX(): number { return this.global.x; }\n\n    /** @readonly */\n    get globalY(): number { return this.global.y; }\n\n    /**\n     * The pointer coordinates in the renderer's {@link Renderer.screen screen}. This has slightly\n     * different semantics than native PointerEvent screenX/screenY.\n     */\n    public screen: Point = new Point();\n\n    /**\n     * The pointer coordinates in the renderer's screen. Alias for {@code screen.x}.\n     * @readonly\n     */\n    get screenX(): number { return this.screen.x; }\n\n    /**\n     * The pointer coordinates in the renderer's screen. Alias for {@code screen.y}.\n     * @readonly\n     */\n    get screenY(): number { return this.screen.y; }\n\n    /**\n     * This will return the local coordinates of the specified container for this InteractionData\n     * @param {Container} container - The Container that you would like the local\n     *  coords off\n     * @param {PointData} point - A Point object in which to store the value, optional (otherwise\n     *  will create a new point)\n     * @param {PointData} globalPos - A Point object containing your custom global coords, optional\n     *  (otherwise will use the current global coords)\n     * @returns - A point containing the coordinates of the InteractionData position relative\n     *  to the Container\n     */\n    public getLocalPosition<P extends PointData = Point>(container: Container, point?: P, globalPos?: PointData): P\n    {\n        return container.worldTransform.applyInverse<P>(globalPos || this.global, point);\n    }\n\n    /**\n     * Whether the modifier key was pressed when this event natively occurred.\n     * @param key - The modifier key.\n     */\n    public getModifierState(key: string): boolean\n    {\n        return 'getModifierState' in this.nativeEvent && this.nativeEvent.getModifierState(key);\n    }\n\n    /**\n     * Not supported.\n     * @param _typeArg\n     * @param _canBubbleArg\n     * @param _cancelableArg\n     * @param _viewArg\n     * @param _detailArg\n     * @param _screenXArg\n     * @param _screenYArg\n     * @param _clientXArg\n     * @param _clientYArg\n     * @param _ctrlKeyArg\n     * @param _altKeyArg\n     * @param _shiftKeyArg\n     * @param _metaKeyArg\n     * @param _buttonArg\n     * @param _relatedTargetArg\n     * @deprecated since 7.0.0\n     */\n    // eslint-disable-next-line max-params\n    public initMouseEvent(\n        _typeArg: string,\n        _canBubbleArg: boolean,\n        _cancelableArg: boolean,\n        _viewArg: Window,\n        _detailArg: number,\n        _screenXArg: number,\n        _screenYArg: number,\n        _clientXArg: number,\n        _clientYArg: number,\n        _ctrlKeyArg: boolean,\n        _altKeyArg: boolean,\n        _shiftKeyArg: boolean,\n        _metaKeyArg: boolean,\n        _buttonArg: number,\n        _relatedTargetArg: EventTarget\n    ): void\n    {\n        throw new Error('Method not implemented.');\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAWO,MAAM,8LAA4B,iBAGzC,CAAA;IAHO,WAAA,EAAA;QAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;QA0BH,+DAAA,GAAO,IAAA,CAAA,MAAA,GAAgB,qKAAI,QAAM,EAAA,CAAA;QAwBjC,yEAAA,GAAO,IAAA,CAAA,QAAA,GAAkB,qKAAI,QAAM,EAAA,CAAA;QASnC,uHAAA,GAAO,IAAA,CAAA,MAAA,GAAgB,qKAAI,QAAM,EAAA,CAAA;QASjC,4CAAA,GAAO,IAAA,CAAA,MAAA,GAAgB,qKAAI,QAAM,EAAA,CAAA;QAYjC;;;KAAA,GAAO,IAAA,CAAA,MAAA,GAAgB,qKAAI,QAAM,EAAA,CAAA;IAAA,CAAA;IAAA,cAAA,GAnDjC,IAAW,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA,cAAA,GAGrD,IAAW,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA;;;GAAA,GAMrD,IAAI,CAAY,GAAA;QAAE,OAAO,IAAK,CAAA,OAAA,CAAA;IAAA,CAAS;IAAA;;;GAAA,GAMvC,IAAI,CAAY,GAAA;QAAE,OAAO,IAAK,CAAA,OAAA,CAAA;IAAA,CAAS;IAAA,cAAA,GASvC,IAAI,SAAoB,GAAA;QAAE,OAAO,IAAA,CAAK,QAAS,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA,cAAA,GAGlD,IAAI,SAAoB,GAAA;QAAE,OAAO,IAAA,CAAK,QAAS,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA,cAAA,GAMlD,IAAI,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA,cAAA,GAG9C,IAAI,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA,cAAA,GAM9C,IAAI,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA,cAAA,GAG9C,IAAI,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA;;;GAAA,GAY9C,IAAI,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA;;;GAAA,GAM9C,IAAI,OAAkB,GAAA;QAAE,OAAO,IAAA,CAAK,MAAO,CAAA,CAAA,CAAA;IAAA,CAAG;IAAA;;;;;;;;;;GAAA,GAavC,gBAAA,CAA8C,SAAsB,EAAA,KAAA,EAAW,SACtF,EAAA;QACI,OAAO,UAAU,cAAe,CAAA,YAAA,CAAgB,SAAa,IAAA,IAAA,CAAK,MAAA,EAAQ,KAAK,CAAA,CAAA;IAAA,CACnF;IAAA;;;GAAA,GAMO,iBAAiB,GACxB,EAAA;QACI,OAAO,sBAAsB,IAAK,CAAA,WAAA,IAAe,IAAK,CAAA,WAAA,CAAY,gBAAA,CAAiB,GAAG,CAAA,CAAA;IAAA,CAC1F;IAAA;;;;;;;;;;;;;;;;;;GAAA,GAAA,sCAAA;IAsBO,cACH,CAAA,QAAA,EACA,aACA,EAAA,cAAA,EACA,QAAA,EACA,UACA,EAAA,WAAA,EACA,WACA,EAAA,WAAA,EACA,WAAA,EACA,WACA,EAAA,UAAA,EACA,YACA,EAAA,WAAA,EACA,UAAA,EACA,iBAEJ,EAAA;QACU,MAAA,IAAI,MAAM,yBAAyB,CAAA,CAAA;IAAA,CAC7C;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2457, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2463, "column": 0}, "map": {"version":3,"file":"FederatedPointerEvent.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/FederatedPointerEvent.ts"],"sourcesContent":["import { FederatedMouseEvent } from './FederatedMouseEvent';\n\n/**\n * A {@link FederatedEvent} for pointer events.\n * @memberof events\n */\nexport class FederatedPointerEvent extends FederatedMouseEvent implements PointerEvent\n{\n    /**\n     * The unique identifier of the pointer.\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerId}\n     */\n    public pointerId: number;\n\n    /**\n     * The width of the pointer's contact along the x-axis, measured in CSS pixels.\n     * radiusX of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/width\n     */\n    public width = 0;\n\n    /**\n     * The height of the pointer's contact along the y-axis, measured in CSS pixels.\n     * radiusY of TouchEvents will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/height\n     */\n    public height = 0;\n\n    /**\n     * Indicates whether or not the pointer device that created the event is the primary pointer.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/isPrimary\n     */\n    public isPrimary = false;\n\n    /**\n     * The type of pointer that triggered the event.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerType\n     */\n    public pointerType: string;\n\n    /**\n     * Pressure applied by the pointing device during the event.\n     *s\n     * A Touch's force property will be represented by this value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pressure\n     */\n    public pressure: number;\n\n    /**\n     * Barrel pressure on a stylus pointer.\n     * @see https://w3c.github.io/pointerevents/#pointerevent-interface\n     */\n    public tangentialPressure: number;\n\n    /**\n     * The angle, in degrees, between the pointer device and the screen.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/tiltX\n     */\n    public tiltX: number;\n\n    /**\n     * The angle, in degrees, between the pointer device and the screen.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/tiltY\n     */\n    public tiltY: number;\n\n    /**\n     * Twist of a stylus pointer.\n     * @see https://w3c.github.io/pointerevents/#pointerevent-interface\n     */\n    public twist: number;\n\n    /** This is the number of clicks that occurs in 200ms/click of each other. */\n    public detail: number;\n\n    // Only included for completeness for now\n    public getCoalescedEvents(): PointerEvent[]\n    {\n        if (this.type === 'pointermove' || this.type === 'mousemove' || this.type === 'touchmove')\n        {\n            return [this];\n        }\n\n        return [];\n    }\n\n    // Only included for completeness for now\n    public getPredictedEvents(): PointerEvent[]\n    {\n        throw new Error('getPredictedEvents is not supported!');\n    }\n}\n"],"names":[],"mappings":";;;;;;AAMO,MAAM,qMAA8B,sBAC3C,CAAA;IADO,WAAA,EAAA;QAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;QAaH;;;;KAAA,GAAA,IAAA,CAAO,KAAQ,GAAA,CAAA,CAAA;QAOf;;;;KAAA,GAAA,IAAA,CAAO,MAAS,GAAA,CAAA,CAAA;QAMhB;;;KAAA,GAAA,IAAA,CAAO,SAAY,GAAA,KAAA,CAAA;IAAA,CAAA;IAAA,yCAAA;IA4CZ,kBACP,GAAA;QACQ,IAAA,IAAA,CAAK,IAAA,KAAS,aAAiB,IAAA,IAAA,CAAK,IAAA,KAAS,WAAe,IAAA,IAAA,CAAK,IAAA,KAAS,WAC9E,EAAA;YACI,OAAO;gBAAC,IAAI;aAAA,CAAA;QAAA,CAChB;QAEA,OAAO,EAAC,CAAA;IAAA,CACZ;IAAA,yCAAA;IAGO,kBACP,GAAA;QACU,MAAA,IAAI,MAAM,sCAAsC,CAAA,CAAA;IAAA,CAC1D;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2509, "column": 0}, "map": {"version":3,"file":"FederatedWheelEvent.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/FederatedWheelEvent.ts"],"sourcesContent":["import { FederatedMouseEvent } from './FederatedMouseEvent';\n\n/**\n * A {@link FederatedEvent} for wheel events.\n * @memberof events\n */\nexport class FederatedWheelEvent extends FederatedMouseEvent implements WheelEvent\n{\n    /**\n     * The units of `deltaX`, `deltaY`, and `deltaZ`. This is one of `DOM_DELTA_LINE`,\n     * `DOM_DELTA_PAGE`, `DOM_DELTA_PIXEL`.\n     */\n    public deltaMode: number;\n\n    /** Horizontal scroll amount */\n    public deltaX: number;\n\n    /** Vertical scroll amount */\n    public deltaY: number;\n\n    /** z-axis scroll amount. */\n    public deltaZ: number;\n\n    /** Units specified in pixels. */\n    public static readonly DOM_DELTA_PIXEL = 0;\n\n    /** Units specified in pixels. */\n    public readonly DOM_DELTA_PIXEL = 0;\n\n    /** Units specified in lines. */\n    public static readonly DOM_DELTA_LINE = 1;\n\n    /** Units specified in lines. */\n    public readonly DOM_DELTA_LINE = 1;\n\n    /** Units specified in pages. */\n    public static readonly DOM_DELTA_PAGE = 2;\n\n    /** Units specified in pages. */\n    public readonly DOM_DELTA_PAGE = 2;\n}\n"],"names":[],"mappings":";;;;;;AAMO,MAAM,mMAA4B,sBACzC,CAAA;IADO,WAAA,EAAA;QAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;QAqBH,+BAAA,GAAA,IAAA,CAAgB,eAAkB,GAAA,CAAA,CAAA;QAMlC,8BAAA,GAAA,IAAA,CAAgB,cAAiB,GAAA,CAAA,CAAA;QAMjC,8BAAA,GAAA,IAAA,CAAgB,cAAiB,GAAA,CAAA,CAAA;IAAA,CAAA;AACrC,CAAA;AAAA,+BAAA,GAlCa,mBAAA,CAkBc,eAAkB,GAAA,CAAA,CAAA;AAAA,8BAAA,GAlBhC,mBAAA,CAwBc,cAAiB,GAAA,CAAA,CAAA;AAAA,8BAAA,GAxB/B,mBAAA,CA8Bc,cAAiB,GAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2534, "column": 0}, "map": {"version":3,"file":"EventBoundary.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/EventBoundary.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { Point } from '../maths/point/Point';\nimport { warn } from '../utils/logging/warn';\nimport { EventsTicker } from './EventTicker';\nimport { FederatedMouseEvent } from './FederatedMouseEvent';\nimport { FederatedPointerEvent } from './FederatedPointerEvent';\nimport { FederatedWheelEvent } from './FederatedWheelEvent';\n\nimport type { Renderable } from '../rendering/renderers/shared/Renderable';\nimport type { Container } from '../scene/container/Container';\nimport type { EmitterListeners, TrackingData } from './EventBoundaryTypes';\nimport type { FederatedEvent } from './FederatedEvent';\nimport type {\n    Cursor, EventMode, FederatedEventHandler,\n} from './FederatedEventTarget';\n\n// The maximum iterations used in propagation. This prevent infinite loops.\nconst PROPAGATION_LIMIT = 2048;\n\nconst tempHitLocation = new Point();\nconst tempLocalMapping = new Point();\n\n/**\n * Event boundaries are \"barriers\" where events coming from an upstream scene are modified before downstream propagation.\n *\n * ## Root event boundary\n *\n * The {@link EventSystem#rootBoundary rootBoundary} handles events coming from the &lt;canvas /&gt;.\n * {@link EventSystem} handles the normalization from native {@link https://dom.spec.whatwg.org/#event Events}\n * into {@link FederatedEvent FederatedEvents}. The rootBoundary then does the hit-testing and event dispatch\n * for the upstream normalized event.\n *\n * ## Additional event boundaries\n *\n * An additional event boundary may be desired within an application's scene graph. For example, if a portion of the scene is\n * is flat with many children at one level - a spatial hash maybe needed to accelerate hit testing. In this scenario, the\n * container can be detached from the scene and glued using a custom event boundary.\n *\n * ```ts\n * import { Container } from 'pixi.js';\n * import { EventBoundary } from 'pixi.js';\n * import { SpatialHash } from 'pixi-spatial-hash';\n *\n * class HashedHitTestingEventBoundary\n * {\n *     private spatialHash: SpatialHash;\n *\n *     constructor(scene: Container, spatialHash: SpatialHash)\n *     {\n *         super(scene);\n *         this.spatialHash = spatialHash;\n *     }\n *\n *     hitTestRecursive(...)\n *     {\n *         // TODO: If target === this.rootTarget, then use spatial hash to get a\n *         // list of possible children that match the given (x,y) coordinates.\n *     }\n * }\n *\n * class VastScene extends Container\n * {\n *     protected eventBoundary: EventBoundary;\n *     protected scene: Container;\n *     protected spatialHash: SpatialHash;\n *\n *     constructor()\n *     {\n *         this.scene = new Container();\n *         this.spatialHash = new SpatialHash();\n *         this.eventBoundary = new HashedHitTestingEventBoundary(this.scene, this.spatialHash);\n *\n *         // Populate this.scene with a ton of children, while updating this.spatialHash\n *     }\n * }\n * ```\n * @memberof events\n */\nexport class EventBoundary\n{\n    /**\n     * The root event-target residing below the event boundary.\n     * All events are dispatched trickling down and bubbling up to this `rootTarget`.\n     */\n    public rootTarget: Container;\n\n    /**\n     * Emits events after they were dispatched into the scene graph.\n     *\n     * This can be used for global events listening, regardless of the scene graph being used. It should\n     * not be used by interactive libraries for normal use.\n     *\n     * Special events that do not bubble all the way to the root target are not emitted from here,\n     * e.g. pointerenter, pointerleave, click.\n     */\n    public dispatch: EventEmitter = new EventEmitter();\n\n    /** The cursor preferred by the event targets underneath this boundary. */\n    public cursor: Cursor | string;\n\n    /**\n     * This flag would emit `pointermove`, `touchmove`, and `mousemove` events on all Containers.\n     *\n     * The `moveOnAll` semantics mirror those of earlier versions of PixiJS. This was disabled in favor of\n     * the Pointer Event API's approach.\n     */\n    public moveOnAll = false;\n\n    /** Enables the global move events. `globalpointermove`, `globaltouchmove`, and `globalmousemove` */\n    public enableGlobalMoveEvents = true;\n\n    /**\n     * Maps event types to forwarding handles for them.\n     *\n     * {@link EventBoundary EventBoundary} provides mapping for \"pointerdown\", \"pointermove\",\n     * \"pointerout\", \"pointerleave\", \"pointerover\", \"pointerup\", and \"pointerupoutside\" by default.\n     * @see EventBoundary#addEventMapping\n     */\n    protected mappingTable: Record<string, Array<{\n        fn: (e: FederatedEvent) => void,\n        priority: number\n    }>>;\n\n    /**\n     * State object for mapping methods.\n     * @see EventBoundary#trackingData\n     */\n    protected mappingState: Record<string, any> = {\n        trackingData: {}\n    };\n\n    /**\n     * The event pool maps event constructors to an free pool of instances of those specific events.\n     * @see EventBoundary#allocateEvent\n     * @see EventBoundary#freeEvent\n     */\n    protected eventPool: Map<typeof FederatedEvent, FederatedEvent[]> = new Map();\n\n    /** Every interactive element gathered from the scene. Only used in `pointermove` */\n    private readonly _allInteractiveElements: Container[] = [];\n    /** Every element that passed the hit test. Only used in `pointermove` */\n    private _hitElements: Container[] = [];\n    /** Whether or not to collect all the interactive elements from the scene. Enabled in `pointermove` */\n    private _isPointerMoveEvent = false;\n\n    /**\n     * @param rootTarget - The holder of the event boundary.\n     */\n    constructor(rootTarget?: Container)\n    {\n        this.rootTarget = rootTarget;\n\n        this.hitPruneFn = this.hitPruneFn.bind(this);\n        this.hitTestFn = this.hitTestFn.bind(this);\n        this.mapPointerDown = this.mapPointerDown.bind(this);\n        this.mapPointerMove = this.mapPointerMove.bind(this);\n        this.mapPointerOut = this.mapPointerOut.bind(this);\n        this.mapPointerOver = this.mapPointerOver.bind(this);\n        this.mapPointerUp = this.mapPointerUp.bind(this);\n        this.mapPointerUpOutside = this.mapPointerUpOutside.bind(this);\n        this.mapWheel = this.mapWheel.bind(this);\n\n        this.mappingTable = {};\n        this.addEventMapping('pointerdown', this.mapPointerDown);\n        this.addEventMapping('pointermove', this.mapPointerMove);\n        this.addEventMapping('pointerout', this.mapPointerOut);\n        this.addEventMapping('pointerleave', this.mapPointerOut);\n        this.addEventMapping('pointerover', this.mapPointerOver);\n        this.addEventMapping('pointerup', this.mapPointerUp);\n        this.addEventMapping('pointerupoutside', this.mapPointerUpOutside);\n        this.addEventMapping('wheel', this.mapWheel);\n    }\n\n    /**\n     * Adds an event mapping for the event `type` handled by `fn`.\n     *\n     * Event mappings can be used to implement additional or custom events. They take an event\n     * coming from the upstream scene (or directly from the {@link EventSystem}) and dispatch new downstream events\n     * generally trickling down and bubbling up to {@link EventBoundary.rootTarget this.rootTarget}.\n     *\n     * To modify the semantics of existing events, the built-in mapping methods of EventBoundary should be overridden\n     * instead.\n     * @param type - The type of upstream event to map.\n     * @param fn - The mapping method. The context of this function must be bound manually, if desired.\n     */\n    public addEventMapping(type: string, fn: (e: FederatedEvent) => void): void\n    {\n        if (!this.mappingTable[type])\n        {\n            this.mappingTable[type] = [];\n        }\n\n        this.mappingTable[type].push({\n            fn,\n            priority: 0,\n        });\n        this.mappingTable[type].sort((a, b) => a.priority - b.priority);\n    }\n\n    /**\n     * Dispatches the given event\n     * @param e - The event to dispatch.\n     * @param type - The type of event to dispatch. Defaults to `e.type`.\n     */\n    public dispatchEvent(e: FederatedEvent, type?: string): void\n    {\n        e.propagationStopped = false;\n        e.propagationImmediatelyStopped = false;\n\n        this.propagate(e, type);\n        this.dispatch.emit(type || e.type, e);\n    }\n\n    /**\n     * Maps the given upstream event through the event boundary and propagates it downstream.\n     * @param e - The event to map.\n     */\n    public mapEvent(e: FederatedEvent): void\n    {\n        if (!this.rootTarget)\n        {\n            return;\n        }\n\n        const mappers = this.mappingTable[e.type];\n\n        if (mappers)\n        {\n            for (let i = 0, j = mappers.length; i < j; i++)\n            {\n                mappers[i].fn(e);\n            }\n        }\n        else\n        {\n            // #if _DEBUG\n            warn(`[EventBoundary]: Event mapping not defined for ${e.type}`);\n            // #endif\n        }\n    }\n\n    /**\n     * Finds the Container that is the target of a event at the given coordinates.\n     *\n     * The passed (x,y) coordinates are in the world space above this event boundary.\n     * @param x - The x coordinate of the event.\n     * @param y - The y coordinate of the event.\n     */\n    public hitTest(\n        x: number,\n        y: number,\n    ): Container\n    {\n        EventsTicker.pauseUpdate = true;\n        // if we are using global move events, we need to hit test the whole scene graph\n        const useMove = this._isPointerMoveEvent && this.enableGlobalMoveEvents;\n        const fn = useMove ? 'hitTestMoveRecursive' : 'hitTestRecursive';\n        const invertedPath = this[fn](\n            this.rootTarget,\n            this.rootTarget.eventMode,\n            tempHitLocation.set(x, y),\n            this.hitTestFn,\n            this.hitPruneFn,\n        );\n\n        return invertedPath && invertedPath[0];\n    }\n\n    /**\n     * Propagate the passed event from from {@link EventBoundary.rootTarget this.rootTarget} to its\n     * target {@code e.target}.\n     * @param e - The event to propagate.\n     * @param type - The type of event to propagate. Defaults to `e.type`.\n     */\n    public propagate(e: FederatedEvent, type?: string): void\n    {\n        if (!e.target)\n        {\n            // This usually occurs when the scene graph is not interactive.\n            return;\n        }\n\n        const composedPath = e.composedPath();\n\n        // Capturing phase\n        e.eventPhase = e.CAPTURING_PHASE;\n\n        for (let i = 0, j = composedPath.length - 1; i < j; i++)\n        {\n            e.currentTarget = composedPath[i];\n\n            this.notifyTarget(e, type);\n\n            if (e.propagationStopped || e.propagationImmediatelyStopped) return;\n        }\n\n        // At target phase\n        e.eventPhase = e.AT_TARGET;\n        e.currentTarget = e.target;\n\n        this.notifyTarget(e, type);\n\n        if (e.propagationStopped || e.propagationImmediatelyStopped) return;\n\n        // Bubbling phase\n        e.eventPhase = e.BUBBLING_PHASE;\n\n        for (let i = composedPath.length - 2; i >= 0; i--)\n        {\n            e.currentTarget = composedPath[i];\n\n            this.notifyTarget(e, type);\n\n            if (e.propagationStopped || e.propagationImmediatelyStopped) return;\n        }\n    }\n\n    /**\n     * Emits the event {@code e} to all interactive containers. The event is propagated in the bubbling phase always.\n     *\n     * This is used in the `globalpointermove` event.\n     * @param e - The emitted event.\n     * @param type - The listeners to notify.\n     * @param targets - The targets to notify.\n     */\n    public all(e: FederatedEvent, type?: string | string[], targets = this._allInteractiveElements): void\n    {\n        if (targets.length === 0) return;\n\n        e.eventPhase = e.BUBBLING_PHASE;\n\n        const events = Array.isArray(type) ? type : [type];\n\n        // loop through all interactive elements and notify them of the event\n        // loop through targets backwards\n        for (let i = targets.length - 1; i >= 0; i--)\n        {\n            events.forEach((event) =>\n            {\n                e.currentTarget = targets[i];\n                this.notifyTarget(e, event);\n            });\n        }\n    }\n\n    /**\n     * Finds the propagation path from {@link EventBoundary.rootTarget rootTarget} to the passed\n     * {@code target}. The last element in the path is {@code target}.\n     * @param target - The target to find the propagation path to.\n     */\n    public propagationPath(target: Container): Container[]\n    {\n        const propagationPath = [target];\n\n        for (let i = 0; i < PROPAGATION_LIMIT && (target !== this.rootTarget && target.parent); i++)\n        {\n            if (!target.parent)\n            {\n                throw new Error('Cannot find propagation path to disconnected target');\n            }\n\n            propagationPath.push(target.parent);\n\n            target = target.parent;\n        }\n\n        propagationPath.reverse();\n\n        return propagationPath;\n    }\n\n    protected hitTestMoveRecursive(\n        currentTarget: Container,\n        eventMode: EventMode,\n        location: Point,\n        testFn: (object: Container, pt: Point) => boolean,\n        pruneFn: (object: Container, pt: Point) => boolean,\n        ignore = false\n    ): Container[]\n    {\n        let shouldReturn = false;\n\n        // only bail out early if it is not interactive\n        if (this._interactivePrune(currentTarget)) return null;\n\n        if (currentTarget.eventMode === 'dynamic' || eventMode === 'dynamic')\n        {\n            EventsTicker.pauseUpdate = false;\n        }\n\n        if (currentTarget.interactiveChildren && currentTarget.children)\n        {\n            const children = currentTarget.children;\n\n            for (let i = children.length - 1; i >= 0; i--)\n            {\n                const child = children[i] as Container;\n\n                const nestedHit = this.hitTestMoveRecursive(\n                    child,\n                    this._isInteractive(eventMode) ? eventMode : child.eventMode,\n                    location,\n                    testFn,\n                    pruneFn,\n                    ignore || pruneFn(currentTarget, location)\n                );\n\n                if (nestedHit)\n                {\n                    // Its a good idea to check if a child has lost its parent.\n                    // this means it has been removed whilst looping so its best\n                    if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent)\n                    {\n                        continue;\n                    }\n\n                    // Only add the current hit-test target to the hit-test chain if the chain\n                    // has already started (i.e. the event target has been found) or if the current\n                    // target is interactive (i.e. it becomes the event target).\n                    const isInteractive = currentTarget.isInteractive();\n\n                    if (nestedHit.length > 0 || isInteractive)\n                    {\n                        if (isInteractive) this._allInteractiveElements.push(currentTarget);\n                        nestedHit.push(currentTarget);\n                    }\n\n                    // store all hit elements to be returned once we have traversed the whole tree\n                    if (this._hitElements.length === 0) this._hitElements = nestedHit;\n\n                    shouldReturn = true;\n                }\n            }\n        }\n\n        const isInteractiveMode = this._isInteractive(eventMode);\n        const isInteractiveTarget = currentTarget.isInteractive();\n\n        if (isInteractiveTarget && isInteractiveTarget) this._allInteractiveElements.push(currentTarget);\n\n        // we don't carry on hit testing something once we have found a hit,\n        // now only care about gathering the interactive elements\n        if (ignore || this._hitElements.length > 0) return null;\n\n        if (shouldReturn) return this._hitElements as Container[];\n\n        // Finally, hit test this Container itself.\n        if (isInteractiveMode && (!pruneFn(currentTarget, location) && testFn(currentTarget, location)))\n        {\n            // The current hit-test target is the event's target only if it is interactive. Otherwise,\n            // the first interactive ancestor will be the event's target.\n            return isInteractiveTarget ? [currentTarget] : [];\n        }\n\n        return null;\n    }\n\n    /**\n     * Recursive implementation for {@link EventBoundary.hitTest hitTest}.\n     * @param currentTarget - The Container that is to be hit tested.\n     * @param eventMode - The event mode for the `currentTarget` or one of its parents.\n     * @param location - The location that is being tested for overlap.\n     * @param testFn - Callback that determines whether the target passes hit testing. This callback\n     *  can assume that `pruneFn` failed to prune the container.\n     * @param pruneFn - Callback that determiness whether the target and all of its children\n     *  cannot pass the hit test. It is used as a preliminary optimization to prune entire subtrees\n     *  of the scene graph.\n     * @returns An array holding the hit testing target and all its ancestors in order. The first element\n     *  is the target itself and the last is {@link EventBoundary.rootTarget rootTarget}. This is the opposite\n     *  order w.r.t. the propagation path. If no hit testing target is found, null is returned.\n     */\n    protected hitTestRecursive(\n        currentTarget: Container,\n        eventMode: EventMode,\n        location: Point,\n        testFn: (object: Container, pt: Point) => boolean,\n        pruneFn: (object: Container, pt: Point) => boolean\n    ): Container[]\n    {\n        // Attempt to prune this Container and its subtree as an optimization.\n        if (this._interactivePrune(currentTarget) || pruneFn(currentTarget, location))\n        {\n            return null;\n        }\n        if (currentTarget.eventMode === 'dynamic' || eventMode === 'dynamic')\n        {\n            EventsTicker.pauseUpdate = false;\n        }\n\n        // Find a child that passes the hit testing and return one, if any.\n        if (currentTarget.interactiveChildren && currentTarget.children)\n        {\n            const children = currentTarget.children;\n            const relativeLocation = location;\n\n            for (let i = children.length - 1; i >= 0; i--)\n            {\n                const child = children[i] as Container;\n\n                const nestedHit = this.hitTestRecursive(\n                    child,\n                    this._isInteractive(eventMode) ? eventMode : child.eventMode,\n                    relativeLocation,\n                    testFn,\n                    pruneFn\n                );\n\n                if (nestedHit)\n                {\n                    // Its a good idea to check if a child has lost its parent.\n                    // this means it has been removed whilst looping so its best\n                    if (nestedHit.length > 0 && !nestedHit[nestedHit.length - 1].parent)\n                    {\n                        continue;\n                    }\n\n                    // Only add the current hit-test target to the hit-test chain if the chain\n                    // has already started (i.e. the event target has been found) or if the current\n                    // target is interactive (i.e. it becomes the event target).\n                    const isInteractive = currentTarget.isInteractive();\n\n                    if (nestedHit.length > 0 || isInteractive) nestedHit.push(currentTarget);\n\n                    return nestedHit;\n                }\n            }\n        }\n\n        const isInteractiveMode = this._isInteractive(eventMode);\n        const isInteractiveTarget = currentTarget.isInteractive();\n\n        // Finally, hit test this Container itself.\n        if (isInteractiveMode && testFn(currentTarget, location))\n        {\n            // The current hit-test target is the event's target only if it is interactive. Otherwise,\n            // the first interactive ancestor will be the event's target.\n            return isInteractiveTarget ? [currentTarget] : [];\n        }\n\n        return null;\n    }\n\n    private _isInteractive(int: EventMode): int is 'static' | 'dynamic'\n    {\n        return int === 'static' || int === 'dynamic';\n    }\n\n    private _interactivePrune(container: Container): boolean\n    {\n        // If container is a mask, invisible, or not renderable then it cannot be hit directly.\n        if (!container || !container.visible || !container.renderable || !container.measurable)\n        {\n            return true;\n        }\n\n        // If this Container is none then it cannot be hit by anything.\n        if (container.eventMode === 'none')\n        {\n            return true;\n        }\n\n        // If this Container is passive and it has no interactive children then it cannot be hit\n        if (container.eventMode === 'passive' && !container.interactiveChildren)\n        {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether the container or any of its children cannot pass the hit test at all.\n     *\n     * {@link EventBoundary}'s implementation uses the {@link Container.hitArea hitArea}\n     * and {@link Container._maskEffect} for pruning.\n     * @param container - The container to prune.\n     * @param location - The location to test for overlap.\n     */\n    protected hitPruneFn(container: Container, location: Point): boolean\n    {\n        if (container.hitArea)\n        {\n            container.worldTransform.applyInverse(location, tempLocalMapping);\n\n            if (!container.hitArea.contains(tempLocalMapping.x, tempLocalMapping.y))\n            {\n                return true;\n            }\n        }\n\n        if (container.effects && container.effects.length)\n        {\n            for (let i = 0; i < container.effects.length; i++)\n            {\n                const effect = container.effects[i];\n\n                if (effect.containsPoint)\n                {\n                    const effectContainsPoint = effect.containsPoint(location, this.hitTestFn);\n\n                    if (!effectContainsPoint)\n                    {\n                        return true;\n                    }\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether the container passes hit testing for the given location.\n     * @param container - The container to test.\n     * @param location - The location to test for overlap.\n     * @returns - Whether `container` passes hit testing for `location`.\n     */\n    protected hitTestFn(container: Container, location: Point): boolean\n    {\n        // If the container failed pruning with a hitArea, then it must pass it.\n        if (container.hitArea)\n        {\n            return true;\n        }\n\n        if ((container as Renderable)?.containsPoint)\n        {\n            container.worldTransform.applyInverse(location, tempLocalMapping);\n\n            return (container as Renderable).containsPoint(tempLocalMapping) as boolean;\n        }\n\n        // TODO: Should we hit test based on bounds?\n\n        return false;\n    }\n\n    /**\n     * Notify all the listeners to the event's `currentTarget`.\n     *\n     * If the `currentTarget` contains the property `on<type>`, then it is called here,\n     * simulating the behavior from version 6.x and prior.\n     * @param e - The event passed to the target.\n     * @param type - The type of event to notify. Defaults to `e.type`.\n     */\n    protected notifyTarget(e: FederatedEvent, type?: string): void\n    {\n        if (!e.currentTarget.isInteractive())\n        {\n            return;\n        }\n\n        type ??= e.type;\n\n        // call the `on${type}` for the current target if it exists\n        const handlerKey = `on${type}` as keyof Container;\n\n        (e.currentTarget[handlerKey] as FederatedEventHandler<FederatedEvent>)?.(e);\n\n        const key = e.eventPhase === e.CAPTURING_PHASE || e.eventPhase === e.AT_TARGET ? `${type}capture` : type;\n\n        this._notifyListeners(e, key);\n\n        if (e.eventPhase === e.AT_TARGET)\n        {\n            this._notifyListeners(e, type);\n        }\n    }\n\n    /**\n     * Maps the upstream `pointerdown` events to a downstream `pointerdown` event.\n     *\n     * `touchstart`, `rightdown`, `mousedown` events are also dispatched for specific pointer types.\n     * @param from - The upstream `pointerdown` event.\n     */\n    protected mapPointerDown(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-pointer event as a pointer event');\n            // #endif\n\n            return;\n        }\n\n        const e = this.createPointerEvent(from);\n\n        this.dispatchEvent(e, 'pointerdown');\n\n        if (e.pointerType === 'touch')\n        {\n            this.dispatchEvent(e, 'touchstart');\n        }\n        else if (e.pointerType === 'mouse' || e.pointerType === 'pen')\n        {\n            const isRightButton = e.button === 2;\n\n            this.dispatchEvent(e, isRightButton ? 'rightdown' : 'mousedown');\n        }\n\n        const trackingData = this.trackingData(from.pointerId);\n\n        trackingData.pressTargetsByButton[from.button] = e.composedPath();\n\n        this.freeEvent(e);\n    }\n\n    /**\n     * Maps the upstream `pointermove` to downstream `pointerout`, `pointerover`, and `pointermove` events, in that order.\n     *\n     * The tracking data for the specific pointer has an updated `overTarget`. `mouseout`, `mouseover`,\n     * `mousemove`, and `touchmove` events are fired as well for specific pointer types.\n     * @param from - The upstream `pointermove` event.\n     */\n    protected mapPointerMove(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-pointer event as a pointer event');\n            // #endif\n\n            return;\n        }\n\n        this._allInteractiveElements.length = 0;\n        this._hitElements.length = 0;\n        this._isPointerMoveEvent = true;\n        const e = this.createPointerEvent(from);\n\n        this._isPointerMoveEvent = false;\n        const isMouse = e.pointerType === 'mouse' || e.pointerType === 'pen';\n        const trackingData = this.trackingData(from.pointerId);\n        const outTarget = this.findMountedTarget(trackingData.overTargets);\n\n        // First pointerout/pointerleave\n        if (trackingData.overTargets?.length > 0 && outTarget !== e.target)\n        {\n            // pointerout always occurs on the overTarget when the pointer hovers over another element.\n            const outType = from.type === 'mousemove' ? 'mouseout' : 'pointerout';\n            const outEvent = this.createPointerEvent(from, outType, outTarget);\n\n            this.dispatchEvent(outEvent, 'pointerout');\n            if (isMouse) this.dispatchEvent(outEvent, 'mouseout');\n\n            // If the pointer exits overTarget and its descendants, then a pointerleave event is also fired. This event\n            // is dispatched to all ancestors that no longer capture the pointer.\n            if (!e.composedPath().includes(outTarget))\n            {\n                const leaveEvent = this.createPointerEvent(from, 'pointerleave', outTarget);\n\n                leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n\n                while (leaveEvent.target && !e.composedPath().includes(leaveEvent.target))\n                {\n                    leaveEvent.currentTarget = leaveEvent.target;\n\n                    this.notifyTarget(leaveEvent);\n                    if (isMouse) this.notifyTarget(leaveEvent, 'mouseleave');\n\n                    leaveEvent.target = leaveEvent.target.parent;\n                }\n\n                this.freeEvent(leaveEvent);\n            }\n\n            this.freeEvent(outEvent);\n        }\n\n        // Then pointerover\n        if (outTarget !== e.target)\n        {\n            // pointerover always occurs on the new overTarget\n            const overType = from.type === 'mousemove' ? 'mouseover' : 'pointerover';\n            const overEvent = this.clonePointerEvent(e, overType);// clone faster\n\n            this.dispatchEvent(overEvent, 'pointerover');\n            if (isMouse) this.dispatchEvent(overEvent, 'mouseover');\n\n            // Probe whether the newly hovered Container is an ancestor of the original overTarget.\n            let overTargetAncestor = outTarget?.parent;\n\n            while (overTargetAncestor && overTargetAncestor !== this.rootTarget.parent)\n            {\n                if (overTargetAncestor === e.target) break;\n\n                overTargetAncestor = overTargetAncestor.parent;\n            }\n\n            // The pointer has entered a non-ancestor of the original overTarget. This means we need a pointerentered\n            // event.\n            const didPointerEnter = !overTargetAncestor || overTargetAncestor === this.rootTarget.parent;\n\n            if (didPointerEnter)\n            {\n                const enterEvent = this.clonePointerEvent(e, 'pointerenter');\n\n                enterEvent.eventPhase = enterEvent.AT_TARGET;\n\n                while (enterEvent.target\n                        && enterEvent.target !== outTarget\n                        && enterEvent.target !== this.rootTarget.parent)\n                {\n                    enterEvent.currentTarget = enterEvent.target;\n\n                    this.notifyTarget(enterEvent);\n                    if (isMouse) this.notifyTarget(enterEvent, 'mouseenter');\n\n                    enterEvent.target = enterEvent.target.parent;\n                }\n\n                this.freeEvent(enterEvent);\n            }\n\n            this.freeEvent(overEvent);\n        }\n\n        const allMethods: string[] = [];\n        const allowGlobalPointerEvents = this.enableGlobalMoveEvents ?? true;\n\n        this.moveOnAll ? allMethods.push('pointermove') : this.dispatchEvent(e, 'pointermove');\n        allowGlobalPointerEvents && allMethods.push('globalpointermove');\n\n        // Then pointermove\n        if (e.pointerType === 'touch')\n        {\n            this.moveOnAll ? allMethods.splice(1, 0, 'touchmove') : this.dispatchEvent(e, 'touchmove');\n            allowGlobalPointerEvents && allMethods.push('globaltouchmove');\n        }\n\n        if (isMouse)\n        {\n            this.moveOnAll ? allMethods.splice(1, 0, 'mousemove') : this.dispatchEvent(e, 'mousemove');\n            allowGlobalPointerEvents && allMethods.push('globalmousemove');\n            this.cursor = e.target?.cursor;\n        }\n\n        if (allMethods.length > 0)\n        {\n            this.all(e, allMethods);\n        }\n        this._allInteractiveElements.length = 0;\n        this._hitElements.length = 0;\n\n        trackingData.overTargets = e.composedPath();\n\n        this.freeEvent(e);\n    }\n\n    /**\n     * Maps the upstream `pointerover` to downstream `pointerover` and `pointerenter` events, in that order.\n     *\n     * The tracking data for the specific pointer gets a new `overTarget`.\n     * @param from - The upstream `pointerover` event.\n     */\n    protected mapPointerOver(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-pointer event as a pointer event');\n            // #endif\n\n            return;\n        }\n\n        const trackingData = this.trackingData(from.pointerId);\n        const e = this.createPointerEvent(from);\n        const isMouse = e.pointerType === 'mouse' || e.pointerType === 'pen';\n\n        this.dispatchEvent(e, 'pointerover');\n        if (isMouse) this.dispatchEvent(e, 'mouseover');\n        if (e.pointerType === 'mouse') this.cursor = e.target?.cursor;\n\n        // pointerenter events must be fired since the pointer entered from upstream.\n        const enterEvent = this.clonePointerEvent(e, 'pointerenter');\n\n        enterEvent.eventPhase = enterEvent.AT_TARGET;\n\n        while (enterEvent.target && enterEvent.target !== this.rootTarget.parent)\n        {\n            enterEvent.currentTarget = enterEvent.target;\n\n            this.notifyTarget(enterEvent);\n            if (isMouse) this.notifyTarget(enterEvent, 'mouseenter');\n\n            enterEvent.target = enterEvent.target.parent;\n        }\n\n        trackingData.overTargets = e.composedPath();\n\n        this.freeEvent(e);\n        this.freeEvent(enterEvent);\n    }\n\n    /**\n     * Maps the upstream `pointerout` to downstream `pointerout`, `pointerleave` events, in that order.\n     *\n     * The tracking data for the specific pointer is cleared of a `overTarget`.\n     * @param from - The upstream `pointerout` event.\n     */\n    protected mapPointerOut(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-pointer event as a pointer event');\n            // #endif\n\n            return;\n        }\n\n        const trackingData = this.trackingData(from.pointerId);\n\n        if (trackingData.overTargets)\n        {\n            const isMouse = from.pointerType === 'mouse' || from.pointerType === 'pen';\n            const outTarget = this.findMountedTarget(trackingData.overTargets);\n\n            // pointerout first\n            const outEvent = this.createPointerEvent(from, 'pointerout', outTarget);\n\n            this.dispatchEvent(outEvent);\n            if (isMouse) this.dispatchEvent(outEvent, 'mouseout');\n\n            // pointerleave(s) are also dispatched b/c the pointer must've left rootTarget and its descendants to\n            // get an upstream pointerout event (upstream events do not know rootTarget has descendants).\n            const leaveEvent = this.createPointerEvent(from, 'pointerleave', outTarget);\n\n            leaveEvent.eventPhase = leaveEvent.AT_TARGET;\n\n            while (leaveEvent.target && leaveEvent.target !== this.rootTarget.parent)\n            {\n                leaveEvent.currentTarget = leaveEvent.target;\n\n                this.notifyTarget(leaveEvent);\n                if (isMouse) this.notifyTarget(leaveEvent, 'mouseleave');\n\n                leaveEvent.target = leaveEvent.target.parent;\n            }\n\n            trackingData.overTargets = null;\n\n            this.freeEvent(outEvent);\n            this.freeEvent(leaveEvent);\n        }\n\n        this.cursor = null;\n    }\n\n    /**\n     * Maps the upstream `pointerup` event to downstream `pointerup`, `pointerupoutside`,\n     * and `click`/`rightclick`/`pointertap` events, in that order.\n     *\n     * The `pointerupoutside` event bubbles from the original `pointerdown` target to the most specific\n     * ancestor of the `pointerdown` and `pointerup` targets, which is also the `click` event's target. `touchend`,\n     * `rightup`, `mouseup`, `touchendoutside`, `rightupoutside`, `mouseupoutside`, and `tap` are fired as well for\n     * specific pointer types.\n     * @param from - The upstream `pointerup` event.\n     */\n    protected mapPointerUp(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-pointer event as a pointer event');\n            // #endif\n\n            return;\n        }\n\n        const now = performance.now();\n        const e = this.createPointerEvent(from);\n\n        this.dispatchEvent(e, 'pointerup');\n\n        if (e.pointerType === 'touch')\n        {\n            this.dispatchEvent(e, 'touchend');\n        }\n        else if (e.pointerType === 'mouse' || e.pointerType === 'pen')\n        {\n            const isRightButton = e.button === 2;\n\n            this.dispatchEvent(e, isRightButton ? 'rightup' : 'mouseup');\n        }\n\n        const trackingData = this.trackingData(from.pointerId);\n        const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n\n        let clickTarget = pressTarget;\n\n        // pointerupoutside only bubbles. It only bubbles upto the parent that doesn't contain\n        // the pointerup location.\n        if (pressTarget && !e.composedPath().includes(pressTarget))\n        {\n            let currentTarget = pressTarget;\n\n            while (currentTarget && !e.composedPath().includes(currentTarget))\n            {\n                e.currentTarget = currentTarget;\n\n                this.notifyTarget(e, 'pointerupoutside');\n\n                if (e.pointerType === 'touch')\n                {\n                    this.notifyTarget(e, 'touchendoutside');\n                }\n                else if (e.pointerType === 'mouse' || e.pointerType === 'pen')\n                {\n                    const isRightButton = e.button === 2;\n\n                    this.notifyTarget(e, isRightButton ? 'rightupoutside' : 'mouseupoutside');\n                }\n\n                currentTarget = currentTarget.parent;\n            }\n\n            delete trackingData.pressTargetsByButton[from.button];\n\n            // currentTarget is the most specific ancestor holding both the pointerdown and pointerup\n            // targets. That is - it's our click target!\n            clickTarget = currentTarget;\n        }\n\n        // click!\n        if (clickTarget)\n        {\n            const clickEvent = this.clonePointerEvent(e, 'click');\n\n            clickEvent.target = clickTarget;\n            clickEvent.path = null;\n\n            if (!trackingData.clicksByButton[from.button])\n            {\n                trackingData.clicksByButton[from.button] = {\n                    clickCount: 0,\n                    target: clickEvent.target,\n                    timeStamp: now,\n                };\n            }\n\n            const clickHistory = trackingData.clicksByButton[from.button];\n\n            if (clickHistory.target === clickEvent.target\n                && now - clickHistory.timeStamp < 200)\n            {\n                ++clickHistory.clickCount;\n            }\n            else\n            {\n                clickHistory.clickCount = 1;\n            }\n\n            clickHistory.target = clickEvent.target;\n            clickHistory.timeStamp = now;\n\n            clickEvent.detail = clickHistory.clickCount;\n\n            if (clickEvent.pointerType === 'mouse')\n            {\n                const isRightButton = clickEvent.button === 2;\n\n                this.dispatchEvent(clickEvent, isRightButton ? 'rightclick' : 'click');\n            }\n            else if (clickEvent.pointerType === 'touch')\n            {\n                this.dispatchEvent(clickEvent, 'tap');\n            }\n\n            this.dispatchEvent(clickEvent, 'pointertap');\n\n            this.freeEvent(clickEvent);\n        }\n\n        this.freeEvent(e);\n    }\n\n    /**\n     * Maps the upstream `pointerupoutside` event to a downstream `pointerupoutside` event, bubbling from the original\n     * `pointerdown` target to `rootTarget`.\n     *\n     * (The most specific ancestor of the `pointerdown` event and the `pointerup` event must the\n     * `{@link EventBoundary}'s root because the `pointerup` event occurred outside of the boundary.)\n     *\n     * `touchendoutside`, `mouseupoutside`, and `rightupoutside` events are fired as well for specific pointer\n     * types. The tracking data for the specific pointer is cleared of a `pressTarget`.\n     * @param from - The upstream `pointerupoutside` event.\n     */\n    protected mapPointerUpOutside(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-pointer event as a pointer event');\n            // #endif\n\n            return;\n        }\n\n        const trackingData = this.trackingData(from.pointerId);\n        const pressTarget = this.findMountedTarget(trackingData.pressTargetsByButton[from.button]);\n        const e = this.createPointerEvent(from);\n\n        if (pressTarget)\n        {\n            let currentTarget = pressTarget;\n\n            while (currentTarget)\n            {\n                e.currentTarget = currentTarget;\n\n                this.notifyTarget(e, 'pointerupoutside');\n\n                if (e.pointerType === 'touch')\n                {\n                    this.notifyTarget(e, 'touchendoutside');\n                }\n                else if (e.pointerType === 'mouse' || e.pointerType === 'pen')\n                {\n                    this.notifyTarget(e, e.button === 2 ? 'rightupoutside' : 'mouseupoutside');\n                }\n\n                currentTarget = currentTarget.parent;\n            }\n\n            delete trackingData.pressTargetsByButton[from.button];\n        }\n\n        this.freeEvent(e);\n    }\n\n    /**\n     * Maps the upstream `wheel` event to a downstream `wheel` event.\n     * @param from - The upstream `wheel` event.\n     */\n    protected mapWheel(from: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedWheelEvent))\n        {\n            // #if _DEBUG\n            warn('EventBoundary cannot map a non-wheel event as a wheel event');\n            // #endif\n\n            return;\n        }\n\n        const wheelEvent = this.createWheelEvent(from);\n\n        this.dispatchEvent(wheelEvent);\n        this.freeEvent(wheelEvent);\n    }\n\n    /**\n     * Finds the most specific event-target in the given propagation path that is still mounted in the scene graph.\n     *\n     * This is used to find the correct `pointerup` and `pointerout` target in the case that the original `pointerdown`\n     * or `pointerover` target was unmounted from the scene graph.\n     * @param propagationPath - The propagation path was valid in the past.\n     * @returns - The most specific event-target still mounted at the same location in the scene graph.\n     */\n    protected findMountedTarget(propagationPath: Container[]): Container\n    {\n        if (!propagationPath)\n        {\n            return null;\n        }\n\n        let currentTarget = propagationPath[0];\n\n        for (let i = 1; i < propagationPath.length; i++)\n        {\n            // Set currentTarget to the next target in the path only if it is still attached to the\n            // scene graph (i.e. parent still points to the expected ancestor).\n            if (propagationPath[i].parent === currentTarget)\n            {\n                currentTarget = propagationPath[i];\n            }\n            else\n            {\n                break;\n            }\n        }\n\n        return currentTarget;\n    }\n\n    /**\n     * Creates an event whose {@code originalEvent} is {@code from}, with an optional `type` and `target` override.\n     *\n     * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n     * @param from - The {@code originalEvent} for the returned event.\n     * @param [type=from.type] - The type of the returned event.\n     * @param target - The target of the returned event.\n     */\n    protected createPointerEvent(\n        from: FederatedPointerEvent,\n        type?: string,\n        target?: Container\n    ): FederatedPointerEvent\n    {\n        const event = this.allocateEvent(FederatedPointerEvent);\n\n        this.copyPointerData(from, event);\n        this.copyMouseData(from, event);\n        this.copyData(from, event);\n\n        event.nativeEvent = from.nativeEvent;\n        event.originalEvent = from;\n        event.target = target\n            ?? this.hitTest(event.global.x, event.global.y) as Container\n            ?? this._hitElements[0];\n\n        if (typeof type === 'string')\n        {\n            event.type = type;\n        }\n\n        return event;\n    }\n\n    /**\n     * Creates a wheel event whose {@code originalEvent} is {@code from}.\n     *\n     * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n     * @param from - The upstream wheel event.\n     */\n    protected createWheelEvent(from: FederatedWheelEvent): FederatedWheelEvent\n    {\n        const event = this.allocateEvent(FederatedWheelEvent);\n\n        this.copyWheelData(from, event);\n        this.copyMouseData(from, event);\n        this.copyData(from, event);\n\n        event.nativeEvent = from.nativeEvent;\n        event.originalEvent = from;\n        event.target = this.hitTest(event.global.x, event.global.y);\n\n        return event;\n    }\n\n    /**\n     * Clones the event {@code from}, with an optional {@code type} override.\n     *\n     * The event is allocated using {@link EventBoundary#allocateEvent this.allocateEvent}.\n     * @param from - The event to clone.\n     * @param [type=from.type] - The type of the returned event.\n     */\n    protected clonePointerEvent(from: FederatedPointerEvent, type?: string): FederatedPointerEvent\n    {\n        const event = this.allocateEvent(FederatedPointerEvent);\n\n        event.nativeEvent = from.nativeEvent;\n        event.originalEvent = from.originalEvent;\n\n        this.copyPointerData(from, event);\n        this.copyMouseData(from, event);\n        this.copyData(from, event);\n\n        // copy propagation path for perf\n        event.target = from.target;\n        event.path = from.composedPath().slice();\n        event.type = type ?? event.type;\n\n        return event;\n    }\n\n    /**\n     * Copies wheel {@link FederatedWheelEvent} data from {@code from} into {@code to}.\n     *\n     * The following properties are copied:\n     * + deltaMode\n     * + deltaX\n     * + deltaY\n     * + deltaZ\n     * @param from - The event to copy data from.\n     * @param to - The event to copy data into.\n     */\n    protected copyWheelData(from: FederatedWheelEvent, to: FederatedWheelEvent): void\n    {\n        to.deltaMode = from.deltaMode;\n        to.deltaX = from.deltaX;\n        to.deltaY = from.deltaY;\n        to.deltaZ = from.deltaZ;\n    }\n\n    /**\n     * Copies pointer {@link FederatedPointerEvent} data from {@code from} into {@code to}.\n     *\n     * The following properties are copied:\n     * + pointerId\n     * + width\n     * + height\n     * + isPrimary\n     * + pointerType\n     * + pressure\n     * + tangentialPressure\n     * + tiltX\n     * + tiltY\n     * @param from - The event to copy data from.\n     * @param to - The event to copy data into.\n     */\n    protected copyPointerData(from: FederatedEvent, to: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedPointerEvent && to instanceof FederatedPointerEvent)) return;\n\n        to.pointerId = from.pointerId;\n        to.width = from.width;\n        to.height = from.height;\n        to.isPrimary = from.isPrimary;\n        to.pointerType = from.pointerType;\n        to.pressure = from.pressure;\n        to.tangentialPressure = from.tangentialPressure;\n        to.tiltX = from.tiltX;\n        to.tiltY = from.tiltY;\n        to.twist = from.twist;\n    }\n\n    /**\n     * Copies mouse {@link FederatedMouseEvent} data from {@code from} to {@code to}.\n     *\n     * The following properties are copied:\n     * + altKey\n     * + button\n     * + buttons\n     * + clientX\n     * + clientY\n     * + metaKey\n     * + movementX\n     * + movementY\n     * + pageX\n     * + pageY\n     * + x\n     * + y\n     * + screen\n     * + shiftKey\n     * + global\n     * @param from - The event to copy data from.\n     * @param to - The event to copy data into.\n     */\n    protected copyMouseData(from: FederatedEvent, to: FederatedEvent): void\n    {\n        if (!(from instanceof FederatedMouseEvent && to instanceof FederatedMouseEvent)) return;\n\n        to.altKey = from.altKey;\n        to.button = from.button;\n        to.buttons = from.buttons;\n        to.client.copyFrom(from.client);\n        to.ctrlKey = from.ctrlKey;\n        to.metaKey = from.metaKey;\n        to.movement.copyFrom(from.movement);\n        to.screen.copyFrom(from.screen);\n        to.shiftKey = from.shiftKey;\n        to.global.copyFrom(from.global);\n    }\n\n    /**\n     * Copies base {@link FederatedEvent} data from {@code from} into {@code to}.\n     *\n     * The following properties are copied:\n     * + isTrusted\n     * + srcElement\n     * + timeStamp\n     * + type\n     * @param from - The event to copy data from.\n     * @param to - The event to copy data into.\n     */\n    protected copyData(from: FederatedEvent, to: FederatedEvent): void\n    {\n        to.isTrusted = from.isTrusted;\n        to.srcElement = from.srcElement;\n        to.timeStamp = performance.now();\n        to.type = from.type;\n        to.detail = from.detail;\n        to.view = from.view;\n        to.which = from.which;\n        to.layer.copyFrom(from.layer);\n        to.page.copyFrom(from.page);\n    }\n\n    /**\n     * @param id - The pointer ID.\n     * @returns The tracking data stored for the given pointer. If no data exists, a blank\n     *  state will be created.\n     */\n    protected trackingData(id: number): TrackingData\n    {\n        if (!this.mappingState.trackingData[id])\n        {\n            this.mappingState.trackingData[id] = {\n                pressTargetsByButton: {},\n                clicksByButton: {},\n                overTarget: null\n            };\n        }\n\n        return this.mappingState.trackingData[id];\n    }\n\n    /**\n     * Allocate a specific type of event from {@link EventBoundary#eventPool this.eventPool}.\n     *\n     * This allocation is constructor-agnostic, as long as it only takes one argument - this event\n     * boundary.\n     * @param constructor - The event's constructor.\n     */\n    protected allocateEvent<T extends FederatedEvent>(\n        constructor: { new(boundary: EventBoundary): T }\n    ): T\n    {\n        if (!this.eventPool.has(constructor as any))\n        {\n            this.eventPool.set(constructor as any, []);\n        }\n\n        const event = this.eventPool.get(constructor as any).pop() as T\n            || new constructor(this);\n\n        event.eventPhase = event.NONE;\n        event.currentTarget = null;\n        event.defaultPrevented = false;\n        event.path = null;\n        event.target = null;\n\n        return event;\n    }\n\n    /**\n     * Frees the event and puts it back into the event pool.\n     *\n     * It is illegal to reuse the event until it is allocated again, using `this.allocateEvent`.\n     *\n     * It is also advised that events not allocated from {@link EventBoundary#allocateEvent this.allocateEvent}\n     * not be freed. This is because of the possibility that the same event is freed twice, which can cause\n     * it to be allocated twice & result in overwriting.\n     * @param event - The event to be freed.\n     * @throws Error if the event is managed by another event boundary.\n     */\n    protected freeEvent<T extends FederatedEvent>(event: T): void\n    {\n        if (event.manager !== this) throw new Error('It is illegal to free an event not managed by this EventBoundary!');\n\n        const constructor = event.constructor;\n\n        if (!this.eventPool.has(constructor as any))\n        {\n            this.eventPool.set(constructor as any, []);\n        }\n\n        this.eventPool.get(constructor as any).push(event);\n    }\n\n    /**\n     * Similar to {@link EventEmitter.emit}, except it stops if the `propagationImmediatelyStopped` flag\n     * is set on the event.\n     * @param e - The event to call each listener with.\n     * @param type - The event key.\n     */\n    private _notifyListeners(e: FederatedEvent, type: string): void\n    {\n        const listeners = ((e.currentTarget as any)._events as EmitterListeners)[type];\n\n        if (!listeners) return;\n\n        if ('fn' in listeners)\n        {\n            if (listeners.once) e.currentTarget.removeListener(type, listeners.fn, undefined, true);\n            listeners.fn.call(listeners.context, e);\n        }\n        else\n        {\n            for (\n                let i = 0, j = listeners.length;\n                i < j && !e.propagationImmediatelyStopped;\n                i++)\n            {\n                if (listeners[i].once) e.currentTarget.removeListener(type, listeners[i].fn, undefined, true);\n                listeners[i].fn.call(listeners[i].context, e);\n            }\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3426, "column": 0}, "map": {"version":3,"file":"EventSystem.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/EventSystem.ts"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions';\nimport { EventBoundary } from './EventBoundary';\nimport { EventsTicker } from './EventTicker';\nimport { FederatedPointerEvent } from './FederatedPointerEvent';\nimport { FederatedWheelEvent } from './FederatedWheelEvent';\n\nimport type { ExtensionMetadata } from '../extensions/Extensions';\nimport type { PointData } from '../maths/point/PointData';\nimport type { System } from '../rendering/renderers/shared/system/System';\nimport type { Renderer } from '../rendering/renderers/types';\nimport type { PixiTouch } from './FederatedEvent';\nimport type { EventMode } from './FederatedEventTarget';\nimport type { FederatedMouseEvent } from './FederatedMouseEvent';\n\nconst MOUSE_POINTER_ID = 1;\nconst TOUCH_TO_POINTER: Record<string, string> = {\n    touchstart: 'pointerdown',\n    touchend: 'pointerup',\n    touchendoutside: 'pointerupoutside',\n    touchmove: 'pointermove',\n    touchcancel: 'pointercancel',\n};\n\n/** @ignore */\nexport interface EventSystemOptions\n{\n    /**\n     * The default event mode mode for all display objects.\n     * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n     */\n    eventMode?: EventMode;\n\n    /**\n     * The event features that are enabled by the EventSystem\n     * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n     * @example\n     * const app = new Application({\n     *   view: canvas,\n     *   events: {\n     *     move: true,\n     *     globalMove: false,\n     *     click: true,\n     *     wheel: true,\n     *   },\n     * });\n     */\n    eventFeatures?: Partial<EventSystemFeatures>\n}\n\n/**\n * The event features that are enabled by the EventSystem\n * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n * @since 7.2.0\n * @memberof events\n */\nexport interface EventSystemFeatures\n{\n    /**\n     * Enables pointer events associated with pointer movement:\n     * - `pointermove` / `mousemove` / `touchmove`\n     * - `pointerout` / `mouseout`\n     * - `pointerover` / `mouseover`\n     */\n    move: boolean;\n    // eslint-disable-next-line jsdoc/multiline-blocks\n    /**\n     * Enables global pointer move events:\n     * - `globalpointermove`\n     * - `globalmousemove`\n     * - `globaltouchemove`\n     */\n    globalMove: boolean;\n    /**\n     * Enables pointer events associated with clicking:\n     * - `pointerup` / `mouseup` / `touchend` / 'rightup'\n     * - `pointerupoutside` / `mouseupoutside` / `touchendoutside` / 'rightupoutside'\n     * - `pointerdown` / 'mousedown' / `touchstart` / 'rightdown'\n     * - `click` / `tap`\n     */\n    click: boolean;\n    /** - Enables wheel events. */\n    wheel: boolean;\n}\n\n/**\n * The system for handling UI events.\n * @memberof events\n */\nexport class EventSystem implements System<EventSystemOptions>\n{\n    /** @ignore */\n    public static extension: ExtensionMetadata = {\n        name: 'events',\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.CanvasSystem,\n            ExtensionType.WebGPUSystem,\n        ],\n        priority: -1,\n    };\n\n    /**\n     * The event features that are enabled by the EventSystem\n     * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n     * @since 7.2.0\n     */\n    public static defaultEventFeatures: EventSystemFeatures = {\n        /** Enables pointer events associated with pointer movement. */\n        move: true,\n        /** Enables global pointer move events. */\n        globalMove: true,\n        /** Enables pointer events associated with clicking. */\n        click: true,\n        /** Enables wheel events. */\n        wheel: true,\n    };\n\n    private static _defaultEventMode: EventMode;\n\n    /**\n     * The default interaction mode for all display objects.\n     * @see Container.eventMode\n     * @type {EventMode}\n     * @readonly\n     * @since 7.2.0\n     */\n    public static get defaultEventMode()\n    {\n        return this._defaultEventMode;\n    }\n\n    /**\n     * The {@link EventBoundary} for the stage.\n     *\n     * The {@link EventBoundary#rootTarget rootTarget} of this root boundary is automatically set to\n     * the last rendered object before any event processing is initiated. This means the main scene\n     * needs to be rendered atleast once before UI events will start propagating.\n     *\n     * The root boundary should only be changed during initialization. Otherwise, any state held by the\n     * event boundary may be lost (like hovered & pressed Containers).\n     */\n    public readonly rootBoundary: EventBoundary;\n\n    /** Does the device support touch events https://www.w3.org/TR/touch-events/ */\n    public readonly supportsTouchEvents = 'ontouchstart' in globalThis;\n\n    /** Does the device support pointer events https://www.w3.org/Submission/pointer-events/ */\n    public readonly supportsPointerEvents = !!globalThis.PointerEvent;\n\n    /**\n     * Should default browser actions automatically be prevented.\n     * Does not apply to pointer events for backwards compatibility\n     * preventDefault on pointer events stops mouse events from firing\n     * Thus, for every pointer event, there will always be either a mouse of touch event alongside it.\n     * @default true\n     */\n    public autoPreventDefault: boolean;\n\n    /**\n     * Dictionary of how different cursor modes are handled. Strings are handled as CSS cursor\n     * values, objects are handled as dictionaries of CSS values for {@code domElement},\n     * and functions are called instead of changing the CSS.\n     * Default CSS cursor values are provided for 'default' and 'pointer' modes.\n     */\n    public cursorStyles: Record<string, string | ((mode: string) => void) | CSSStyleDeclaration>;\n\n    /**\n     * The DOM element to which the root event listeners are bound. This is automatically set to\n     * the renderer's {@link Renderer#view view}.\n     */\n    public domElement: HTMLElement = null;\n\n    /** The resolution used to convert between the DOM client space into world space. */\n    public resolution = 1;\n\n    /** The renderer managing this {@link EventSystem}. */\n    public renderer: Renderer;\n\n    /**\n     * The event features that are enabled by the EventSystem\n     * (included in the **pixi.js** and **pixi.js-legacy** bundle), otherwise it will be ignored.\n     * @since 7.2.0\n     * @example\n     * const app = new Application()\n     * app.renderer.events.features.globalMove = false\n     *\n     * // to override all features use Object.assign\n     * Object.assign(app.renderer.events.features, {\n     *  move: false,\n     *  globalMove: false,\n     *  click: false,\n     *  wheel: false,\n     * })\n     */\n    public readonly features: EventSystemFeatures;\n\n    private _currentCursor: string;\n    private readonly _rootPointerEvent: FederatedPointerEvent;\n    private readonly _rootWheelEvent: FederatedWheelEvent;\n    private _eventsAdded: boolean;\n\n    /**\n     * @param {Renderer} renderer\n     */\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n        this.rootBoundary = new EventBoundary(null);\n        EventsTicker.init(this);\n\n        this.autoPreventDefault = true;\n        this._eventsAdded = false;\n\n        this._rootPointerEvent = new FederatedPointerEvent(null);\n        this._rootWheelEvent = new FederatedWheelEvent(null);\n\n        this.cursorStyles = {\n            default: 'inherit',\n            pointer: 'pointer',\n        };\n\n        this.features = new Proxy({ ...EventSystem.defaultEventFeatures }, {\n            set: (target, key, value) =>\n            {\n                if (key === 'globalMove')\n                {\n                    this.rootBoundary.enableGlobalMoveEvents = value;\n                }\n                target[key as keyof EventSystemFeatures] = value;\n\n                return true;\n            }\n        });\n\n        this._onPointerDown = this._onPointerDown.bind(this);\n        this._onPointerMove = this._onPointerMove.bind(this);\n        this._onPointerUp = this._onPointerUp.bind(this);\n        this._onPointerOverOut = this._onPointerOverOut.bind(this);\n        this.onWheel = this.onWheel.bind(this);\n    }\n\n    /**\n     * Runner init called, view is available at this point.\n     * @ignore\n     */\n    public init(options: EventSystemOptions): void\n    {\n        const { canvas, resolution } = this.renderer;\n\n        this.setTargetElement(canvas as HTMLCanvasElement);\n        this.resolution = resolution;\n        EventSystem._defaultEventMode = options.eventMode ?? 'passive';\n        Object.assign(this.features, options.eventFeatures ?? {});\n        this.rootBoundary.enableGlobalMoveEvents = this.features.globalMove;\n    }\n\n    /**\n     * Handle changing resolution.\n     * @ignore\n     */\n    public resolutionChange(resolution: number): void\n    {\n        this.resolution = resolution;\n    }\n\n    /** Destroys all event listeners and detaches the renderer. */\n    public destroy(): void\n    {\n        this.setTargetElement(null);\n        this.renderer = null;\n        this._currentCursor = null;\n    }\n\n    /**\n     * Sets the current cursor mode, handling any callbacks or CSS style changes.\n     * @param mode - cursor mode, a key from the cursorStyles dictionary\n     */\n    public setCursor(mode: string): void\n    {\n        mode ||= 'default';\n        let applyStyles = true;\n\n        // offscreen canvas does not support setting styles, but cursor modes can be functions,\n        // in order to handle pixi rendered cursors, so we can't bail\n        if (globalThis.OffscreenCanvas && this.domElement instanceof OffscreenCanvas)\n        {\n            applyStyles = false;\n        }\n        // if the mode didn't actually change, bail early\n        if (this._currentCursor === mode)\n        {\n            return;\n        }\n        this._currentCursor = mode;\n        const style = this.cursorStyles[mode];\n\n        // only do things if there is a cursor style for it\n        if (style)\n        {\n            switch (typeof style)\n            {\n                case 'string':\n                    // string styles are handled as cursor CSS\n                    if (applyStyles)\n                    {\n                        this.domElement.style.cursor = style;\n                    }\n                    break;\n                case 'function':\n                    // functions are just called, and passed the cursor mode\n                    style(mode);\n                    break;\n                case 'object':\n                    // if it is an object, assume that it is a dictionary of CSS styles,\n                    // apply it to the interactionDOMElement\n                    if (applyStyles)\n                    {\n                        Object.assign(this.domElement.style, style);\n                    }\n                    break;\n            }\n        }\n        else if (applyStyles && typeof mode === 'string' && !Object.prototype.hasOwnProperty.call(this.cursorStyles, mode))\n        {\n            // if it mode is a string (not a Symbol) and cursorStyles doesn't have any entry\n            // for the mode, then assume that the dev wants it to be CSS for the cursor.\n            this.domElement.style.cursor = mode;\n        }\n    }\n\n    /**\n     * The global pointer event.\n     * Useful for getting the pointer position without listening to events.\n     * @since 7.2.0\n     */\n    public get pointer(): Readonly<FederatedPointerEvent>\n    {\n        return this._rootPointerEvent;\n    }\n\n    /**\n     * Event handler for pointer down events on {@link EventSystem#domElement this.domElement}.\n     * @param nativeEvent - The native mouse/pointer/touch event.\n     */\n    private _onPointerDown(nativeEvent: MouseEvent | PointerEvent | TouchEvent): void\n    {\n        if (!this.features.click) return;\n        this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n\n        const events = this._normalizeToPointerData(nativeEvent);\n\n        /*\n         * No need to prevent default on natural pointer events, as there are no side effects\n         * Normalized events, however, may have the double mousedown/touchstart issue on the native android browser,\n         * so still need to be prevented.\n         */\n\n        // Guaranteed that there will be at least one event in events, and all events must have the same pointer type\n\n        if (this.autoPreventDefault && (events[0] as any).isNormalized)\n        {\n            const cancelable = nativeEvent.cancelable || !('cancelable' in nativeEvent);\n\n            if (cancelable)\n            {\n                nativeEvent.preventDefault();\n            }\n        }\n\n        for (let i = 0, j = events.length; i < j; i++)\n        {\n            const nativeEvent = events[i];\n            const federatedEvent = this._bootstrapEvent(this._rootPointerEvent, nativeEvent);\n\n            this.rootBoundary.mapEvent(federatedEvent);\n        }\n\n        this.setCursor(this.rootBoundary.cursor);\n    }\n\n    /**\n     * Event handler for pointer move events on on {@link EventSystem#domElement this.domElement}.\n     * @param nativeEvent - The native mouse/pointer/touch events.\n     */\n    private _onPointerMove(nativeEvent: MouseEvent | PointerEvent | TouchEvent): void\n    {\n        if (!this.features.move) return;\n        this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n\n        EventsTicker.pointerMoved();\n\n        const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n\n        for (let i = 0, j = normalizedEvents.length; i < j; i++)\n        {\n            const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n\n            this.rootBoundary.mapEvent(event);\n        }\n\n        this.setCursor(this.rootBoundary.cursor);\n    }\n\n    /**\n     * Event handler for pointer up events on {@link EventSystem#domElement this.domElement}.\n     * @param nativeEvent - The native mouse/pointer/touch event.\n     */\n    private _onPointerUp(nativeEvent: MouseEvent | PointerEvent | TouchEvent): void\n    {\n        if (!this.features.click) return;\n        this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n\n        let target = nativeEvent.target;\n\n        // if in shadow DOM use composedPath to access target\n        if (nativeEvent.composedPath && nativeEvent.composedPath().length > 0)\n        {\n            target = nativeEvent.composedPath()[0];\n        }\n\n        const outside = target !== this.domElement ? 'outside' : '';\n        const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n\n        for (let i = 0, j = normalizedEvents.length; i < j; i++)\n        {\n            const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n\n            event.type += outside;\n\n            this.rootBoundary.mapEvent(event);\n        }\n\n        this.setCursor(this.rootBoundary.cursor);\n    }\n\n    /**\n     * Event handler for pointer over & out events on {@link EventSystem#domElement this.domElement}.\n     * @param nativeEvent - The native mouse/pointer/touch event.\n     */\n    private _onPointerOverOut(nativeEvent: MouseEvent | PointerEvent | TouchEvent): void\n    {\n        if (!this.features.click) return;\n        this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n\n        const normalizedEvents = this._normalizeToPointerData(nativeEvent);\n\n        for (let i = 0, j = normalizedEvents.length; i < j; i++)\n        {\n            const event = this._bootstrapEvent(this._rootPointerEvent, normalizedEvents[i]);\n\n            this.rootBoundary.mapEvent(event);\n        }\n\n        this.setCursor(this.rootBoundary.cursor);\n    }\n\n    /**\n     * Passive handler for `wheel` events on {@link EventSystem.domElement this.domElement}.\n     * @param nativeEvent - The native wheel event.\n     */\n    protected onWheel(nativeEvent: WheelEvent): void\n    {\n        if (!this.features.wheel) return;\n        const wheelEvent = this.normalizeWheelEvent(nativeEvent);\n\n        this.rootBoundary.rootTarget = this.renderer.lastObjectRendered;\n        this.rootBoundary.mapEvent(wheelEvent);\n    }\n\n    /**\n     * Sets the {@link EventSystem#domElement domElement} and binds event listeners.\n     *\n     * To deregister the current DOM element without setting a new one, pass {@code null}.\n     * @param element - The new DOM element.\n     */\n    public setTargetElement(element: HTMLElement): void\n    {\n        this._removeEvents();\n        this.domElement = element;\n        EventsTicker.domElement = element;\n        this._addEvents();\n    }\n\n    /** Register event listeners on {@link Renderer#domElement this.domElement}. */\n    private _addEvents(): void\n    {\n        if (this._eventsAdded || !this.domElement)\n        {\n            return;\n        }\n\n        EventsTicker.addTickerListener();\n\n        const style = this.domElement.style as CrossCSSStyleDeclaration;\n\n        if (style)\n        {\n            if ((globalThis.navigator as any).msPointerEnabled)\n            {\n                style.msContentZooming = 'none';\n                style.msTouchAction = 'none';\n            }\n            else if (this.supportsPointerEvents)\n            {\n                style.touchAction = 'none';\n            }\n        }\n\n        /*\n         * These events are added first, so that if pointer events are normalized, they are fired\n         * in the same order as non-normalized events. ie. pointer event 1st, mouse / touch 2nd\n         */\n        if (this.supportsPointerEvents)\n        {\n            globalThis.document.addEventListener('pointermove', this._onPointerMove, true);\n            this.domElement.addEventListener('pointerdown', this._onPointerDown, true);\n            // pointerout is fired in addition to pointerup (for touch events) and pointercancel\n            // we already handle those, so for the purposes of what we do in onPointerOut, we only\n            // care about the pointerleave event\n            this.domElement.addEventListener('pointerleave', this._onPointerOverOut, true);\n            this.domElement.addEventListener('pointerover', this._onPointerOverOut, true);\n            // globalThis.addEventListener('pointercancel', this.onPointerCancel, true);\n            globalThis.addEventListener('pointerup', this._onPointerUp, true);\n        }\n        else\n        {\n            globalThis.document.addEventListener('mousemove', this._onPointerMove, true);\n            this.domElement.addEventListener('mousedown', this._onPointerDown, true);\n            this.domElement.addEventListener('mouseout', this._onPointerOverOut, true);\n            this.domElement.addEventListener('mouseover', this._onPointerOverOut, true);\n            globalThis.addEventListener('mouseup', this._onPointerUp, true);\n\n            if (this.supportsTouchEvents)\n            {\n                this.domElement.addEventListener('touchstart', this._onPointerDown, true);\n                // this.domElement.addEventListener('touchcancel', this.onPointerCancel, true);\n                this.domElement.addEventListener('touchend', this._onPointerUp, true);\n                this.domElement.addEventListener('touchmove', this._onPointerMove, true);\n            }\n        }\n\n        this.domElement.addEventListener('wheel', this.onWheel, {\n            passive: true,\n            capture: true,\n        });\n\n        this._eventsAdded = true;\n    }\n\n    /** Unregister event listeners on {@link EventSystem#domElement this.domElement}. */\n    private _removeEvents(): void\n    {\n        if (!this._eventsAdded || !this.domElement)\n        {\n            return;\n        }\n\n        EventsTicker.removeTickerListener();\n\n        const style = this.domElement.style as CrossCSSStyleDeclaration;\n\n        // offscreen canvas does not have style, so check first\n        if (style)\n        {\n            if ((globalThis.navigator as any).msPointerEnabled)\n            {\n                style.msContentZooming = '';\n                style.msTouchAction = '';\n            }\n            else if (this.supportsPointerEvents)\n            {\n                style.touchAction = '';\n            }\n        }\n\n        if (this.supportsPointerEvents)\n        {\n            globalThis.document.removeEventListener('pointermove', this._onPointerMove, true);\n            this.domElement.removeEventListener('pointerdown', this._onPointerDown, true);\n            this.domElement.removeEventListener('pointerleave', this._onPointerOverOut, true);\n            this.domElement.removeEventListener('pointerover', this._onPointerOverOut, true);\n            // globalThis.removeEventListener('pointercancel', this.onPointerCancel, true);\n            globalThis.removeEventListener('pointerup', this._onPointerUp, true);\n        }\n        else\n        {\n            globalThis.document.removeEventListener('mousemove', this._onPointerMove, true);\n            this.domElement.removeEventListener('mousedown', this._onPointerDown, true);\n            this.domElement.removeEventListener('mouseout', this._onPointerOverOut, true);\n            this.domElement.removeEventListener('mouseover', this._onPointerOverOut, true);\n            globalThis.removeEventListener('mouseup', this._onPointerUp, true);\n\n            if (this.supportsTouchEvents)\n            {\n                this.domElement.removeEventListener('touchstart', this._onPointerDown, true);\n                // this.domElement.removeEventListener('touchcancel', this.onPointerCancel, true);\n                this.domElement.removeEventListener('touchend', this._onPointerUp, true);\n                this.domElement.removeEventListener('touchmove', this._onPointerMove, true);\n            }\n        }\n\n        this.domElement.removeEventListener('wheel', this.onWheel, true);\n\n        this.domElement = null;\n        this._eventsAdded = false;\n    }\n\n    /**\n     * Maps x and y coords from a DOM object and maps them correctly to the PixiJS view. The\n     * resulting value is stored in the point. This takes into account the fact that the DOM\n     * element could be scaled and positioned anywhere on the screen.\n     * @param  {PointData} point - the point that the result will be stored in\n     * @param  {number} x - the x coord of the position to map\n     * @param  {number} y - the y coord of the position to map\n     */\n    public mapPositionToPoint(point: PointData, x: number, y: number): void\n    {\n        const rect = this.domElement.isConnected\n            ? this.domElement.getBoundingClientRect()\n            : {\n                x: 0,\n                y: 0,\n                width: (this.domElement as any).width,\n                height: (this.domElement as any).height,\n                left: 0,\n                top: 0\n            };\n\n        const resolutionMultiplier = 1.0 / this.resolution;\n\n        point.x = ((x - rect.left) * ((this.domElement as any).width / rect.width)) * resolutionMultiplier;\n        point.y = ((y - rect.top) * ((this.domElement as any).height / rect.height)) * resolutionMultiplier;\n    }\n\n    /**\n     * Ensures that the original event object contains all data that a regular pointer event would have\n     * @param event - The original event data from a touch or mouse event\n     * @returns An array containing a single normalized pointer event, in the case of a pointer\n     *  or mouse event, or a multiple normalized pointer events if there are multiple changed touches\n     */\n    private _normalizeToPointerData(event: TouchEvent | MouseEvent | PointerEvent): PointerEvent[]\n    {\n        const normalizedEvents = [];\n\n        if (this.supportsTouchEvents && event instanceof TouchEvent)\n        {\n            for (let i = 0, li = event.changedTouches.length; i < li; i++)\n            {\n                const touch = event.changedTouches[i] as PixiTouch;\n\n                if (typeof touch.button === 'undefined') touch.button = 0;\n                if (typeof touch.buttons === 'undefined') touch.buttons = 1;\n                if (typeof touch.isPrimary === 'undefined')\n                {\n                    touch.isPrimary = event.touches.length === 1 && event.type === 'touchstart';\n                }\n                if (typeof touch.width === 'undefined') touch.width = touch.radiusX || 1;\n                if (typeof touch.height === 'undefined') touch.height = touch.radiusY || 1;\n                if (typeof touch.tiltX === 'undefined') touch.tiltX = 0;\n                if (typeof touch.tiltY === 'undefined') touch.tiltY = 0;\n                if (typeof touch.pointerType === 'undefined') touch.pointerType = 'touch';\n                if (typeof touch.pointerId === 'undefined') touch.pointerId = touch.identifier || 0;\n                if (typeof touch.pressure === 'undefined') touch.pressure = touch.force || 0.5;\n                if (typeof touch.twist === 'undefined') touch.twist = 0;\n                if (typeof touch.tangentialPressure === 'undefined') touch.tangentialPressure = 0;\n                // TODO: Remove these, as layerX/Y is not a standard, is deprecated, has uneven\n                // support, and the fill ins are not quite the same\n                // offsetX/Y might be okay, but is not the same as clientX/Y when the canvas's top\n                // left is not 0,0 on the page\n                if (typeof touch.layerX === 'undefined') touch.layerX = touch.offsetX = touch.clientX;\n                if (typeof touch.layerY === 'undefined') touch.layerY = touch.offsetY = touch.clientY;\n\n                // mark the touch as normalized, just so that we know we did it\n                touch.isNormalized = true;\n                touch.type = event.type;\n\n                normalizedEvents.push(touch);\n            }\n        }\n        // apparently PointerEvent subclasses MouseEvent, so yay\n        else if (!globalThis.MouseEvent\n            || (event instanceof MouseEvent && (!this.supportsPointerEvents || !(event instanceof globalThis.PointerEvent))))\n        {\n            const tempEvent = event as PixiPointerEvent;\n\n            if (typeof tempEvent.isPrimary === 'undefined') tempEvent.isPrimary = true;\n            if (typeof tempEvent.width === 'undefined') tempEvent.width = 1;\n            if (typeof tempEvent.height === 'undefined') tempEvent.height = 1;\n            if (typeof tempEvent.tiltX === 'undefined') tempEvent.tiltX = 0;\n            if (typeof tempEvent.tiltY === 'undefined') tempEvent.tiltY = 0;\n            if (typeof tempEvent.pointerType === 'undefined') tempEvent.pointerType = 'mouse';\n            if (typeof tempEvent.pointerId === 'undefined') tempEvent.pointerId = MOUSE_POINTER_ID;\n            if (typeof tempEvent.pressure === 'undefined') tempEvent.pressure = 0.5;\n            if (typeof tempEvent.twist === 'undefined') tempEvent.twist = 0;\n            if (typeof tempEvent.tangentialPressure === 'undefined') tempEvent.tangentialPressure = 0;\n\n            // mark the mouse event as normalized, just so that we know we did it\n            tempEvent.isNormalized = true;\n\n            normalizedEvents.push(tempEvent);\n        }\n        else\n        {\n            normalizedEvents.push(event);\n        }\n\n        return normalizedEvents as PointerEvent[];\n    }\n\n    /**\n     * Normalizes the native {@link https://w3c.github.io/uievents/#interface-wheelevent WheelEvent}.\n     *\n     * The returned {@link FederatedWheelEvent} is a shared instance. It will not persist across\n     * multiple native wheel events.\n     * @param nativeEvent - The native wheel event that occurred on the canvas.\n     * @returns A federated wheel event.\n     */\n    protected normalizeWheelEvent(nativeEvent: WheelEvent): FederatedWheelEvent\n    {\n        const event = this._rootWheelEvent;\n\n        this._transferMouseData(event, nativeEvent);\n\n        // When WheelEvent is triggered by scrolling with mouse wheel, reading WheelEvent.deltaMode\n        // before deltaX/deltaY/deltaZ on Firefox will result in WheelEvent.DOM_DELTA_LINE (1),\n        // while reading WheelEvent.deltaMode after deltaX/deltaY/deltaZ on Firefox or reading\n        // in any order on other browsers will result in WheelEvent.DOM_DELTA_PIXEL (0).\n        // Therefore, we need to read WheelEvent.deltaMode after deltaX/deltaY/deltaZ in order to\n        // make its behavior more consistent across browsers.\n        // @see https://github.com/pixijs/pixijs/issues/8970\n        event.deltaX = nativeEvent.deltaX;\n        event.deltaY = nativeEvent.deltaY;\n        event.deltaZ = nativeEvent.deltaZ;\n        event.deltaMode = nativeEvent.deltaMode;\n\n        this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n        event.global.copyFrom(event.screen);\n        event.offset.copyFrom(event.screen);\n\n        event.nativeEvent = nativeEvent;\n        event.type = nativeEvent.type;\n\n        return event;\n    }\n\n    /**\n     * Normalizes the `nativeEvent` into a federateed {@link FederatedPointerEvent}.\n     * @param event\n     * @param nativeEvent\n     */\n    private _bootstrapEvent(event: FederatedPointerEvent, nativeEvent: PointerEvent): FederatedPointerEvent\n    {\n        event.originalEvent = null;\n        event.nativeEvent = nativeEvent;\n\n        event.pointerId = nativeEvent.pointerId;\n        event.width = nativeEvent.width;\n        event.height = nativeEvent.height;\n        event.isPrimary = nativeEvent.isPrimary;\n        event.pointerType = nativeEvent.pointerType;\n        event.pressure = nativeEvent.pressure;\n        event.tangentialPressure = nativeEvent.tangentialPressure;\n        event.tiltX = nativeEvent.tiltX;\n        event.tiltY = nativeEvent.tiltY;\n        event.twist = nativeEvent.twist;\n        this._transferMouseData(event, nativeEvent);\n\n        this.mapPositionToPoint(event.screen, nativeEvent.clientX, nativeEvent.clientY);\n        event.global.copyFrom(event.screen);// global = screen for top-level\n        event.offset.copyFrom(event.screen);// EventBoundary recalculates using its rootTarget\n\n        event.isTrusted = nativeEvent.isTrusted;\n        if (event.type === 'pointerleave')\n        {\n            event.type = 'pointerout';\n        }\n        if (event.type.startsWith('mouse'))\n        {\n            event.type = event.type.replace('mouse', 'pointer');\n        }\n        if (event.type.startsWith('touch'))\n        {\n            event.type = TOUCH_TO_POINTER[event.type] || event.type;\n        }\n\n        return event;\n    }\n\n    /**\n     * Transfers base & mouse event data from the {@code nativeEvent} to the federated event.\n     * @param event\n     * @param nativeEvent\n     */\n    private _transferMouseData(event: FederatedMouseEvent, nativeEvent: MouseEvent): void\n    {\n        event.isTrusted = nativeEvent.isTrusted;\n        event.srcElement = nativeEvent.srcElement;\n        event.timeStamp = performance.now();\n        event.type = nativeEvent.type;\n\n        event.altKey = nativeEvent.altKey;\n        event.button = nativeEvent.button;\n        event.buttons = nativeEvent.buttons;\n        event.client.x = nativeEvent.clientX;\n        event.client.y = nativeEvent.clientY;\n        event.ctrlKey = nativeEvent.ctrlKey;\n        event.metaKey = nativeEvent.metaKey;\n        event.movement.x = nativeEvent.movementX;\n        event.movement.y = nativeEvent.movementY;\n        event.page.x = nativeEvent.pageX;\n        event.page.y = nativeEvent.pageY;\n        event.relatedTarget = null;\n        event.shiftKey = nativeEvent.shiftKey;\n    }\n}\n\ninterface CrossCSSStyleDeclaration extends CSSStyleDeclaration\n{\n    msContentZooming: string;\n    msTouchAction: string;\n}\n\ninterface PixiPointerEvent extends PointerEvent\n{\n    isPrimary: boolean;\n    width: number;\n    height: number;\n    tiltX: number;\n    tiltY: number;\n    pointerType: string;\n    pointerId: number;\n    pressure: number;\n    twist: number;\n    tangentialPressure: number;\n    isNormalized: boolean;\n    type: string;\n}\n"],"names":["nativeEvent"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3894, "column": 0}, "map": {"version":3,"file":"FederatedEventTarget.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/FederatedEventTarget.ts"],"sourcesContent":["import { EventSystem } from './EventSystem';\nimport { FederatedEvent } from './FederatedEvent';\n\nimport type EventEmitter from 'eventemitter3';\nimport type { Container } from '../scene/container/Container';\nimport type { AllFederatedEventMap } from './FederatedEventMap';\nimport type { FederatedPointerEvent } from './FederatedPointerEvent';\nimport type { FederatedWheelEvent } from './FederatedWheelEvent';\n\n/**\n * The type of cursor to use when the mouse pointer is hovering over.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/cursor\n *\n * Can be any valid CSS cursor value:\n * `auto`, `default`, `none`, `context-menu`, `help`, `pointer`, `progress`,\n * `wait`, `cell`, `crosshair`, `text`, `verticaltext`, `alias`, `copy`, `move`,\n * `nodrop`, `notallowed`, `eresize`, `nresize`, `neresize`, `nwresize`, `sresize`,\n *  `seresize`, `swresize`, `wresize`, `nsresize`, `ewresize`, `neswresize`, `colresize`,\n *  `nwseresize`, `rowresize`, `allscroll`, `zoomin`, `zoomout`, `grab`, `grabbing`\n * @memberof events\n */\nexport type Cursor = 'auto'\n| 'default'\n| 'none'\n| 'context-menu'\n| 'help'\n| 'pointer'\n| 'progress'\n| 'wait'\n| 'cell'\n| 'crosshair'\n| 'text'\n| 'vertical-text'\n| 'alias'\n| 'copy'\n| 'move'\n| 'no-drop'\n| 'not-allowed'\n| 'e-resize'\n| 'n-resize'\n| 'ne-resize'\n| 'nw-resize'\n| 's-resize'\n| 'se-resize'\n| 'sw-resize'\n| 'w-resize'\n| 'ns-resize'\n| 'ew-resize'\n| 'nesw-resize'\n| 'col-resize'\n| 'nwse-resize'\n| 'row-resize'\n| 'all-scroll'\n| 'zoom-in'\n| 'zoom-out'\n| 'grab'\n| 'grabbing';\n\n/**\n * The hit area specifies the area for which pointer events should be captured by this event target.\n * @memberof events\n */\nexport interface IHitArea\n{\n    /**\n     * Checks if the x and y coordinates given are contained within this hit area.\n     * @returns Whether the x and y coordinates are contained within this hit area.\n     */\n    contains(x: number, y: number): boolean;\n}\n\n/**\n * Function type for handlers, e.g., onclick\n * @memberof events\n */\nexport type FederatedEventHandler<T = FederatedPointerEvent> = (event: T) => void;\n\n/**\n * The type of interaction a Container can be.\n * This is the {@link scene.Container#eventMode|Container.eventMode} property of any {@link scene.Container}.\n *\n * Can be one of the following:\n * - `'none'`: Ignores all interaction events, even on its children.\n * - `'passive'`: **(default)** Does not emit events and ignores all hit testing on itself and non-interactive children.\n * Interactive children will still emit events.\n * - `'auto'`: Does not emit events but is hit tested if parent is interactive. Same as `interactive = false` in v7\n * - `'static'`: Emit events and is hit tested. Same as `interaction = true` in v7\n * - `'dynamic'`: Emits events and is hit tested but will also receive mock interaction events fired from a ticker to\n * allow for interaction when the mouse isn't moving\n *\n * `none` and `passive` are useful for optimizing interaction events on objects as it reduces the number of hit tests\n * PixiJS has to do. `auto` is useful for when you want to recreate how the DOM handles interaction events with\n * `pointer-events: auto`.\n * @since 7.2.0\n * @memberof events\n */\nexport type EventMode = 'none' | 'passive' | 'auto' | 'static' | 'dynamic';\n\n/**\n * The properties available for any interactive object.\n * @memberof events\n */\nexport interface FederatedOptions\n{\n    /** The cursor preferred when the mouse pointer is hovering over. */\n    cursor?: Cursor | string;\n    /** The mode of interaction for this object */\n    eventMode?: EventMode;\n    /** Whether this event target should fire UI events. */\n    interactive?: boolean\n    /** Whether this event target has any children that need UI events. This can be used optimize event propagation. */\n    interactiveChildren?: boolean;\n    /** The hit-area specifies the area for which pointer events should be captured by this event target. */\n    hitArea?: IHitArea | null;\n    /** Handler for 'click' event */\n    onclick?: FederatedEventHandler | null;\n    /** Handler for 'mousedown' event */\n    onmousedown?: FederatedEventHandler | null;\n    /** Handler for 'mouseenter' event */\n    onmouseenter?: FederatedEventHandler | null;\n    /** Handler for 'mouseleave' event */\n    onmouseleave?: FederatedEventHandler | null;\n    /** Handler for 'mousemove' event */\n    onmousemove?: FederatedEventHandler | null;\n    /** Handler for 'globalmousemove' event */\n    onglobalmousemove?: FederatedEventHandler | null;\n    /** Handler for 'mouseout' event */\n    onmouseout?: FederatedEventHandler | null;\n    /** Handler for 'mouseover' event */\n    onmouseover?: FederatedEventHandler | null;\n    /** Handler for 'mouseup' event */\n    onmouseup?: FederatedEventHandler | null;\n    /** Handler for 'mouseupoutside' event */\n    onmouseupoutside?: FederatedEventHandler | null;\n    /** Handler for 'pointercancel' event */\n    onpointercancel?: FederatedEventHandler | null;\n    /** Handler for 'pointerdown' event */\n    onpointerdown?: FederatedEventHandler | null;\n    /** Handler for 'pointerenter' event */\n    onpointerenter?: FederatedEventHandler | null;\n    /** Handler for 'pointerleave' event */\n    onpointerleave?: FederatedEventHandler | null;\n    /** Handler for 'pointermove' event */\n    onpointermove?: FederatedEventHandler | null;\n    /** Handler for 'globalpointermove' event */\n    onglobalpointermove?: FederatedEventHandler | null;\n    /** Handler for 'pointerout' event */\n    onpointerout?: FederatedEventHandler | null;\n    /** Handler for 'pointerover' event */\n    onpointerover?: FederatedEventHandler | null;\n    /** Handler for 'pointertap' event */\n    onpointertap?: FederatedEventHandler | null;\n    /** Handler for 'pointerup' event */\n    onpointerup?: FederatedEventHandler | null;\n    /** Handler for 'pointerupoutside' event */\n    onpointerupoutside?: FederatedEventHandler | null;\n    /** Handler for 'rightclick' event */\n    onrightclick?: FederatedEventHandler | null;\n    /** Handler for 'rightdown' event */\n    onrightdown?: FederatedEventHandler | null;\n    /** Handler for 'rightup' event */\n    onrightup?: FederatedEventHandler | null;\n    /** Handler for 'rightupoutside' event */\n    onrightupoutside?: FederatedEventHandler | null;\n    /** Handler for 'tap' event */\n    ontap?: FederatedEventHandler | null;\n    /** Handler for 'touchcancel' event */\n    ontouchcancel?: FederatedEventHandler | null;\n    /** Handler for 'touchend' event */\n    ontouchend?: FederatedEventHandler | null;\n    /** Handler for 'touchendoutside' event */\n    ontouchendoutside?: FederatedEventHandler | null;\n    /** Handler for 'touchmove' event */\n    ontouchmove?: FederatedEventHandler | null;\n    /** Handler for 'globaltouchmove' event */\n    onglobaltouchmove?: FederatedEventHandler | null;\n    /** Handler for 'touchstart' event */\n    ontouchstart?: FederatedEventHandler | null;\n    /** Handler for 'wheel' event */\n    onwheel?: FederatedEventHandler<FederatedWheelEvent> | null;\n}\n\ntype AddListenerOptions = boolean | AddEventListenerOptions;\ntype RemoveListenerOptions = boolean | EventListenerOptions;\n\nexport interface IFederatedContainer extends FederatedOptions\n{\n    /** The parent of this event target. */\n    readonly parent?: Container;\n\n    /** The children of this event target. */\n    readonly children?: ReadonlyArray<Container>;\n\n    _internalEventMode: EventMode;\n\n    /** Returns true if the Container has interactive 'static' or 'dynamic' */\n    isInteractive: () => boolean;\n    addEventListener<K extends keyof AllFederatedEventMap>(\n        type: K,\n        listener: (e: AllFederatedEventMap[K]) => any,\n        options?: AddListenerOptions\n    ): void;\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: AddListenerOptions\n    ): void;\n    removeEventListener<K extends keyof AllFederatedEventMap>(\n        type: K,\n        listener: (e: AllFederatedEventMap[K]) => any,\n        options?: RemoveListenerOptions\n    ): void;\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: RemoveListenerOptions\n    ): void;\n    dispatchEvent(e: FederatedEvent): boolean;\n}\n\nexport const FederatedContainer: IFederatedContainer = {\n\n    /**\n     * Property-based event handler for the `click` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onclick = (event) => {\n     *  //some function here that happens on click\n     * }\n     */\n    onclick: null,\n\n    /**\n     * Property-based event handler for the `mousedown` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmousedown = (event) => {\n     *  //some function here that happens on mousedown\n     * }\n     */\n    onmousedown: null,\n\n    /**\n     * Property-based event handler for the `mouseenter` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmouseenter = (event) => {\n     *  //some function here that happens on mouseenter\n     * }\n     */\n    onmouseenter: null,\n\n    /**\n     * Property-based event handler for the `mouseleave` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmouseleave = (event) => {\n     *  //some function here that happens on mouseleave\n     * }\n     */\n    onmouseleave: null,\n\n    /**\n     * Property-based event handler for the `mousemove` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmousemove = (event) => {\n     *  //some function here that happens on mousemove\n     * }\n     */\n    onmousemove: null,\n\n    /**\n     * Property-based event handler for the `globalmousemove` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onglobalmousemove = (event) => {\n     *  //some function here that happens on globalmousemove\n     * }\n     */\n    onglobalmousemove: null,\n\n    /**\n     * Property-based event handler for the `mouseout` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmouseout = (event) => {\n     *  //some function here that happens on mouseout\n     * }\n     */\n    onmouseout: null,\n\n    /**\n     * Property-based event handler for the `mouseover` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmouseover = (event) => {\n     *  //some function here that happens on mouseover\n     * }\n     */\n    onmouseover:  null,\n\n    /**\n     * Property-based event handler for the `mouseup` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmouseup = (event) => {\n     *  //some function here that happens on mouseup\n     * }\n     */\n    onmouseup:  null,\n\n    /**\n     * Property-based event handler for the `mouseupoutside` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onmouseupoutside = (event) => {\n     *  //some function here that happens on mouseupoutside\n     * }\n     */\n    onmouseupoutside: null,\n\n    /**\n     * Property-based event handler for the `pointercancel` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointercancel = (event) => {\n     *  //some function here that happens on pointercancel\n     * }\n     */\n    onpointercancel: null,\n\n    /**\n     * Property-based event handler for the `pointerdown` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerdown = (event) => {\n     *  //some function here that happens on pointerdown\n     * }\n     */\n    onpointerdown:  null,\n\n    /**\n     * Property-based event handler for the `pointerenter` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerenter = (event) => {\n     *  //some function here that happens on pointerenter\n     * }\n     */\n    onpointerenter: null,\n\n    /**\n     * Property-based event handler for the `pointerleave` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerleave = (event) => {\n     *  //some function here that happens on pointerleave\n     * }\n     */\n    onpointerleave:  null,\n\n    /**\n     * Property-based event handler for the `pointermove` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointermove = (event) => {\n     *  //some function here that happens on pointermove\n     * }\n     */\n    onpointermove:  null,\n\n    /**\n     * Property-based event handler for the `globalpointermove` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onglobalpointermove = (event) => {\n     *  //some function here that happens on globalpointermove\n     * }\n     */\n    onglobalpointermove:  null,\n\n    /**\n     * Property-based event handler for the `pointerout` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerout = (event) => {\n     *  //some function here that happens on pointerout\n     * }\n     */\n    onpointerout:  null,\n\n    /**\n     * Property-based event handler for the `pointerover` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerover = (event) => {\n     *  //some function here that happens on pointerover\n     * }\n     */\n    onpointerover:  null,\n\n    /**\n     * Property-based event handler for the `pointertap` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointertap = (event) => {\n     *  //some function here that happens on pointertap\n     * }\n     */\n    onpointertap:  null,\n\n    /**\n     * Property-based event handler for the `pointerup` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerup = (event) => {\n     *  //some function here that happens on pointerup\n     * }\n     */\n    onpointerup:  null,\n\n    /**\n     * Property-based event handler for the `pointerupoutside` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onpointerupoutside = (event) => {\n     *  //some function here that happens on pointerupoutside\n     * }\n     */\n    onpointerupoutside:  null,\n\n    /**\n     * Property-based event handler for the `rightclick` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onrightclick = (event) => {\n     *  //some function here that happens on rightclick\n     * }\n     */\n    onrightclick:  null,\n\n    /**\n     * Property-based event handler for the `rightdown` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onrightdown = (event) => {\n     *  //some function here that happens on rightdown\n     * }\n     */\n    onrightdown:  null,\n\n    /**\n     * Property-based event handler for the `rightup` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onrightup = (event) => {\n     *  //some function here that happens on rightup\n     * }\n     */\n    onrightup:  null,\n\n    /**\n     * Property-based event handler for the `rightupoutside` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onrightupoutside = (event) => {\n     *  //some function here that happens on rightupoutside\n     * }\n     */\n    onrightupoutside:  null,\n\n    /**\n     * Property-based event handler for the `tap` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.ontap = (event) => {\n     *  //some function here that happens on tap\n     * }\n     */\n    ontap:  null,\n\n    /**\n     * Property-based event handler for the `touchcancel` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.ontouchcancel = (event) => {\n     *  //some function here that happens on touchcancel\n     * }\n     */\n    ontouchcancel:  null,\n\n    /**\n     * Property-based event handler for the `touchend` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.ontouchend = (event) => {\n     *  //some function here that happens on touchend\n     * }\n     */\n    ontouchend:  null,\n\n    /**\n     * Property-based event handler for the `touchendoutside` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.ontouchendoutside = (event) => {\n     *  //some function here that happens on touchendoutside\n     * }\n     */\n    ontouchendoutside:  null,\n\n    /**\n     * Property-based event handler for the `touchmove` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.ontouchmove = (event) => {\n     *  //some function here that happens on touchmove\n     * }\n     */\n    ontouchmove:  null,\n\n    /**\n     * Property-based event handler for the `globaltouchmove` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onglobaltouchmove = (event) => {\n     *  //some function here that happens on globaltouchmove\n     * }\n     */\n    onglobaltouchmove:  null,\n\n    /**\n     * Property-based event handler for the `touchstart` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.ontouchstart = (event) => {\n     *  //some function here that happens on touchstart\n     * }\n     */\n    ontouchstart:  null,\n\n    /**\n     * Property-based event handler for the `wheel` event.\n     * @memberof scene.Container#\n     * @default null\n     * @example\n     * this.onwheel = (event) => {\n     *  //some function here that happens on wheel\n     * }\n     */\n    onwheel:  null,\n    /**\n     * Enable interaction events for the Container. Touch, pointer and mouse\n     * @memberof scene.Container#\n     */\n    get interactive()\n    {\n        return this.eventMode === 'dynamic' || this.eventMode === 'static';\n    },\n    set interactive(value: boolean)\n    {\n        this.eventMode = value ? 'static' : 'passive';\n    },\n    /**\n     * @ignore\n     */\n    _internalEventMode: undefined,\n    /**\n     * Enable interaction events for the Container. Touch, pointer and mouse.\n     * There are 5 types of interaction settings:\n     * - `'none'`: Ignores all interaction events, even on its children.\n     * - `'passive'`: **(default)** Does not emit events and ignores all hit testing on itself and non-interactive children.\n     * Interactive children will still emit events.\n     * - `'auto'`: Does not emit events but is hit tested if parent is interactive. Same as `interactive = false` in v7\n     * - `'static'`: Emit events and is hit tested. Same as `interaction = true` in v7\n     * - `'dynamic'`: Emits events and is hit tested but will also receive mock interaction events fired from a ticker to\n     * allow for interaction when the mouse isn't moving\n     * @example\n     * import { Sprite } from 'pixi.js';\n     *\n     * const sprite = new Sprite(texture);\n     * sprite.eventMode = 'static';\n     * sprite.on('tap', (event) => {\n     *     // Handle event\n     * });\n     * @memberof scene.Container#\n     * @since 7.2.0\n     */\n    get eventMode()\n    {\n        return this._internalEventMode ?? EventSystem.defaultEventMode;\n    },\n    set eventMode(value)\n    {\n        this._internalEventMode = value;\n    },\n\n    /**\n     * Determines if the container is interactive or not\n     * @returns {boolean} Whether the container is interactive or not\n     * @memberof scene.Container#\n     * @since 7.2.0\n     * @example\n     * import { Sprite } from 'pixi.js';\n     *\n     * const sprite = new Sprite(texture);\n     * sprite.eventMode = 'static';\n     * sprite.isInteractive(); // true\n     *\n     * sprite.eventMode = 'dynamic';\n     * sprite.isInteractive(); // true\n     *\n     * sprite.eventMode = 'none';\n     * sprite.isInteractive(); // false\n     *\n     * sprite.eventMode = 'passive';\n     * sprite.isInteractive(); // false\n     *\n     * sprite.eventMode = 'auto';\n     * sprite.isInteractive(); // false\n     */\n    isInteractive(): boolean\n    {\n        return this.eventMode === 'static' || this.eventMode === 'dynamic';\n    },\n\n    /**\n     * Determines if the children to the container can be clicked/touched\n     * Setting this to false allows PixiJS to bypass a recursive `hitTest` function\n     * @memberof scene.Container#\n     */\n    interactiveChildren: true,\n\n    /**\n     * Interaction shape. Children will be hit first, then this shape will be checked.\n     * Setting this will cause this shape to be checked in hit tests rather than the container's bounds.\n     * @example\n     * import { Rectangle, Sprite } from 'pixi.js';\n     *\n     * const sprite = new Sprite(texture);\n     * sprite.interactive = true;\n     * sprite.hitArea = new Rectangle(0, 0, 100, 100);\n     * @member {IHitArea}\n     * @memberof scene.Container#\n     */\n    hitArea: null,\n\n    /**\n     * Unlike `on` or `addListener` which are methods from EventEmitter, `addEventListener`\n     * seeks to be compatible with the DOM's `addEventListener` with support for options.\n     * @memberof scene.Container\n     * @param type - The type of event to listen to.\n     * @param listener - The listener callback or object.\n     * @param options - Listener options, used for capture phase.\n     * @example\n     * // Tell the user whether they did a single, double, triple, or nth click.\n     * button.addEventListener('click', {\n     *     handleEvent(e): {\n     *         let prefix;\n     *\n     *         switch (e.detail) {\n     *             case 1: prefix = 'single'; break;\n     *             case 2: prefix = 'double'; break;\n     *             case 3: prefix = 'triple'; break;\n     *             default: prefix = e.detail + 'th'; break;\n     *         }\n     *\n     *         console.log('That was a ' + prefix + 'click');\n     *     }\n     * });\n     *\n     * // But skip the first click!\n     * button.parent.addEventListener('click', function blockClickOnce(e) {\n     *     e.stopImmediatePropagation();\n     *     button.parent.removeEventListener('click', blockClickOnce, true);\n     * }, {\n     *     capture: true,\n     * });\n     */\n    addEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: AddListenerOptions\n    )\n    {\n        const capture = (typeof options === 'boolean' && options)\n        || (typeof options === 'object' && options.capture);\n        const signal = typeof options === 'object' ? options.signal : undefined;\n        const once = typeof options === 'object' ? (options.once === true) : false;\n        const context = typeof listener === 'function' ? undefined : listener;\n\n        type = capture ? `${type}capture` : type;\n        const listenerFn = typeof listener === 'function' ? listener : listener.handleEvent;\n\n        const emitter = (this as unknown as EventEmitter);\n\n        if (signal)\n        {\n            signal.addEventListener('abort', () =>\n            {\n                emitter.off(type, listenerFn, context);\n            });\n        }\n\n        if (once)\n        {\n            emitter.once(type, listenerFn, context);\n        }\n        else\n        {\n            emitter.on(type, listenerFn, context);\n        }\n    },\n\n    /**\n     * Unlike `off` or `removeListener` which are methods from EventEmitter, `removeEventListener`\n     * seeks to be compatible with the DOM's `removeEventListener` with support for options.\n     * @memberof scene.Container\n     * @param type - The type of event the listener is bound to.\n     * @param listener - The listener callback or object.\n     * @param options - The original listener options. This is required to deregister a capture phase listener.\n     */\n    removeEventListener(\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: RemoveListenerOptions\n    )\n    {\n        const capture = (typeof options === 'boolean' && options)\n            || (typeof options === 'object' && options.capture);\n        const context = typeof listener === 'function' ? undefined : listener;\n\n        type = capture ? `${type}capture` : type;\n        listener = typeof listener === 'function' ? listener : listener.handleEvent;\n\n        (this as unknown as EventEmitter).off(type, listener, context);\n    },\n\n    /**\n     * Dispatch the event on this {@link Container} using the event's {@link EventBoundary}.\n     *\n     * The target of the event is set to `this` and the `defaultPrevented` flag is cleared before dispatch.\n     * @memberof scene.Container\n     * @param e - The event to dispatch.\n     * @returns Whether the {@link FederatedEvent.preventDefault preventDefault}() method was not invoked.\n     * @example\n     * // Reuse a click event!\n     * button.dispatchEvent(clickEvent);\n     */\n    dispatchEvent(e: Event): boolean\n    {\n        if (!(e instanceof FederatedEvent))\n        {\n            throw new Error('Container cannot propagate events outside of the Federated Events API');\n        }\n\n        e.defaultPrevented = false;\n        e.path = null;\n        e.target = this as Container;\n        e.manager.dispatchEvent(e);\n\n        return !e.defaultPrevented;\n    }\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4374, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/events/init.ts"],"sourcesContent":["import { extensions } from '../extensions/Extensions';\nimport { Container } from '../scene/container/Container';\nimport { EventSystem } from './EventSystem';\nimport { FederatedContainer } from './FederatedEventTarget';\n\n/* eslint-disable max-len */\n/**\n * PixiJS is primarily a rendering system, but it also includes support for interactivity.\n * Adding support for mouse and touch events to your project is simple and consistent.\n *\n * The new event-based system that replaced InteractionManager from v6 has expanded the definition of what a\n * Container means to be interactive. With this we have introduced `eventMode` which allows you to control\n * how an object responds to interaction events.\n * This is similar to the `interactive` property in v6 but with more options.\n *\n * <details id=\"enabling-interaction\">\n * <summary>Enabling Interaction</summary>\n *\n * Any Container-derived object (Sprite, Container, etc.) can become interactive simply by setting its `eventMode` property to any of\n * the {@link events.EventMode} values. Doing so will cause the object to emit interaction events that can be responded to in order to drive your project's behavior.\n *\n * Check out the [interaction example code](/examples/events/click).\n *\n * Container-derived objects are based on {@link https://www.npmjs.com/package/eventemitter3|EventEmitter3}\n * so you can use `on()`, `once()`, `off()` to listen to events.\n *\n * For example to respond to clicks and taps, bind to an object ike so:\n *\n * ```javascript\n * let sprite = Sprite.from('/some/texture.png');\n *\n * sprite.eventMode = 'static'; // similar to `sprite.interactive = true` in v6\n * sprite.on('pointerdown', (event) => { alert('clicked!'); });\n * ```\n *\n * Check out the **EventTypes** section below for the full list of interaction events supported.\n * </details>\n *\n * <details id=\"event-modes\">\n * <summary>Event Modes</summary>\n *\n * The new event-based system that replaced InteractionManager from v6 has expanded the definition of what a Container\n *  means to be interactive. With this we have introduced `eventMode` which allows you to control how an object responds\n * to interaction events. This is similar to the `interactive` property in v6 but with more options.\n *\n * | event mode | Description |\n * |---|---|\n * | `none` | Ignores all interaction events, similar to CSS's `pointer-events: none`, good optimization for non-interactive children |\n * |  `passive`  | Does not emit events and ignores hit testing on itself but does allow for events and hit testing only its interactive children. If you want to be compatible with v6, set this as your default `eventMode` (see options in Renderer, Application, etc) |\n * |  `auto`  | Does not emit events and but is hit tested if parent is interactive. Same as `interactive = false` in v7 |\n * |  `static`  | Emit events and is hit tested. Same as `interaction = true` in v7, useful for objects like buttons that do not move. |\n * |  `dynamic` | Emits events and is hit tested but will also receive mock interaction events fired from a ticker to allow for interaction when the mouse isn't moving. This is useful for elements that independently moving or animating. |\n * </details>\n *\n * <details id=\"event-types\">\n * <summary>Event Types</summary>\n *\n * Pixi supports the following event types for interactive objects:\n *\n * | Event Type | Fired When |\n * |---|---|\n * | `pointercancel` | Pointer device button is released outside the display object\n * that initially registered a pointerdown. |\n * | `pointerdown` | Pointer device button is pressed on the display object. |\n * | `pointerenter` | Pointer device enters the display object. |\n * | `pointerleave` | Pointer device leaves the display object. |\n * | `pointermove` | Pointer device is moved while over the display object. |\n * | `globalpointermove` | Pointer device is moved, regardless of hit-testing the current object. |\n * | `pointerout` | Pointer device is moved off the display object. |\n * | `pointerover` | Pointer device is moved onto the display object. |\n * | `pointertap` | Pointer device is tapped twice on the display object. |\n * | `pointerup` | Pointer device button is released over the display object. |\n * | `pointerupoutside` | Pointer device button is released outside the display object\n * that initially registered a pointerdown. |\n * | `mousedown ` | Mouse button is pressed on the display object. |\n * | `mouseenter` | Mouse cursor enters the display object. |\n * | `mouseleave` | Mouse cursor leaves the display object. |\n * | `mousemove ` | Mouse cursor is moved while over the display object. |\n * | `globalmousemove` | Mouse is moved, regardless of hit-testing the current object. |\n * | `mouseout ` | Mouse cursor is moved off the display object. |\n * | `mouseover ` | Mouse cursor is moved onto the display object. |\n * | `mouseup ` | Mouse button is released over the display object. |\n * | `mouseupoutside ` | Mouse button is released outside the display object that initially registered a mousedown. |\n * | `click ` | Mouse button is clicked (pressed and released) over the display object. |\n * | `touchcancel ` | Touch point is removed outside of the display object that initially registered a touchstart. |\n * | `touchend ` | Touch point is removed from the display object. |\n * | `touchendoutside ` | Touch point is removed outside of the display object that initially registered a touchstart. |\n * | `touchmove ` | Touch point is moved along the display object. |\n * | `globaltouchmove` | Touch point is moved, regardless of hit-testing the current object. |\n * | `touchstart ` | Touch point is placed on the display object. |\n * | `tap ` | Touch point is tapped twice on the display object. |\n * | `wheel ` | Mouse wheel is spun over the display object. |\n * | `rightclick ` | Right mouse button is clicked (pressed and released) over the display object. |\n * | `rightdown ` | Right mouse button is pressed on the display object. |\n * | `rightup ` | Right mouse button is released over the display object. |\n * | `rightupoutside ` | Right mouse button is released outside the display object that initially registered a rightdown. |\n * </details>\n * @namespace events\n */\n/* eslint-enable max-len */\n\nextensions.add(EventSystem);\nContainer.mixin(FederatedContainer);\n"],"names":[],"mappings":";;;;;;;;;;kKAqGA,aAAA,CAAW,GAAA,gKAAI,cAAW,CAAA,CAAA;yKAC1B,YAAA,CAAU,KAAA,yKAAM,qBAAkB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4392, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/spritesheet/init.ts"],"sourcesContent":["import { extensions } from '../extensions/Extensions';\nimport { spritesheetAsset } from './spritesheetAsset';\n\nextensions.add(spritesheetAsset);\n"],"names":[],"mappings":";;;;;;kKAGA,aAAA,CAAW,GAAA,0KAAI,mBAAgB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4405, "column": 0}, "map": {"version":3,"file":"State.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/state/State.ts"],"sourcesContent":["import type { BLEND_MODES, CULL_MODES } from './const';\n\nconst blendModeIds = {\n    normal: 0,\n    add: 1,\n    multiply: 2,\n    screen: 3,\n    overlay: 4,\n    erase: 5,\n    'normal-npm': 6,\n    'add-npm': 7,\n    'screen-npm': 8,\n    min: 9,\n    max: 10,\n};\nconst BLEND = 0;\nconst OFFSET = 1;\nconst CULLING = 2;\nconst DEPTH_TEST = 3;\nconst WINDING = 4;\nconst DEPTH_MASK = 5;\n\n/**\n * This is a WebGL state, and is is passed to {@link StateSystem}.\n *\n * Each mesh rendered may require WebGL to be in a different state.\n * For example you may want different blend mode or to enable polygon offsets\n * @memberof rendering\n */\nexport class State\n{\n    /**\n     * The data is a unique number based on the states settings.\n     * This lets us quickly compare states with a single number rather than looking\n     * at all the individual settings.\n     */\n    public data: number;\n    public _blendModeId: number;\n    private _blendMode: BLEND_MODES;\n    private _polygonOffset: number;\n\n    constructor()\n    {\n        this.data = 0;\n\n        this.blendMode = 'normal';\n        this.polygonOffset = 0;\n\n        this.blend = true;\n        this.depthMask = true;\n    }\n\n    /**\n     * Activates blending of the computed fragment color values.\n     * @default true\n     */\n    get blend(): boolean\n    {\n        return !!(this.data & (1 << BLEND));\n    }\n\n    set blend(value: boolean)\n    {\n        if (!!(this.data & (1 << BLEND)) !== value)\n        {\n            this.data ^= (1 << BLEND);\n        }\n    }\n\n    /**\n     * Activates adding an offset to depth values of polygon's fragments\n     * @default false\n     */\n    get offsets(): boolean\n    {\n        return !!(this.data & (1 << OFFSET));\n    }\n\n    set offsets(value: boolean)\n    {\n        if (!!(this.data & (1 << OFFSET)) !== value)\n        {\n            this.data ^= (1 << OFFSET);\n        }\n    }\n\n    /** The culling settings for this state none - No culling back - Back face culling front - Front face culling */\n    set cullMode(value: CULL_MODES)\n    {\n        if (value === 'none')\n        {\n            this.culling = false;\n\n            return;\n        }\n\n        this.culling = true;\n        this.clockwiseFrontFace = value === 'front';\n    }\n\n    get cullMode(): CULL_MODES\n    {\n        if (!this.culling)\n        {\n            return 'none';\n        }\n\n        return this.clockwiseFrontFace ? 'front' : 'back';\n    }\n\n    /**\n     * Activates culling of polygons.\n     * @default false\n     */\n    get culling(): boolean\n    {\n        return !!(this.data & (1 << CULLING));\n    }\n\n    set culling(value: boolean)\n    {\n        if (!!(this.data & (1 << CULLING)) !== value)\n        {\n            this.data ^= (1 << CULLING);\n        }\n    }\n\n    /**\n     * Activates depth comparisons and updates to the depth buffer.\n     * @default false\n     */\n    get depthTest(): boolean\n    {\n        return !!(this.data & (1 << DEPTH_TEST));\n    }\n\n    set depthTest(value: boolean)\n    {\n        if (!!(this.data & (1 << DEPTH_TEST)) !== value)\n        {\n            this.data ^= (1 << DEPTH_TEST);\n        }\n    }\n\n    /**\n     * Enables or disables writing to the depth buffer.\n     * @default true\n     */\n    get depthMask(): boolean\n    {\n        return !!(this.data & (1 << DEPTH_MASK));\n    }\n\n    set depthMask(value: boolean)\n    {\n        if (!!(this.data & (1 << DEPTH_MASK)) !== value)\n        {\n            this.data ^= (1 << DEPTH_MASK);\n        }\n    }\n\n    /**\n     * Specifies whether or not front or back-facing polygons can be culled.\n     * @default false\n     */\n    get clockwiseFrontFace(): boolean\n    {\n        return !!(this.data & (1 << WINDING));\n    }\n\n    set clockwiseFrontFace(value: boolean)\n    {\n        if (!!(this.data & (1 << WINDING)) !== value)\n        {\n            this.data ^= (1 << WINDING);\n        }\n    }\n\n    /**\n     * The blend mode to be applied when this state is set. Apply a value of `normal` to reset the blend mode.\n     * Setting this mode to anything other than NO_BLEND will automatically switch blending on.\n     * @default 'normal'\n     */\n    get blendMode(): BLEND_MODES\n    {\n        return this._blendMode;\n    }\n\n    set blendMode(value: BLEND_MODES)\n    {\n        this.blend = (value !== 'none');\n        this._blendMode = value;\n        this._blendModeId = blendModeIds[value as keyof typeof blendModeIds] || 0;\n    }\n\n    /**\n     * The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.\n     * @default 0\n     */\n    get polygonOffset(): number\n    {\n        return this._polygonOffset;\n    }\n\n    set polygonOffset(value: number)\n    {\n        this.offsets = !!value;\n        this._polygonOffset = value;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/core:State `\n            + `blendMode=${this.blendMode} `\n            + `clockwiseFrontFace=${this.clockwiseFrontFace} `\n            + `culling=${this.culling} `\n            + `depthMask=${this.depthMask} `\n            + `polygonOffset=${this.polygonOffset}`\n            + `]`;\n    }\n    // #endif\n\n    /**\n     * A quickly getting an instance of a State that is configured for 2d rendering.\n     * @returns a new State with values set for 2d rendering\n     */\n    public static for2d(): State\n    {\n        const state = new State();\n\n        state.depthTest = false;\n        state.blend = true;\n\n        return state;\n    }\n\n    public static default2d = State.for2d();\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4561, "column": 0}, "map": {"version":3,"file":"colorToUniform.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/gpu/colorToUniform.ts"],"sourcesContent":["export function colorToUniform(rgb: number, alpha: number, out: Float32Array, offset: number)\n{\n    // TODO replace with Color..\n    out[offset++] = ((rgb >> 16) & 0xFF) / 255;\n    out[offset++] = ((rgb >> 8) & 0xFF) / 255;\n    out[offset++] = (rgb & 0xFF) / 255;\n    out[offset++] = alpha;\n}\n\nexport function color32BitToUniform(abgr: number, out: Float32Array, offset: number)\n{\n    const alpha = ((abgr >> 24) & 0xFF) / 255;\n\n    out[offset++] = ((abgr & 0xFF) / 255) * alpha;\n    out[offset++] = (((abgr >> 8) & 0xFF) / 255) * alpha;\n    out[offset++] = (((abgr >> 16) & 0xFF) / 255) * alpha;\n    out[offset++] = alpha;\n}\n"],"names":[],"mappings":";;;;;AAAO,SAAS,cAAe,CAAA,GAAA,EAAa,KAAe,EAAA,GAAA,EAAmB,MAC9E,EAAA;IAEI,GAAA,CAAI,MAAQ,EAAA,CAAA,GAAA,CAAM,GAAO,IAAA,EAAA,GAAM,GAAQ,IAAA,GAAA,CAAA;IACvC,GAAA,CAAI,MAAQ,EAAA,CAAA,GAAA,CAAM,GAAO,IAAA,CAAA,GAAK,GAAQ,IAAA,GAAA,CAAA;IAClC,GAAA,CAAA,MAAA,EAAQ,CAAK,GAAA,CAAA,GAAA,GAAM,GAAQ,IAAA,GAAA,CAAA;IAC/B,GAAA,CAAI,QAAQ,CAAI,GAAA,KAAA,CAAA;AACpB,CAAA;AAEgB,SAAA,mBAAA,CAAoB,IAAc,EAAA,GAAA,EAAmB,MACrE,EAAA;IACU,MAAA,KAAA,GAAA,CAAU,IAAQ,IAAA,EAAA,GAAM,GAAQ,IAAA,GAAA,CAAA;IAEtC,GAAA,CAAI,MAAQ,EAAA,CAAA,GAAA,CAAM,IAAO,GAAA,GAAA,IAAQ,GAAO,GAAA,KAAA,CAAA;IACxC,GAAA,CAAI,MAAQ,EAAA,CAAA,GAAA,CAAO,IAAQ,IAAA,CAAA,GAAK,GAAA,IAAQ,GAAO,GAAA,KAAA,CAAA;IAC/C,GAAA,CAAI,MAAQ,EAAA,CAAA,GAAA,CAAO,IAAQ,IAAA,EAAA,GAAM,GAAA,IAAQ,GAAO,GAAA,KAAA,CAAA;IAChD,GAAA,CAAI,QAAQ,CAAI,GAAA,KAAA,CAAA;AACpB","ignoreList":[0]}},
    {"offset": {"line": 4581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4587, "column": 0}, "map": {"version":3,"file":"GraphicsPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/GraphicsPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { State } from '../../../rendering/renderers/shared/state/State';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { color32BitToUniform } from '../gpu/colorToUniform';\nimport { BatchableGraphics } from './BatchableGraphics';\n\nimport type { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { BatchPipe, RenderPipe } from '../../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Shader } from '../../../rendering/renderers/shared/shader/Shader';\nimport type { RenderableGCSystem } from '../../../rendering/renderers/shared/texture/RenderableGCSystem';\nimport type { PoolItem } from '../../../utils/pool/Pool';\nimport type { Container } from '../../container/Container';\nimport type { Graphics } from './Graphics';\nimport type { GpuGraphicsContext, GraphicsContextSystem } from './GraphicsContextSystem';\n\nexport interface GraphicsAdaptor\n{\n    shader: Shader;\n    init(): void;\n    execute(graphicsPipe: GraphicsPipe, renderable: Graphics): void;\n    destroy(): void;\n}\nexport interface GraphicsSystem\n{\n    graphicsContext: GraphicsContextSystem;\n    renderableGC: RenderableGCSystem;\n    renderPipes: {\n        batch: BatchPipe\n    }\n    _roundPixels: 0 | 1;\n}\n\nexport class GraphicsPipe implements RenderPipe<Graphics>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'graphics',\n    } as const;\n\n    public renderer: GraphicsSystem;\n    public state: State = State.for2d();\n\n    // batchable graphics list, used to render batches\n    private _graphicsBatchesHash: Record<number, BatchableGraphics[]> = Object.create(null);\n    private _adaptor: GraphicsAdaptor;\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: GraphicsSystem, adaptor: GraphicsAdaptor)\n    {\n        this.renderer = renderer;\n\n        this._adaptor = adaptor;\n        this._adaptor.init();\n\n        this.renderer.renderableGC.addManagedHash(this, '_graphicsBatchesHash');\n    }\n\n    public validateRenderable(graphics: Graphics): boolean\n    {\n        // assume context is dirty..\n\n        const context = graphics.context;\n\n        const wasBatched = !!this._graphicsBatchesHash[graphics.uid];\n\n        const gpuContext = this.renderer.graphicsContext.updateGpuContext(context);\n\n        if (gpuContext.isBatchable || wasBatched !== gpuContext.isBatchable)\n        {\n            // TODO what if they are the same size??\n            return true;\n        }\n\n        return false;\n    }\n\n    public addRenderable(graphics: Graphics, instructionSet: InstructionSet)\n    {\n        const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n\n        // need to get batches here.. as we need to know if we can batch or not..\n        // this also overrides the current batches..\n\n        if (graphics.didViewUpdate)\n        {\n            this._rebuild(graphics);\n        }\n\n        if (gpuContext.isBatchable)\n        {\n            this._addToBatcher(graphics, instructionSet);\n        }\n        else\n        {\n            this.renderer.renderPipes.batch.break(instructionSet);\n            instructionSet.add(graphics);\n        }\n    }\n\n    public updateRenderable(graphics: Graphics)\n    {\n        const batches = this._graphicsBatchesHash[graphics.uid];\n\n        if (batches)\n        {\n            for (let i = 0; i < batches.length; i++)\n            {\n                const batch = batches[i];\n\n                batch._batcher.updateElement(batch);\n            }\n        }\n    }\n\n    public destroyRenderable(graphics: Graphics)\n    {\n        if (this._graphicsBatchesHash[graphics.uid])\n        {\n            this._removeBatchForRenderable(graphics.uid);\n        }\n\n        graphics.off('destroyed', this._destroyRenderableBound);\n    }\n\n    public execute(graphics: Graphics)\n    {\n        if (!graphics.isRenderable) return;\n\n        const renderer = this.renderer;\n        const context = graphics.context;\n        const contextSystem = renderer.graphicsContext;\n\n        // early out if there is no actual visual stuff...\n        if (!contextSystem.getGpuContext(context).batches.length)\n        { return; }\n\n        const shader = context.customShader || this._adaptor.shader;\n\n        this.state.blendMode = graphics.groupBlendMode;\n\n        const localUniforms = shader.resources.localUniforms.uniforms;\n\n        localUniforms.uTransformMatrix = graphics.groupTransform;\n        localUniforms.uRound = renderer._roundPixels | graphics._roundPixels;\n\n        color32BitToUniform(\n            graphics.groupColorAlpha,\n            localUniforms.uColor,\n            0,\n        );\n\n        this._adaptor.execute(this, graphics);\n    }\n\n    private _rebuild(graphics: Graphics)\n    {\n        const wasBatched = !!this._graphicsBatchesHash[graphics.uid];\n\n        const gpuContext = this.renderer.graphicsContext.updateGpuContext(graphics.context);\n\n        // TODO POOL the old batches!\n\n        if (wasBatched)\n        {\n            this._removeBatchForRenderable(graphics.uid);\n        }\n\n        if (gpuContext.isBatchable)\n        {\n            this._initBatchesForRenderable(graphics);\n        }\n\n        graphics.batched = gpuContext.isBatchable;\n    }\n\n    private _addToBatcher(graphics: Graphics, instructionSet: InstructionSet)\n    {\n        const batchPipe = this.renderer.renderPipes.batch;\n\n        const batches = this._getBatchesForRenderable(graphics);\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            const batch = batches[i];\n\n            batchPipe.addToBatch(batch, instructionSet);\n        }\n    }\n\n    private _getBatchesForRenderable(graphics: Graphics): BatchableGraphics[]\n    {\n        return this._graphicsBatchesHash[graphics.uid] || this._initBatchesForRenderable(graphics);\n    }\n\n    private _initBatchesForRenderable(graphics: Graphics): BatchableGraphics[]\n    {\n        const context = graphics.context;\n\n        const gpuContext: GpuGraphicsContext = this.renderer.graphicsContext.getGpuContext(context);\n\n        const roundPixels = (this.renderer._roundPixels | graphics._roundPixels) as 0 | 1;\n\n        const batches = gpuContext.batches.map((batch) =>\n        {\n            const batchClone = BigPool.get(BatchableGraphics);\n\n            batch.copyTo(batchClone);\n\n            batchClone.renderable = graphics;\n\n            batchClone.roundPixels = roundPixels;\n\n            return batchClone;\n        });\n\n        if (this._graphicsBatchesHash[graphics.uid] === undefined)\n        {\n            // TODO perhaps manage this outside this pipe? (a bit like how we update / add)\n            graphics.on('destroyed', this._destroyRenderableBound);\n        }\n\n        this._graphicsBatchesHash[graphics.uid] = batches;\n\n        return batches;\n    }\n\n    private _removeBatchForRenderable(graphicsUid: number)\n    {\n        this._graphicsBatchesHash[graphicsUid].forEach((batch) =>\n        {\n            BigPool.return(batch as PoolItem);\n        });\n\n        this._graphicsBatchesHash[graphicsUid] = null;\n    }\n\n    public destroy()\n    {\n        this.renderer = null;\n\n        this._adaptor.destroy();\n        this._adaptor = null;\n        this.state = null;\n\n        for (const i in this._graphicsBatchesHash)\n        {\n            this._removeBatchForRenderable(i as unknown as number);\n        }\n\n        this._graphicsBatchesHash = null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4730, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4736, "column": 0}, "map": {"version":3,"file":"InstructionSet.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/instructions/InstructionSet.ts"],"sourcesContent":["import { uid } from '../../../../utils/data/uid';\n\nimport type { Renderable } from '../Renderable';\nimport type { Instruction } from './Instruction';\n\nlet _tick = 0;\n\n/**\n * A set of instructions that can be executed by the renderer.\n * Basically wraps an array, but with some extra properties that help the renderer\n * to keep things nice and optimised.\n *\n * Note:\n * InstructionSet.instructions contains all the instructions, but does not resize (for performance).\n * So for the true length of the instructions you need to use InstructionSet.instructionSize\n * @memberof rendering\n */\nexport class InstructionSet\n{\n    /** a unique id for this instruction set used through the renderer */\n    public readonly uid: number = uid('instructionSet');\n    /** the array of instructions */\n    public readonly instructions: Instruction[] = [];\n    /** the actual size of the array (any instructions passed this should be ignored) */\n    public instructionSize = 0;\n    /** allows for access to the render pipes of the renderer */\n    public renderPipes: any;\n\n    public renderables: Renderable[] = [];\n    public tick = 0;\n\n    /** reset the instruction set so it can be reused set size back to 0 */\n    public reset()\n    {\n        this.instructionSize = 0;\n        this.tick = _tick++;\n    }\n\n    /**\n     * Add an instruction to the set\n     * @param instruction - add an instruction to the set\n     */\n    public add(instruction: Instruction)\n    {\n        this.instructions[this.instructionSize++] = instruction;\n    }\n\n    /**\n     * Log the instructions to the console (for debugging)\n     * @internal\n     * @ignore\n     */\n    public log()\n    {\n        this.instructions.length = this.instructionSize;\n        // eslint-disable-next-line no-console\n        console.table(this.instructions, ['type', 'action']);\n    }\n}\n"],"names":[],"mappings":";;;;;;AAKA,IAAI,KAAQ,GAAA,CAAA,CAAA;AAYL,MAAM,cACb,CAAA;IADO,WAAA,EAAA;QAGH,mEAAA,GAAgB,IAAA,CAAA,GAAA,qKAAc,MAAA,EAAI,gBAAgB,CAAA,CAAA;QAElD,8BAAA,GAAA,IAAA,CAAgB,YAAA,GAA8B,EAAC,CAAA;QAE/C,kFAAA,GAAA,IAAA,CAAO,eAAkB,GAAA,CAAA,CAAA;QAIzB,IAAA,CAAO,WAAA,GAA4B,EAAC,CAAA;QACpC,IAAA,CAAO,IAAO,GAAA,CAAA,CAAA;IAAA,CAAA;IAAA,qEAAA,GAGP,KACP,GAAA;QACI,IAAA,CAAK,eAAkB,GAAA,CAAA,CAAA;QACvB,IAAA,CAAK,IAAO,GAAA,KAAA,EAAA,CAAA;IAAA,CAChB;IAAA;;;GAAA,GAMO,IAAI,WACX,EAAA;QACS,IAAA,CAAA,YAAA,CAAa,IAAK,CAAA,eAAA,EAAiB,CAAI,GAAA,WAAA,CAAA;IAAA,CAChD;IAAA;;;;GAAA,GAOO,GACP,GAAA;QACS,IAAA,CAAA,YAAA,CAAa,MAAA,GAAS,IAAK,CAAA,eAAA,CAAA;QAEhC,OAAA,CAAQ,KAAA,CAAM,IAAK,CAAA,YAAA,EAAc;YAAC,MAAA;YAAQ,QAAQ;SAAC,CAAA,CAAA;IAAA,CACvD;AACJ","ignoreList":[0]}},
    {"offset": {"line": 4775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4781, "column": 0}, "map": {"version":3,"file":"Extensions.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/extensions/Extensions.ts"],"sourcesContent":["/**\n * `extensions` is a global object that holds all the extensions registered with PixiJS.\n * PixiJS uses a this extensions architecture a lot to make the library more modular and\n * flexible.\n *\n * For example, if you want to add load a new type of asset, you can register a new\n * {@link assets.LoaderParser} with the `extensions` object.\n *\n * ```js\n * import { extensions, ExtensionType } from 'pixi.js';\n *\n * // create a custom asset loader\n * const customAssetLoader = {\n *    extension: {\n *        type: ExtensionType.LoadParser,\n *        name: 'custom-asset-loader',\n *    },\n *    test(url) {\n *       // check if this new loader should be used...\n *    },\n *    load(url) {\n *        // load the asset...\n *    },\n * };\n *\n * // add the custom asset loader to pixi\n * extensions.add(customAssetLoader);\n * ```\n *\n * This would add the `customAssetLoader` to the list of available loaders that PixiJS can use.\n *\n * There are many different types of extensions, which are listed in {@link extensions.ExtensionType}.\n * @namespace extensions\n */\n\n/**\n * Collection of valid extension types.\n * @memberof extensions\n */\nenum ExtensionType\n{\n    /** extensions that are registered as Application plugins */\n    Application = 'application',\n\n    /** extensions that are registered as WebGL render pipes */\n    WebGLPipes = 'webgl-pipes',\n    /** extensions that are registered as WebGL render pipes adaptors */\n    WebGLPipesAdaptor = 'webgl-pipes-adaptor',\n    /** extensions that are registered as WebGL render systems */\n    WebGLSystem = 'webgl-system',\n\n    /** extensions that are registered as WebGPU render pipes */\n    WebGPUPipes = 'webgpu-pipes',\n    /** extensions that are registered as WebGPU render pipes adaptors */\n    WebGPUPipesAdaptor = 'webgpu-pipes-adaptor',\n    /** extensions that are registered as WebGPU render systems */\n    WebGPUSystem = 'webgpu-system',\n\n    /** extensions that are registered as Canvas render pipes */\n    CanvasSystem = 'canvas-system',\n    /** extensions that are registered as Canvas render pipes adaptors */\n    CanvasPipesAdaptor = 'canvas-pipes-adaptor',\n    /** extensions that are registered as Canvas render systems */\n    CanvasPipes = 'canvas-pipes',\n\n    /** extensions that combine the other Asset extensions */\n    Asset = 'asset',\n    /** extensions that are used to load assets through Assets */\n    LoadParser = 'load-parser',\n    /** extensions that are used to resolve asset urls through Assets */\n    ResolveParser = 'resolve-parser',\n    /** extensions that are used to handle how urls are cached by Assets */\n    CacheParser = 'cache-parser',\n    /** extensions that are used to add/remove available resources from Assets */\n    DetectionParser = 'detection-parser',\n\n    /** extensions that are registered with the MaskEffectManager */\n    MaskEffect = 'mask-effect',\n\n    /** A type of extension for creating a new advanced blend mode */\n    BlendMode = 'blend-mode',\n\n    /** A type of extension that will be used to auto detect a resource type */\n    TextureSource = 'texture-source',\n\n    /** A type of extension that will be used to auto detect an environment */\n    Environment = 'environment',\n\n    /** A type of extension for building and triangulating custom shapes used in graphics. */\n    ShapeBuilder = 'shape-builder',\n\n    /** A type of extension for creating custom batchers used in rendering. */\n    Batcher = 'batcher',\n}\n\n/**\n * The metadata for an extension.\n * @memberof extensions\n * @ignore\n */\ninterface ExtensionMetadataDetails\n{\n    /** The extension type, can be multiple types */\n    type: ExtensionType | ExtensionType[];\n    /** Optional. Some plugins provide an API name/property, to make them more easily accessible */\n    name?: string;\n    /** Optional, used for sorting the plugins in a particular order */\n    priority?: number;\n}\n\n/**\n * The metadata for an extension.\n * @memberof extensions\n */\ntype ExtensionMetadata = ExtensionType | ExtensionMetadataDetails;\n\n/**\n * Format when registering an extension. Generally, the extension\n * should have these values as `extension` static property,\n * but you can override name or type by providing an object.\n * @memberof extensions\n */\ninterface ExtensionFormat\n{\n    /** The extension type, can be multiple types */\n    type: ExtensionType | ExtensionType[];\n    /** Optional. Some plugins provide an API name/property, such as Renderer plugins */\n    name?: string;\n    /** Optional, used for sorting the plugins in a particular order */\n    priority?: number;\n    /** Reference to the plugin object/class */\n    ref: any;\n}\n\n/**\n * Extension format that is used internally for registrations.\n * @memberof extensions\n * @ignore\n */\ninterface StrictExtensionFormat extends ExtensionFormat\n{\n    /** The extension type, always expressed as multiple, even if a single */\n    type: ExtensionType[];\n}\n\ntype ExtensionHandler = (extension: StrictExtensionFormat) => void;\n\n/**\n * Convert input into extension format data.\n * @ignore\n */\nconst normalizeExtension = (ext: ExtensionFormat | any): StrictExtensionFormat =>\n{\n    // Class/Object submission, use extension object\n    if (typeof ext === 'function' || (typeof ext === 'object' && ext.extension))\n    {\n        // #if _DEBUG\n        if (!ext.extension)\n        {\n            throw new Error('Extension class must have an extension object');\n        }\n        // #endif\n        const metadata: ExtensionMetadataDetails = (typeof ext.extension !== 'object')\n            ? { type: ext.extension }\n            : ext.extension;\n\n        ext = { ...metadata, ref: ext };\n    }\n    if (typeof ext === 'object')\n    {\n        ext = { ...ext };\n    }\n    else\n    {\n        throw new Error('Invalid extension type');\n    }\n\n    if (typeof ext.type === 'string')\n    {\n        ext.type = [ext.type];\n    }\n\n    return ext;\n};\n\n/**\n * Get the priority for an extension.\n * @ignore\n * @param ext - Any extension\n * @param defaultPriority - Fallback priority if none is defined.\n * @returns The priority for the extension.\n * @memberof extensions\n */\nexport const normalizeExtensionPriority = (ext: ExtensionFormat | any, defaultPriority: number): number =>\n    normalizeExtension(ext).priority ?? defaultPriority;\n\n/**\n * Global registration of all PixiJS extensions. One-stop-shop for extensibility.\n *\n * Import the `extensions` object and use it to register new functionality via the described methods below.\n * ```js\n * import { extensions } from 'pixi.js';\n *\n * // register a new extension\n * extensions.add(myExtension);\n * ```\n * @property {Function} remove - Remove extensions from PixiJS.\n * @property {Function} add - Register new extensions with PixiJS.\n * @property {Function} handle - Internal method to handle extensions by name.\n * @property {Function} handleByMap - Handle a type, but using a map by `name` property.\n * @property {Function} handleByNamedList - Handle a type, but using a list of extensions with a `name` property.\n * @property {Function} handleByList - Handle a type, but using a list of extensions.\n * @memberof extensions\n */\nconst extensions = {\n\n    /** @ignore */\n    _addHandlers: {} as Partial<Record<ExtensionType, ExtensionHandler>>,\n\n    /** @ignore */\n    _removeHandlers: {} as Partial<Record<ExtensionType, ExtensionHandler>>,\n\n    /** @ignore */\n    _queue: {} as Partial<Record<ExtensionType, StrictExtensionFormat[]>>,\n\n    /**\n     * Remove extensions from PixiJS.\n     * @param extensions - Extensions to be removed.\n     * @returns {extensions} For chaining.\n     */\n    remove(...extensions: Array<ExtensionFormat | any>)\n    {\n        extensions.map(normalizeExtension).forEach((ext) =>\n        {\n            ext.type.forEach((type) => this._removeHandlers[type]?.(ext));\n        });\n\n        return this;\n    },\n\n    /**\n     * Register new extensions with PixiJS.\n     * @param extensions - The spread of extensions to add to PixiJS.\n     * @returns {extensions} For chaining.\n     */\n    add(...extensions: Array<ExtensionFormat | any>)\n    {\n        // Handle any extensions either passed as class w/ data or as data\n        extensions.map(normalizeExtension).forEach((ext) =>\n        {\n            ext.type.forEach((type) =>\n            {\n                const handlers = this._addHandlers;\n                const queue = this._queue;\n\n                if (!handlers[type])\n                {\n                    queue[type] = queue[type] || [];\n                    queue[type]?.push(ext);\n                }\n                else\n                {\n                    handlers[type]?.(ext);\n                }\n            });\n        });\n\n        return this;\n    },\n\n    /**\n     * Internal method to handle extensions by name.\n     * @param type - The extension type.\n     * @param onAdd  - Function handler when extensions are added/registered {@link StrictExtensionFormat}.\n     * @param onRemove  - Function handler when extensions are removed/unregistered {@link StrictExtensionFormat}.\n     * @returns {extensions} For chaining.\n     */\n    handle(type: ExtensionType, onAdd: ExtensionHandler, onRemove: ExtensionHandler)\n    {\n        const addHandlers = this._addHandlers;\n        const removeHandlers = this._removeHandlers;\n\n        // #if _DEBUG\n        if (addHandlers[type] || removeHandlers[type])\n        {\n            throw new Error(`Extension type ${type} already has a handler`);\n        }\n        // #endif\n\n        addHandlers[type] = onAdd;\n        removeHandlers[type] = onRemove;\n\n        // Process the queue\n        const queue = this._queue;\n\n        // Process any plugins that have been registered before the handler\n        if (queue[type])\n        {\n            queue[type]?.forEach((ext) => onAdd(ext));\n            delete queue[type];\n        }\n\n        return this;\n    },\n\n    /**\n     * Handle a type, but using a map by `name` property.\n     * @param type - Type of extension to handle.\n     * @param map - The object map of named extensions.\n     * @returns {extensions} For chaining.\n     */\n    handleByMap(type: ExtensionType, map: Record<string, any>)\n    {\n        return this.handle(type,\n            (extension) =>\n            {\n                if (extension.name)\n                {\n                    map[extension.name] = extension.ref;\n                }\n            },\n            (extension) =>\n            {\n                if (extension.name)\n                {\n                    delete map[extension.name];\n                }\n            }\n        );\n    },\n\n    /**\n     * Handle a type, but using a list of extensions with a `name` property.\n     * @param type - Type of extension to handle.\n     * @param map - The array of named extensions.\n     * @param defaultPriority - Fallback priority if none is defined.\n     * @returns {extensions} For chaining.\n     */\n    handleByNamedList(type: ExtensionType, map: {name: string, value: any}[], defaultPriority = -1)\n    {\n        return this.handle(\n            type,\n            (extension) =>\n            {\n                const index = map.findIndex((item) => item.name === extension.name);\n\n                if (index >= 0) return;\n\n                map.push({ name: extension.name, value: extension.ref });\n                map.sort((a, b) =>\n                    normalizeExtensionPriority(b.value, defaultPriority)\n                    - normalizeExtensionPriority(a.value, defaultPriority));\n            },\n            (extension) =>\n            {\n                const index = map.findIndex((item) => item.name === extension.name);\n\n                if (index !== -1)\n                {\n                    map.splice(index, 1);\n                }\n            }\n        );\n    },\n\n    /**\n     * Handle a type, but using a list of extensions.\n     * @param type - Type of extension to handle.\n     * @param list - The list of extensions.\n     * @param defaultPriority - The default priority to use if none is specified.\n     * @returns {extensions} For chaining.\n     */\n    handleByList(type: ExtensionType, list: any[], defaultPriority = -1)\n    {\n        return this.handle(\n            type,\n            (extension) =>\n            {\n                if (list.includes(extension.ref))\n                {\n                    return;\n                }\n\n                list.push(extension.ref);\n                list.sort((a, b) =>\n                    normalizeExtensionPriority(b, defaultPriority) - normalizeExtensionPriority(a, defaultPriority));\n            },\n            (extension) =>\n            {\n                const index = list.indexOf(extension.ref);\n\n                if (index !== -1)\n                {\n                    list.splice(index, 1);\n                }\n            }\n        );\n    },\n};\n\nexport {\n    extensions,\n    ExtensionType,\n};\nexport type {\n    StrictExtensionFormat as ExtensionFormat,\n    ExtensionFormat as ExtensionFormatLoose,\n    ExtensionHandler,\n    ExtensionMetadata,\n    ExtensionMetadataDetails\n};\n"],"names":["ExtensionType","extensions"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4954, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4960, "column": 0}, "map": {"version":3,"file":"buildRectangle.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildRectangle.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildRectangle: ShapeBuildCommand<Rectangle> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'rectangle',\n    },\n\n    build(shape: Rectangle, points: number[]): number[]\n    {\n        const rectData = shape;\n        const x = rectData.x;\n        const y = rectData.y;\n        const width = rectData.width;\n        const height = rectData.height;\n\n        if (!(width >= 0 && height >= 0))\n        {\n            return points;\n        }\n\n        points[0] = x;\n        points[1] = y;\n        points[2] = x + width;\n        points[3] = y;\n        points[4] = x + width;\n        points[5] = y + height;\n        points[6] = x;\n        points[7] = y + height;\n\n        return points;\n    },\n\n    triangulate(\n        points: number[],\n\n        vertices: number[],\n        verticesStride: number,\n        verticesOffset: number,\n\n        indices: number[],\n        indicesOffset: number\n    )\n    {\n        let count = 0;\n\n        verticesOffset *= verticesStride;\n\n        vertices[verticesOffset + count] = points[0];\n        vertices[verticesOffset + count + 1] = points[1];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[2];\n        vertices[verticesOffset + count + 1] = points[3];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[6];\n        vertices[verticesOffset + count + 1] = points[7];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[4];\n        vertices[verticesOffset + count + 1] = points[5];\n\n        count += verticesStride;\n\n        const verticesIndex = verticesOffset / verticesStride;\n\n        // triangle 1\n        indices[indicesOffset++] = verticesIndex;\n        indices[indicesOffset++] = verticesIndex + 1;\n        indices[indicesOffset++] = verticesIndex + 2;\n\n        // triangle 2\n        indices[indicesOffset++] = verticesIndex + 1;\n        indices[indicesOffset++] = verticesIndex + 3;\n        indices[indicesOffset++] = verticesIndex + 2;\n    },\n};\n"],"names":[],"mappings":";;;;;;AAYO,MAAM,cAA+C,GAAA;IACxD,SAAW,EAAA;QACP,wKAAM,gBAAc,CAAA,YAAA;QACpB,IAAM,EAAA,WAAA;IAAA,CACV;IAEA,KAAA,EAAM,KAAA,EAAkB,MACxB,EAAA;QACI,MAAM,QAAW,GAAA,KAAA,CAAA;QACjB,MAAM,IAAI,QAAS,CAAA,CAAA,CAAA;QACnB,MAAM,IAAI,QAAS,CAAA,CAAA,CAAA;QACnB,MAAM,QAAQ,QAAS,CAAA,KAAA,CAAA;QACvB,MAAM,SAAS,QAAS,CAAA,MAAA,CAAA;QAExB,IAAI,CAAA,CAAE,KAAA,IAAS,CAAK,IAAA,MAAA,IAAU,CAC9B,CAAA,EAAA;YACW,OAAA,MAAA,CAAA;QAAA,CACX;QAEA,MAAA,CAAO,CAAC,CAAI,GAAA,CAAA,CAAA;QACZ,MAAA,CAAO,CAAC,CAAI,GAAA,CAAA,CAAA;QACL,MAAA,CAAA,CAAC,CAAA,GAAI,CAAI,GAAA,KAAA,CAAA;QAChB,MAAA,CAAO,CAAC,CAAI,GAAA,CAAA,CAAA;QACL,MAAA,CAAA,CAAC,CAAA,GAAI,CAAI,GAAA,KAAA,CAAA;QACT,MAAA,CAAA,CAAC,CAAA,GAAI,CAAI,GAAA,MAAA,CAAA;QAChB,MAAA,CAAO,CAAC,CAAI,GAAA,CAAA,CAAA;QACL,MAAA,CAAA,CAAC,CAAA,GAAI,CAAI,GAAA,MAAA,CAAA;QAET,OAAA,MAAA,CAAA;IAAA,CACX;IAEA,aACI,MAEA,EAAA,QAAA,EACA,cACA,EAAA,cAAA,EAEA,OAAA,EACA,aAEJ,EAAA;QACI,IAAI,KAAQ,GAAA,CAAA,CAAA;QAEM,cAAA,IAAA,cAAA,CAAA;QAElB,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAEtC,KAAA,IAAA,cAAA,CAAA;QAET,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAEtC,KAAA,IAAA,cAAA,CAAA;QAET,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAEtC,KAAA,IAAA,cAAA,CAAA;QAET,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAEtC,KAAA,IAAA,cAAA,CAAA;QAET,MAAM,gBAAgB,cAAiB,GAAA,cAAA,CAAA;QAGvC,OAAA,CAAQ,eAAe,CAAI,GAAA,aAAA,CAAA;QACnB,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;QACnC,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;QAGnC,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;QACnC,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;QACnC,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;IAAA,CAC/C;AACJ","ignoreList":[0]}},
    {"offset": {"line": 5016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5022, "column": 0}, "map": {"version":3,"file":"triangulateWithHoles.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/utils/triangulateWithHoles.ts"],"sourcesContent":["import { default as earcut } from 'earcut';\n\nexport function triangulateWithHoles(\n    points: number[],\n    holes: number[],\n    vertices: number[],\n    verticesStride: number,\n    verticesOffset: number,\n\n    indices: number[],\n    indicesOffset: number\n)\n{\n    const triangles = earcut(points, holes, 2);\n\n    if (!triangles)\n    {\n        return;\n    }\n\n    for (let i = 0; i < triangles.length; i += 3)\n    {\n        indices[indicesOffset++] = (triangles[i] + verticesOffset);\n        indices[indicesOffset++] = (triangles[i + 1] + verticesOffset);\n        indices[indicesOffset++] = (triangles[i + 2] + verticesOffset);\n    }\n\n    let index = verticesOffset * verticesStride;\n\n    for (let i = 0; i < points.length; i += 2)\n    {\n        vertices[index] = points[i];\n        vertices[index + 1] = points[i + 1];\n\n        index += verticesStride;\n    }\n}\n\n"],"names":[],"mappings":";;;;;;AAEO,SAAS,qBACZ,MACA,EAAA,KAAA,EACA,QAAA,EACA,cACA,EAAA,cAAA,EAEA,OAAA,EACA,aAEJ,EAAA;IACI,MAAM,SAAY,kJAAA,UAAA,EAAO,MAAQ,EAAA,KAAA,EAAO,CAAC,CAAA,CAAA;IAEzC,IAAI,CAAC,SACL,EAAA;QACI,OAAA;IAAA,CACJ;IAEA,IAAA,IAAS,IAAI,CAAG,EAAA,CAAA,GAAI,SAAU,CAAA,MAAA,EAAQ,KAAK,CAC3C,CAAA;QACI,OAAA,CAAQ,aAAe,EAAA,CAAA,GAAK,SAAU,CAAA,CAAC,CAAI,GAAA,cAAA,CAAA;QAC3C,OAAA,CAAQ,aAAe,EAAA,CAAA,GAAK,SAAU,CAAA,CAAA,GAAI,CAAC,CAAI,GAAA,cAAA,CAAA;QAC/C,OAAA,CAAQ,aAAe,EAAA,CAAA,GAAK,SAAU,CAAA,CAAA,GAAI,CAAC,CAAI,GAAA,cAAA,CAAA;IAAA,CACnD;IAEA,IAAI,QAAQ,cAAiB,GAAA,cAAA,CAAA;IAE7B,IAAA,IAAS,IAAI,CAAG,EAAA,CAAA,GAAI,MAAO,CAAA,MAAA,EAAQ,KAAK,CACxC,CAAA;QACa,QAAA,CAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC1B,QAAA,CAAS,KAAQ,GAAA,CAAC,CAAI,GAAA,MAAA,CAAO,IAAI,CAAC,CAAA,CAAA;QAEzB,KAAA,IAAA,cAAA,CAAA;IAAA,CACb;AACJ","ignoreList":[0]}},
    {"offset": {"line": 5047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5053, "column": 0}, "map": {"version":3,"file":"buildPolygon.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildPolygon.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\nimport { triangulateWithHoles } from '../utils/triangulateWithHoles';\n\nimport type { Polygon } from '../../../../maths/shapes/Polygon';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\nconst emptyArray: number[] = [];\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildPolygon: ShapeBuildCommand<Polygon> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'polygon',\n    },\n\n    build(shape: Polygon, points: number[]): number[]\n    {\n        for (let i = 0; i < shape.points.length; i++)\n        {\n            points[i] = shape.points[i];\n        }\n\n        return points;\n    },\n\n    triangulate(\n        points: number[],\n        //  holes: number[],\n        vertices: number[],\n        verticesStride: number,\n        verticesOffset: number,\n\n        indices: number[],\n        indicesOffset: number\n    )\n    {\n        triangulateWithHoles(points, emptyArray, vertices, verticesStride, verticesOffset, indices, indicesOffset);\n    },\n\n};\n"],"names":[],"mappings":";;;;;;;;AAMA,MAAM,aAAuB,EAAC,CAAA;AASvB,MAAM,YAA2C,GAAA;IACpD,SAAW,EAAA;QACP,wKAAM,gBAAc,CAAA,YAAA;QACpB,IAAM,EAAA,SAAA;IAAA,CACV;IAEA,KAAA,EAAM,KAAA,EAAgB,MACtB,EAAA;QACI,IAAA,IAAS,IAAI,CAAG,EAAA,CAAA,GAAI,KAAM,CAAA,MAAA,CAAO,MAAA,EAAQ,CACzC,EAAA,CAAA;YACI,MAAA,CAAO,CAAC,CAAA,GAAI,KAAM,CAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAAA,CAC9B;QAEO,OAAA,MAAA,CAAA;IAAA,CACX;IAEA,aACI,MAEA,EAAA,QAAA,EACA,cACA,EAAA,cAAA,EAEA,OAAA,EACA,aAEJ,EAAA;kNACI,uBAAA,EAAqB,QAAQ,UAAY,EAAA,QAAA,EAAU,cAAgB,EAAA,cAAA,EAAgB,SAAS,aAAa,CAAA,CAAA;IAAA,CAC7G;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 5079, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5085, "column": 0}, "map": {"version":3,"file":"buildTriangle.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildTriangle.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { Triangle } from '../../../../maths/shapes/Triangle';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\n/**\n * Builds a triangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildTriangle: ShapeBuildCommand<Triangle> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'triangle',\n    },\n\n    build(shape: Triangle, points: number[]): number[]\n    {\n        points[0] = shape.x;\n        points[1] = shape.y;\n        points[2] = shape.x2;\n        points[3] = shape.y2;\n        points[4] = shape.x3;\n        points[5] = shape.y3;\n\n        return points;\n    },\n\n    triangulate(\n        points: number[],\n\n        vertices: number[],\n        verticesStride: number,\n        verticesOffset: number,\n\n        indices: number[],\n        indicesOffset: number\n    )\n    {\n        let count = 0;\n\n        verticesOffset *= verticesStride;\n\n        vertices[verticesOffset + count] = points[0];\n        vertices[verticesOffset + count + 1] = points[1];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[2];\n        vertices[verticesOffset + count + 1] = points[3];\n\n        count += verticesStride;\n\n        vertices[verticesOffset + count] = points[4];\n        vertices[verticesOffset + count + 1] = points[5];\n\n        const verticesIndex = verticesOffset / verticesStride;\n\n        // triangle 1\n        indices[indicesOffset++] = verticesIndex;\n        indices[indicesOffset++] = verticesIndex + 1;\n        indices[indicesOffset++] = verticesIndex + 2;\n    },\n};\n"],"names":[],"mappings":";;;;;;AAYO,MAAM,aAA6C,GAAA;IACtD,SAAW,EAAA;QACP,wKAAM,gBAAc,CAAA,YAAA;QACpB,IAAM,EAAA,UAAA;IAAA,CACV;IAEA,KAAA,EAAM,KAAA,EAAiB,MACvB,EAAA;QACW,MAAA,CAAA,CAAC,CAAA,GAAI,KAAM,CAAA,CAAA,CAAA;QACX,MAAA,CAAA,CAAC,CAAA,GAAI,KAAM,CAAA,CAAA,CAAA;QACX,MAAA,CAAA,CAAC,CAAA,GAAI,KAAM,CAAA,EAAA,CAAA;QACX,MAAA,CAAA,CAAC,CAAA,GAAI,KAAM,CAAA,EAAA,CAAA;QACX,MAAA,CAAA,CAAC,CAAA,GAAI,KAAM,CAAA,EAAA,CAAA;QACX,MAAA,CAAA,CAAC,CAAA,GAAI,KAAM,CAAA,EAAA,CAAA;QAEX,OAAA,MAAA,CAAA;IAAA,CACX;IAEA,aACI,MAEA,EAAA,QAAA,EACA,cACA,EAAA,cAAA,EAEA,OAAA,EACA,aAEJ,EAAA;QACI,IAAI,KAAQ,GAAA,CAAA,CAAA;QAEM,cAAA,IAAA,cAAA,CAAA;QAElB,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAEtC,KAAA,IAAA,cAAA,CAAA;QAET,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAEtC,KAAA,IAAA,cAAA,CAAA;QAET,QAAA,CAAS,cAAiB,GAAA,KAAK,CAAI,GAAA,MAAA,CAAO,CAAC,CAAA,CAAA;QAC3C,QAAA,CAAS,cAAiB,GAAA,KAAA,GAAQ,CAAC,CAAA,GAAI,MAAA,CAAO,CAAC,CAAA,CAAA;QAE/C,MAAM,gBAAgB,cAAiB,GAAA,cAAA,CAAA;QAGvC,OAAA,CAAQ,eAAe,CAAI,GAAA,aAAA,CAAA;QACnB,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;QACnC,OAAA,CAAA,aAAA,EAAe,CAAA,GAAI,aAAgB,GAAA,CAAA,CAAA;IAAA,CAC/C;AACJ","ignoreList":[0]}},
    {"offset": {"line": 5124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5130, "column": 0}, "map": {"version":3,"file":"buildCircle.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildCircle.ts"],"sourcesContent":["import { ExtensionType } from '../../../../extensions/Extensions';\n\nimport type { Circle } from '../../../../maths/shapes/Circle';\nimport type { Ellipse } from '../../../../maths/shapes/Ellipse';\nimport type { RoundedRectangle } from '../../../../maths/shapes/RoundedRectangle';\nimport type { ShapeBuildCommand } from './ShapeBuildCommand';\n\ntype RoundedShape = Circle | Ellipse | RoundedRectangle;\n\n/**\n * Builds a rectangle to draw\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n */\nexport const buildCircle: ShapeBuildCommand<RoundedShape> = {\n    extension: {\n        type: ExtensionType.ShapeBuilder,\n        name: 'circle',\n    },\n\n    build(shape: RoundedShape, points: number[])\n    {\n        let x;\n        let y;\n        let dx;\n        let dy;\n\n        let rx;\n        let ry;\n\n        if (shape.type === 'circle')\n        {\n            const circle = shape as Circle;\n\n            x = circle.x;\n            y = circle.y;\n            rx = ry = circle.radius;\n            dx = dy = 0;\n        }\n\n        else if (shape.type === 'ellipse')\n        {\n            const ellipse = shape as Ellipse;\n\n            x = ellipse.x;\n            y = ellipse.y;\n            rx = ellipse.halfWidth;\n            ry = ellipse.halfHeight;\n            dx = dy = 0;\n        }\n        else\n        {\n            const roundedRect = shape as RoundedRectangle;\n            const halfWidth = roundedRect.width / 2;\n            const halfHeight = roundedRect.height / 2;\n\n            x = roundedRect.x + halfWidth;\n            y = roundedRect.y + halfHeight;\n            rx = ry = Math.max(0, Math.min(roundedRect.radius, Math.min(halfWidth, halfHeight)));\n            dx = halfWidth - rx;\n            dy = halfHeight - ry;\n        }\n\n        if (!(rx >= 0 && ry >= 0 && dx >= 0 && dy >= 0))\n        {\n            return points;\n        }\n\n        // Choose a number of segments such that the maximum absolute deviation from the circle is approximately 0.029\n        const n = Math.ceil(2.3 * Math.sqrt(rx + ry));\n        const m = (n * 8) + (dx ? 4 : 0) + (dy ? 4 : 0);\n\n        if (m === 0)\n        {\n            return points;\n        }\n\n        if (n === 0)\n        {\n            points[0] = points[6] = x + dx;\n            points[1] = points[3] = y + dy;\n            points[2] = points[4] = x - dx;\n            points[5] = points[7] = y - dy;\n\n            return points;\n        }\n\n        let j1 = 0;\n        let j2 = (n * 4) + (dx ? 2 : 0) + 2;\n        let j3 = j2;\n        let j4 = m;\n\n        let x0 = dx + rx;\n        let y0 = dy;\n        let x1 = x + x0;\n        let x2 = x - x0;\n        let y1 = y + y0;\n\n        points[j1++] = x1;\n        points[j1++] = y1;\n        points[--j2] = y1;\n        points[--j2] = x2;\n\n        if (dy)\n        {\n            const y2 = y - y0;\n\n            points[j3++] = x2;\n            points[j3++] = y2;\n            points[--j4] = y2;\n            points[--j4] = x1;\n        }\n\n        for (let i = 1; i < n; i++)\n        {\n            const a = Math.PI / 2 * (i / n);\n            const x0 = dx + (Math.cos(a) * rx);\n            const y0 = dy + (Math.sin(a) * ry);\n            const x1 = x + x0;\n            const x2 = x - x0;\n            const y1 = y + y0;\n            const y2 = y - y0;\n\n            points[j1++] = x1;\n            points[j1++] = y1;\n            points[--j2] = y1;\n            points[--j2] = x2;\n            points[j3++] = x2;\n            points[j3++] = y2;\n            points[--j4] = y2;\n            points[--j4] = x1;\n        }\n\n        x0 = dx;\n        y0 = dy + ry;\n        x1 = x + x0;\n        x2 = x - x0;\n        y1 = y + y0;\n        const y2 = y - y0;\n\n        points[j1++] = x1;\n        points[j1++] = y1;\n        points[--j4] = y2;\n        points[--j4] = x1;\n\n        if (dx)\n        {\n            points[j1++] = x2;\n            points[j1++] = y1;\n            points[--j4] = y2;\n            points[--j4] = x2;\n        }\n\n        return points;\n    },\n\n    triangulate(points, vertices, verticesStride, verticesOffset, indices, indicesOffset)\n    {\n        if (points.length === 0)\n        {\n            return;\n        }\n\n        // Compute center (average of all points)\n        let centerX = 0; let\n            centerY = 0;\n\n        for (let i = 0; i < points.length; i += 2)\n        {\n            centerX += points[i];\n            centerY += points[i + 1];\n        }\n        centerX /= (points.length / 2);\n        centerY /= (points.length / 2);\n\n        // Set center vertex\n        let count = verticesOffset;\n\n        vertices[count * verticesStride] = centerX;\n        vertices[(count * verticesStride) + 1] = centerY;\n        const centerIndex = count++;\n\n        // Set edge vertices and indices\n        for (let i = 0; i < points.length; i += 2)\n        {\n            vertices[count * verticesStride] = points[i];\n            vertices[(count * verticesStride) + 1] = points[i + 1];\n\n            if (i > 0)\n            { // Skip first point for indices\n                indices[indicesOffset++] = count;\n                indices[indicesOffset++] = centerIndex;\n                indices[indicesOffset++] = count - 1;\n            }\n            count++;\n        }\n\n        // Connect last point to the first edge point\n        indices[indicesOffset++] = centerIndex + 1;\n        indices[indicesOffset++] = centerIndex;\n        indices[indicesOffset++] = count - 1;\n    }\n\n};\n\nexport const buildEllipse = { ...buildCircle, extension: { ...buildCircle.extension, name: 'ellipse' } };\nexport const buildRoundedRectangle = { ...buildCircle, extension: { ...buildCircle.extension, name: 'roundedRectangle' } };\n"],"names":["y2","x0","y0","x1","x2","y1"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5296, "column": 0}, "map": {"version":3,"file":"Rectangle.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/maths/shapes/Rectangle.ts"],"sourcesContent":["// import { SHAPES } from '../const';\nimport { Point } from '../point/Point';\n\nimport type { Bounds } from '../../scene/container/bounds/Bounds';\nimport type { Matrix } from '../matrix/Matrix';\nimport type { SHAPE_PRIMITIVE } from '../misc/const';\nimport type { ShapePrimitive } from './ShapePrimitive';\n\nconst tempPoints = [new Point(), new Point(), new Point(), new Point()];\n\n// eslint-disable-next-line @typescript-eslint/no-empty-object-type\nexport interface Rectangle extends PixiMixins.Rectangle { }\n\n/**\n * The `Rectangle` object is an area defined by its position, as indicated by its top-left corner\n * point (`x`, `y`) and by its `width` and its `height`.\n *\n * It also provides convenience methods to get and set the position and size of the rectangle such as\n * {@link maths.Rectangle#bottom|bottom}, {@link maths.Rectangle#right|right} and {@link maths.Rectangle#isEmpty|isEmpty}.\n * @memberof maths\n */\nexport class Rectangle implements ShapePrimitive\n{\n    /**\n     * The type of the object, mainly used to avoid `instanceof` checks\n     * @default 'rectangle'\n     */\n    public readonly type: SHAPE_PRIMITIVE = 'rectangle';\n\n    /**\n     * The X coordinate of the upper-left corner of the rectangle\n     * @default 0\n     */\n    public x: number;\n\n    /**\n     * The Y coordinate of the upper-left corner of the rectangle\n     * @default 0\n     */\n    public y: number;\n\n    /**\n     * The overall width of this rectangle\n     *  @default 0\n     */\n    public width: number;\n\n    /**\n     * The overall height of this rectangle\n     * @default 0\n     */\n    public height: number;\n\n    /**\n     * @param x - The X coordinate of the upper-left corner of the rectangle\n     * @param y - The Y coordinate of the upper-left corner of the rectangle\n     * @param width - The overall width of the rectangle\n     * @param height - The overall height of the rectangle\n     */\n    constructor(x: string | number = 0, y: string | number = 0, width: string | number = 0, height: string | number = 0)\n    {\n        this.x = Number(x);\n        this.y = Number(y);\n        this.width = Number(width);\n        this.height = Number(height);\n    }\n\n    /** Returns the left edge of the rectangle. */\n    get left(): number\n    {\n        return this.x;\n    }\n\n    /** Returns the right edge of the rectangle. */\n    get right(): number\n    {\n        return this.x + this.width;\n    }\n\n    /** Returns the top edge of the rectangle. */\n    get top(): number\n    {\n        return this.y;\n    }\n\n    /** Returns the bottom edge of the rectangle. */\n    get bottom(): number\n    {\n        return this.y + this.height;\n    }\n\n    /** Determines whether the Rectangle is empty. */\n    public isEmpty(): boolean\n    {\n        return this.left === this.right || this.top === this.bottom;\n    }\n\n    /** A constant empty rectangle. This is a new object every time the property is accessed */\n    static get EMPTY(): Rectangle\n    {\n        return new Rectangle(0, 0, 0, 0);\n    }\n\n    /**\n     * Creates a clone of this Rectangle\n     * @returns a copy of the rectangle\n     */\n    public clone(): Rectangle\n    {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n\n    /**\n     * Converts a Bounds object to a Rectangle object.\n     * @param bounds - The bounds to copy and convert to a rectangle.\n     * @returns Returns itself.\n     */\n    public copyFromBounds(bounds: Bounds): this\n    {\n        this.x = bounds.minX;\n        this.y = bounds.minY;\n        this.width = bounds.maxX - bounds.minX;\n        this.height = bounds.maxY - bounds.minY;\n\n        return this;\n    }\n\n    /**\n     * Copies another rectangle to this one.\n     * @param rectangle - The rectangle to copy from.\n     * @returns Returns itself.\n     */\n    public copyFrom(rectangle: Rectangle): Rectangle\n    {\n        this.x = rectangle.x;\n        this.y = rectangle.y;\n        this.width = rectangle.width;\n        this.height = rectangle.height;\n\n        return this;\n    }\n\n    /**\n     * Copies this rectangle to another one.\n     * @param rectangle - The rectangle to copy to.\n     * @returns Returns given parameter.\n     */\n    public copyTo(rectangle: Rectangle): Rectangle\n    {\n        rectangle.copyFrom(this);\n\n        return rectangle;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this Rectangle\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @returns Whether the x/y coordinates are within this Rectangle\n     */\n    public contains(x: number, y: number): boolean\n    {\n        if (this.width <= 0 || this.height <= 0)\n        {\n            return false;\n        }\n\n        if (x >= this.x && x < this.x + this.width)\n        {\n            if (y >= this.y && y < this.y + this.height)\n            {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether the x and y coordinates given are contained within this rectangle including the stroke.\n     * @param x - The X coordinate of the point to test\n     * @param y - The Y coordinate of the point to test\n     * @param strokeWidth - The width of the line to check\n     * @returns Whether the x/y coordinates are within this rectangle\n     */\n    public strokeContains(x: number, y: number, strokeWidth: number): boolean\n    {\n        const { width, height } = this;\n\n        if (width <= 0 || height <= 0) return false;\n\n        const _x = this.x;\n        const _y = this.y;\n\n        const outerLeft = _x - (strokeWidth / 2);\n        const outerRight = _x + width + (strokeWidth / 2);\n        const outerTop = _y - (strokeWidth / 2);\n        const outerBottom = _y + height + (strokeWidth / 2);\n        const innerLeft = _x + (strokeWidth / 2);\n        const innerRight = _x + width - (strokeWidth / 2);\n        const innerTop = _y + (strokeWidth / 2);\n        const innerBottom = _y + height - (strokeWidth / 2);\n\n        return (x >= outerLeft && x <= outerRight && y >= outerTop && y <= outerBottom)\n        && !(x > innerLeft && x < innerRight && y > innerTop && y < innerBottom);\n    }\n    /**\n     * Determines whether the `other` Rectangle transformed by `transform` intersects with `this` Rectangle object.\n     * Returns true only if the area of the intersection is >0, this means that Rectangles\n     * sharing a side are not overlapping. Another side effect is that an arealess rectangle\n     * (width or height equal to zero) can't intersect any other rectangle.\n     * @param {Rectangle} other - The Rectangle to intersect with `this`.\n     * @param {Matrix} transform - The transformation matrix of `other`.\n     * @returns {boolean} A value of `true` if the transformed `other` Rectangle intersects with `this`; otherwise `false`.\n     */\n    public intersects(other: Rectangle, transform?: Matrix): boolean\n    {\n        if (!transform)\n        {\n            const x0 = this.x < other.x ? other.x : this.x;\n            const x1 = this.right > other.right ? other.right : this.right;\n\n            if (x1 <= x0)\n            {\n                return false;\n            }\n\n            const y0 = this.y < other.y ? other.y : this.y;\n            const y1 = this.bottom > other.bottom ? other.bottom : this.bottom;\n\n            return y1 > y0;\n        }\n\n        const x0 = this.left;\n        const x1 = this.right;\n        const y0 = this.top;\n        const y1 = this.bottom;\n\n        if (x1 <= x0 || y1 <= y0)\n        {\n            return false;\n        }\n\n        const lt = tempPoints[0].set(other.left, other.top);\n        const lb = tempPoints[1].set(other.left, other.bottom);\n        const rt = tempPoints[2].set(other.right, other.top);\n        const rb = tempPoints[3].set(other.right, other.bottom);\n\n        if (rt.x <= lt.x || lb.y <= lt.y)\n        {\n            return false;\n        }\n\n        const s = Math.sign((transform.a * transform.d) - (transform.b * transform.c));\n\n        if (s === 0)\n        {\n            return false;\n        }\n\n        transform.apply(lt, lt);\n        transform.apply(lb, lb);\n        transform.apply(rt, rt);\n        transform.apply(rb, rb);\n\n        if (Math.max(lt.x, lb.x, rt.x, rb.x) <= x0\n            || Math.min(lt.x, lb.x, rt.x, rb.x) >= x1\n            || Math.max(lt.y, lb.y, rt.y, rb.y) <= y0\n            || Math.min(lt.y, lb.y, rt.y, rb.y) >= y1)\n        {\n            return false;\n        }\n\n        const nx = s * (lb.y - lt.y);\n        const ny = s * (lt.x - lb.x);\n        const n00 = (nx * x0) + (ny * y0);\n        const n10 = (nx * x1) + (ny * y0);\n        const n01 = (nx * x0) + (ny * y1);\n        const n11 = (nx * x1) + (ny * y1);\n\n        if (Math.max(n00, n10, n01, n11) <= (nx * lt.x) + (ny * lt.y)\n            || Math.min(n00, n10, n01, n11) >= (nx * rb.x) + (ny * rb.y))\n        {\n            return false;\n        }\n\n        const mx = s * (lt.y - rt.y);\n        const my = s * (rt.x - lt.x);\n        const m00 = (mx * x0) + (my * y0);\n        const m10 = (mx * x1) + (my * y0);\n        const m01 = (mx * x0) + (my * y1);\n        const m11 = (mx * x1) + (my * y1);\n\n        if (Math.max(m00, m10, m01, m11) <= (mx * lt.x) + (my * lt.y)\n            || Math.min(m00, m10, m01, m11) >= (mx * rb.x) + (my * rb.y))\n        {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Pads the rectangle making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     * @param paddingX - The horizontal padding amount.\n     * @param paddingY - The vertical padding amount.\n     * @returns Returns itself.\n     */\n    public pad(paddingX = 0, paddingY = paddingX): this\n    {\n        this.x -= paddingX;\n        this.y -= paddingY;\n\n        this.width += paddingX * 2;\n        this.height += paddingY * 2;\n\n        return this;\n    }\n\n    /**\n     * Fits this rectangle around the passed one.\n     * @param rectangle - The rectangle to fit.\n     * @returns Returns itself.\n     */\n    public fit(rectangle: Rectangle): this\n    {\n        const x1 = Math.max(this.x, rectangle.x);\n        const x2 = Math.min(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.max(this.y, rectangle.y);\n        const y2 = Math.min(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = Math.max(x2 - x1, 0);\n        this.y = y1;\n        this.height = Math.max(y2 - y1, 0);\n\n        return this;\n    }\n\n    /**\n     * Enlarges rectangle that way its corners lie on grid\n     * @param resolution - resolution\n     * @param eps - precision\n     * @returns Returns itself.\n     */\n    public ceil(resolution = 1, eps = 0.001): this\n    {\n        const x2 = Math.ceil((this.x + this.width - eps) * resolution) / resolution;\n        const y2 = Math.ceil((this.y + this.height - eps) * resolution) / resolution;\n\n        this.x = Math.floor((this.x + eps) * resolution) / resolution;\n        this.y = Math.floor((this.y + eps) * resolution) / resolution;\n\n        this.width = x2 - this.x;\n        this.height = y2 - this.y;\n\n        return this;\n    }\n\n    /**\n     * Enlarges this rectangle to include the passed rectangle.\n     * @param rectangle - The rectangle to include.\n     * @returns Returns itself.\n     */\n    public enlarge(rectangle: Rectangle): this\n    {\n        const x1 = Math.min(this.x, rectangle.x);\n        const x2 = Math.max(this.x + this.width, rectangle.x + rectangle.width);\n        const y1 = Math.min(this.y, rectangle.y);\n        const y2 = Math.max(this.y + this.height, rectangle.y + rectangle.height);\n\n        this.x = x1;\n        this.width = x2 - x1;\n        this.y = y1;\n        this.height = y2 - y1;\n\n        return this;\n    }\n\n    /**\n     * Returns the framing rectangle of the rectangle as a Rectangle object\n     * @param out - optional rectangle to store the result\n     * @returns The framing rectangle\n     */\n    public getBounds(out?: Rectangle): Rectangle\n    {\n        out ||= new Rectangle();\n        out.copyFrom(this);\n\n        return out;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js/math:Rectangle x=${this.x} y=${this.y} width=${this.width} height=${this.height}]`;\n    }\n    // #endif\n}\n"],"names":["x0","x1","y0","y1"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5557, "column": 0}, "map": {"version":3,"file":"transformVertices.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/transformVertices.ts"],"sourcesContent":["import type { Matrix } from '../../../../../maths/matrix/Matrix';\n\n/**\n * Transforms the vertices in an array with the given matrix.\n * @param vertices - the vertices to transform\n * @param m - the matrix to apply to the vertices\n * @param offset - the offset of the vertices (defaults to 0)\n * @param stride - the stride of the vertices (defaults to 2)\n * @param size - the size of the vertices (defaults to vertices.length / stride - offset)\n * @memberof rendering\n */\nexport function transformVertices(vertices: number[], m: Matrix, offset?: number, stride?: number, size?: number)\n{\n    const a = m.a;\n    const b = m.b;\n    const c = m.c;\n    const d = m.d;\n    const tx = m.tx;\n    const ty = m.ty;\n\n    offset ||= 0;\n    stride ||= 2;\n    size ||= (vertices.length / stride) - offset;\n\n    let index = offset * stride;\n\n    for (let i = 0; i < size; i++)\n    {\n        const x = vertices[index];\n        const y = vertices[index + 1];\n\n        vertices[index] = (a * x) + (c * y) + tx;\n        vertices[index + 1] = (b * x) + (d * y) + ty;\n\n        index += stride;\n    }\n}\n"],"names":[],"mappings":";;;;AAWO,SAAS,iBAAkB,CAAA,QAAA,EAAoB,CAAW,EAAA,MAAA,EAAiB,MAAA,EAAiB,IACnG,EAAA;IACI,MAAM,IAAI,CAAE,CAAA,CAAA,CAAA;IACZ,MAAM,IAAI,CAAE,CAAA,CAAA,CAAA;IACZ,MAAM,IAAI,CAAE,CAAA,CAAA,CAAA;IACZ,MAAM,IAAI,CAAE,CAAA,CAAA,CAAA;IACZ,MAAM,KAAK,CAAE,CAAA,EAAA,CAAA;IACb,MAAM,KAAK,CAAE,CAAA,EAAA,CAAA;IAEF,MAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;IACA,MAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;IACD,IAAA,IAAA,CAAA,IAAA,GAAA,QAAA,CAAS,MAAA,GAAS,MAAU,GAAA,MAAA,CAAA,CAAA;IAEtC,IAAI,QAAQ,MAAS,GAAA,MAAA,CAAA;IAErB,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,IAAA,EAAM,CAC1B,EAAA,CAAA;QACU,MAAA,CAAA,GAAI,QAAA,CAAS,KAAK,CAAA,CAAA;QAClB,MAAA,CAAA,GAAI,QAAS,CAAA,KAAA,GAAQ,CAAC,CAAA,CAAA;QAE5B,QAAA,CAAS,KAAK,CAAA,GAAK,CAAI,GAAA,CAAA,GAAM,IAAI,CAAK,GAAA,EAAA,CAAA;QACtC,QAAA,CAAS,QAAQ,CAAC,CAAA,GAAK,CAAI,GAAA,CAAA,GAAM,IAAI,CAAK,GAAA,EAAA,CAAA;QAEjC,KAAA,IAAA,MAAA,CAAA;IAAA,CACb;AACJ","ignoreList":[0]}},
    {"offset": {"line": 5582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5588, "column": 0}, "map": {"version":3,"file":"PoolGroup.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/pool/PoolGroup.ts"],"sourcesContent":["import { Pool } from './Pool';\n\nimport type { PoolItem, PoolItemConstructor } from './Pool';\n\n/**\n * A type alias for a constructor of a Pool.\n * @template T The type of items in the pool. Must extend PoolItem.\n * @memberof utils\n */\nexport type PoolConstructor<T extends PoolItem> = new () => Pool<T>;\n\n/**\n * A group of pools that can be used to store objects of different types.\n * @memberof utils\n */\nexport class PoolGroupClass\n{\n    /**\n     * A map to store the pools by their class type.\n     * @private\n     */\n    private readonly _poolsByClass: Map<PoolItemConstructor<PoolItem>, Pool<PoolItem>> = new Map();\n\n    /**\n     * Prepopulates a specific pool with a given number of items.\n     * @template T The type of items in the pool. Must extend PoolItem.\n     * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n     * @param {number} total - The number of items to add to the pool.\n     */\n    public prepopulate<T extends PoolItem>(Class: PoolItemConstructor<T>, total: number): void\n    {\n        const classPool = this.getPool(Class);\n\n        classPool.prepopulate(total);\n    }\n\n    /**\n     * Gets an item from a specific pool.\n     * @template T The type of items in the pool. Must extend PoolItem.\n     * @param {PoolItemConstructor<T>} Class - The constructor of the items in the pool.\n     * @param {unknown} [data] - Optional data to pass to the item's constructor.\n     * @returns {T} The item from the pool.\n     */\n    public get<T extends PoolItem>(Class: PoolItemConstructor<T>, data?: unknown): T\n    {\n        const pool = this.getPool(Class);\n\n        return pool.get(data) as T;\n    }\n\n    /**\n     * Returns an item to its respective pool.\n     * @param {PoolItem} item - The item to return to the pool.\n     */\n    public return(item: PoolItem): void\n    {\n        const pool = this.getPool(item.constructor as PoolItemConstructor<PoolItem>);\n\n        pool.return(item);\n    }\n\n    /**\n     * Gets a specific pool based on the class type.\n     * @template T The type of items in the pool. Must extend PoolItem.\n     * @param {PoolItemConstructor<T>} ClassType - The constructor of the items in the pool.\n     * @returns {Pool<T>} The pool of the given class type.\n     */\n    public getPool<T extends PoolItem>(ClassType: PoolItemConstructor<T>): Pool<T>\n    {\n        if (!this._poolsByClass.has(ClassType))\n        {\n            this._poolsByClass.set(ClassType, new Pool(ClassType));\n        }\n\n        return this._poolsByClass.get(ClassType) as Pool<T>;\n    }\n\n    /** gets the usage stats of each pool in the system */\n    public stats(): Record<string, {free: number; used: number; size: number}>\n    {\n        const stats = {} as Record<string, {free: number; used: number; size: number}>;\n\n        this._poolsByClass.forEach((pool) =>\n        {\n            // TODO: maybe we should allow the name to be set when `createEntity` is called\n            const name = stats[pool._classType.name]\n                ? pool._classType.name + (pool._classType as any).ID : pool._classType.name;\n\n            stats[name] = {\n                free: pool.totalFree,\n                used: pool.totalUsed,\n                size: pool.totalSize,\n            };\n        });\n\n        return stats;\n    }\n}\n\nexport const BigPool = new PoolGroupClass();\n"],"names":[],"mappings":";;;;;;;AAeO,MAAM,cACb,CAAA;IADO,WAAA,EAAA;QAMH;;;KAAA,GAAiB,IAAA,CAAA,aAAA,GAAA,aAAA,GAAA,IAAwE,GAAI,EAAA,CAAA;IAAA,CAAA;IAAA;;;;;GAAA,GAQtF,WAAA,CAAgC,KAAA,EAA+B,KACtE,EAAA;QACU,MAAA,SAAA,GAAY,IAAK,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;QAEpC,SAAA,CAAU,WAAA,CAAY,KAAK,CAAA,CAAA;IAAA,CAC/B;IAAA;;;;;;GAAA,GASO,GAAA,CAAwB,KAAA,EAA+B,IAC9D,EAAA;QACU,MAAA,IAAA,GAAO,IAAK,CAAA,OAAA,CAAQ,KAAK,CAAA,CAAA;QAExB,OAAA,IAAA,CAAK,GAAA,CAAI,IAAI,CAAA,CAAA;IAAA,CACxB;IAAA;;;GAAA,GAMO,OAAO,IACd,EAAA;QACI,MAAM,IAAO,GAAA,IAAA,CAAK,OAAQ,CAAA,IAAA,CAAK,WAA4C,CAAA,CAAA;QAE3E,IAAA,CAAK,MAAA,CAAO,IAAI,CAAA,CAAA;IAAA,CACpB;IAAA;;;;;GAAA,GAQO,QAA4B,SACnC,EAAA;QACI,IAAI,CAAC,IAAA,CAAK,aAAc,CAAA,GAAA,CAAI,SAAS,CACrC,EAAA;YACI,IAAA,CAAK,aAAA,CAAc,GAAI,CAAA,SAAA,EAAW,mKAAI,OAAA,CAAK,SAAS,CAAC,CAAA,CAAA;QAAA,CACzD;QAEO,OAAA,IAAA,CAAK,aAAc,CAAA,GAAA,CAAI,SAAS,CAAA,CAAA;IAAA,CAC3C;IAAA,oDAAA,GAGO,KACP,GAAA;QACI,MAAM,QAAQ,CAAA,CAAC,CAAA;QAEV,IAAA,CAAA,aAAA,CAAc,OAAQ,CAAA,CAAC,IAC5B,KAAA;YAEI,MAAM,IAAO,GAAA,KAAA,CAAM,IAAK,CAAA,UAAA,CAAW,IAAI,CAAA,GACjC,IAAK,CAAA,UAAA,CAAW,IAAQ,GAAA,IAAA,CAAK,UAAmB,CAAA,EAAA,GAAK,KAAK,UAAW,CAAA,IAAA,CAAA;YAE3E,KAAA,CAAM,IAAI,CAAI,GAAA;gBACV,MAAM,IAAK,CAAA,SAAA;gBACX,MAAM,IAAK,CAAA,SAAA;gBACX,MAAM,IAAK,CAAA,SAAA;YAAA,CACf,CAAA;QAAA,CACH,CAAA,CAAA;QAEM,OAAA,KAAA,CAAA;IAAA,CACX;AACJ,CAAA;AAEa,MAAA,OAAA,GAAU,IAAI,cAAe","ignoreList":[0]}},
    {"offset": {"line": 5655, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5661, "column": 0}, "map": {"version":3,"file":"Matrix.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/maths/matrix/Matrix.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { PI_2 } from '../misc/const';\nimport { Point } from '../point/Point';\n\nimport type { PointData } from '../point/PointData';\n\ninterface TransformableObject\n{\n    position: PointData;\n    scale: PointData;\n    pivot: PointData;\n    skew: PointData;\n    rotation: number;\n}\n\n/**\n * A fast matrix for 2D transformations.\n * ```js\n * | a | c | tx|\n * | b | d | ty|\n * | 0 | 0 | 1 |\n * ```\n * @memberof maths\n */\nexport class Matrix\n{\n    /** @default 1 */\n    public a: number;\n\n    /** @default 0 */\n    public b: number;\n\n    /** @default 0 */\n    public c: number;\n\n    /** @default 1 */\n    public d: number;\n\n    /** @default 0 */\n    public tx: number;\n\n    /** @default 0 */\n    public ty: number;\n\n    /** An array of the current matrix. Only populated when `toArray` is called */\n    public array: Float32Array | null = null;\n\n    /**\n     * @param a - x scale\n     * @param b - y skew\n     * @param c - x skew\n     * @param d - y scale\n     * @param tx - x translation\n     * @param ty - y translation\n     */\n    constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0)\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n    }\n\n    /**\n     * Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:\n     *\n     * a = array[0]\n     * b = array[1]\n     * c = array[3]\n     * d = array[4]\n     * tx = array[2]\n     * ty = array[5]\n     * @param array - The array that the matrix will be populated from.\n     */\n    public fromArray(array: number[]): void\n    {\n        this.a = array[0];\n        this.b = array[1];\n        this.c = array[3];\n        this.d = array[4];\n        this.tx = array[2];\n        this.ty = array[5];\n    }\n\n    /**\n     * Sets the matrix properties.\n     * @param a - Matrix component\n     * @param b - Matrix component\n     * @param c - Matrix component\n     * @param d - Matrix component\n     * @param tx - Matrix component\n     * @param ty - Matrix component\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public set(a: number, b: number, c: number, d: number, tx: number, ty: number): this\n    {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n        this.tx = tx;\n        this.ty = ty;\n\n        return this;\n    }\n\n    /**\n     * Creates an array from the current Matrix object.\n     * @param transpose - Whether we need to transpose the matrix or not\n     * @param [out=new Float32Array(9)] - If provided the array will be assigned to out\n     * @returns The newly created array which contains the matrix\n     */\n    public toArray(transpose?: boolean, out?: Float32Array): Float32Array\n    {\n        if (!this.array)\n        {\n            this.array = new Float32Array(9);\n        }\n\n        const array = out || this.array;\n\n        if (transpose)\n        {\n            array[0] = this.a;\n            array[1] = this.b;\n            array[2] = 0;\n            array[3] = this.c;\n            array[4] = this.d;\n            array[5] = 0;\n            array[6] = this.tx;\n            array[7] = this.ty;\n            array[8] = 1;\n        }\n        else\n        {\n            array[0] = this.a;\n            array[1] = this.c;\n            array[2] = this.tx;\n            array[3] = this.b;\n            array[4] = this.d;\n            array[5] = this.ty;\n            array[6] = 0;\n            array[7] = 0;\n            array[8] = 1;\n        }\n\n        return array;\n    }\n\n    /**\n     * Get a new position with the current transformation applied.\n     * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n     * @param pos - The origin\n     * @param {Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @returns {Point} The new point, transformed through this matrix\n     */\n    public apply<P extends PointData = Point>(pos: PointData, newPos?: P): P\n    {\n        newPos = (newPos || new Point()) as P;\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (this.a * x) + (this.c * y) + this.tx;\n        newPos.y = (this.b * x) + (this.d * y) + this.ty;\n\n        return newPos;\n    }\n\n    /**\n     * Get a new position with the inverse of the current transformation applied.\n     * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n     * @param pos - The origin\n     * @param {Point} [newPos] - The point that the new position is assigned to (allowed to be same as input)\n     * @returns {Point} The new point, inverse-transformed through this matrix\n     */\n    public applyInverse<P extends PointData = Point>(pos: PointData, newPos?: P): P\n    {\n        newPos = (newPos || new Point()) as P;\n\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n        const tx = this.tx;\n        const ty = this.ty;\n\n        const id = 1 / ((a * d) + (c * -b));\n\n        const x = pos.x;\n        const y = pos.y;\n\n        newPos.x = (d * id * x) + (-c * id * y) + (((ty * c) - (tx * d)) * id);\n        newPos.y = (a * id * y) + (-b * id * x) + (((-ty * a) + (tx * b)) * id);\n\n        return newPos;\n    }\n\n    /**\n     * Translates the matrix on the x and y.\n     * @param x - How much to translate x by\n     * @param y - How much to translate y by\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public translate(x: number, y: number): this\n    {\n        this.tx += x;\n        this.ty += y;\n\n        return this;\n    }\n\n    /**\n     * Applies a scale transformation to the matrix.\n     * @param x - The amount to scale horizontally\n     * @param y - The amount to scale vertically\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public scale(x: number, y: number): this\n    {\n        this.a *= x;\n        this.d *= y;\n        this.c *= x;\n        this.b *= y;\n        this.tx *= x;\n        this.ty *= y;\n\n        return this;\n    }\n\n    /**\n     * Applies a rotation transformation to the matrix.\n     * @param angle - The angle in radians.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public rotate(angle: number): this\n    {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n\n        const a1 = this.a;\n        const c1 = this.c;\n        const tx1 = this.tx;\n\n        this.a = (a1 * cos) - (this.b * sin);\n        this.b = (a1 * sin) + (this.b * cos);\n        this.c = (c1 * cos) - (this.d * sin);\n        this.d = (c1 * sin) + (this.d * cos);\n        this.tx = (tx1 * cos) - (this.ty * sin);\n        this.ty = (tx1 * sin) + (this.ty * cos);\n\n        return this;\n    }\n\n    /**\n     * Appends the given Matrix to this Matrix.\n     * @param matrix - The matrix to append.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public append(matrix: Matrix): this\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n\n        this.a = (matrix.a * a1) + (matrix.b * c1);\n        this.b = (matrix.a * b1) + (matrix.b * d1);\n        this.c = (matrix.c * a1) + (matrix.d * c1);\n        this.d = (matrix.c * b1) + (matrix.d * d1);\n\n        this.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n        this.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\n        return this;\n    }\n\n    /**\n     * Appends two matrix's and sets the result to this matrix. AB = A * B\n     * @param a - The matrix to append.\n     * @param b - The matrix to append.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public appendFrom(a: Matrix, b: Matrix): this\n    {\n        const a1 = a.a;\n        const b1 = a.b;\n        const c1 = a.c;\n        const d1 = a.d;\n        const tx = a.tx;\n        const ty = a.ty;\n\n        const a2 = b.a;\n        const b2 = b.b;\n        const c2 = b.c;\n        const d2 = b.d;\n\n        this.a = (a1 * a2) + (b1 * c2);\n        this.b = (a1 * b2) + (b1 * d2);\n        this.c = (c1 * a2) + (d1 * c2);\n        this.d = (c1 * b2) + (d1 * d2);\n        this.tx = (tx * a2) + (ty * c2) + b.tx;\n        this.ty = (tx * b2) + (ty * d2) + b.ty;\n\n        return this;\n    }\n\n    /**\n     * Sets the matrix based on all the available properties\n     * @param x - Position on the x axis\n     * @param y - Position on the y axis\n     * @param pivotX - Pivot on the x axis\n     * @param pivotY - Pivot on the y axis\n     * @param scaleX - Scale on the x axis\n     * @param scaleY - Scale on the y axis\n     * @param rotation - Rotation in radians\n     * @param skewX - Skew on the x axis\n     * @param skewY - Skew on the y axis\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public setTransform(x: number, y: number, pivotX: number, pivotY: number, scaleX: number,\n        scaleY: number, rotation: number, skewX: number, skewY: number): this\n    {\n        this.a = Math.cos(rotation + skewY) * scaleX;\n        this.b = Math.sin(rotation + skewY) * scaleX;\n        this.c = -Math.sin(rotation - skewX) * scaleY;\n        this.d = Math.cos(rotation - skewX) * scaleY;\n\n        this.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n        this.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\n        return this;\n    }\n\n    /**\n     * Prepends the given Matrix to this Matrix.\n     * @param matrix - The matrix to prepend\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public prepend(matrix: Matrix): this\n    {\n        const tx1 = this.tx;\n\n        if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1)\n        {\n            const a1 = this.a;\n            const c1 = this.c;\n\n            this.a = (a1 * matrix.a) + (this.b * matrix.c);\n            this.b = (a1 * matrix.b) + (this.b * matrix.d);\n            this.c = (c1 * matrix.a) + (this.d * matrix.c);\n            this.d = (c1 * matrix.b) + (this.d * matrix.d);\n        }\n\n        this.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n        this.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.\n     * @param transform - The transform to apply the properties to.\n     * @returns The transform with the newly applied properties\n     */\n    public decompose(transform: TransformableObject): TransformableObject\n    {\n        // sort out rotation / skew..\n        const a = this.a;\n        const b = this.b;\n        const c = this.c;\n        const d = this.d;\n        const pivot = transform.pivot;\n\n        const skewX = -Math.atan2(-c, d);\n        const skewY = Math.atan2(b, a);\n\n        const delta = Math.abs(skewX + skewY);\n\n        if (delta < 0.00001 || Math.abs(PI_2 - delta) < 0.00001)\n        {\n            transform.rotation = skewY;\n            transform.skew.x = transform.skew.y = 0;\n        }\n        else\n        {\n            transform.rotation = 0;\n            transform.skew.x = skewX;\n            transform.skew.y = skewY;\n        }\n\n        // next set scale\n        transform.scale.x = Math.sqrt((a * a) + (b * b));\n        transform.scale.y = Math.sqrt((c * c) + (d * d));\n\n        // next set position\n        transform.position.x = this.tx + ((pivot.x * a) + (pivot.y * c));\n        transform.position.y = this.ty + ((pivot.x * b) + (pivot.y * d));\n\n        return transform;\n    }\n\n    /**\n     * Inverts this matrix\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public invert(): this\n    {\n        const a1 = this.a;\n        const b1 = this.b;\n        const c1 = this.c;\n        const d1 = this.d;\n        const tx1 = this.tx;\n        const n = (a1 * d1) - (b1 * c1);\n\n        this.a = d1 / n;\n        this.b = -b1 / n;\n        this.c = -c1 / n;\n        this.d = a1 / n;\n        this.tx = ((c1 * this.ty) - (d1 * tx1)) / n;\n        this.ty = -((a1 * this.ty) - (b1 * tx1)) / n;\n\n        return this;\n    }\n\n    /** Checks if this matrix is an identity matrix */\n    public isIdentity(): boolean\n    {\n        return this.a === 1 && this.b === 0 && this.c === 0 && this.d === 1 && this.tx === 0 && this.ty === 0;\n    }\n\n    /**\n     * Resets this Matrix to an identity (default) matrix.\n     * @returns This matrix. Good for chaining method calls.\n     */\n    public identity(): this\n    {\n        this.a = 1;\n        this.b = 0;\n        this.c = 0;\n        this.d = 1;\n        this.tx = 0;\n        this.ty = 0;\n\n        return this;\n    }\n\n    /**\n     * Creates a new Matrix object with the same values as this one.\n     * @returns A copy of this matrix. Good for chaining method calls.\n     */\n    public clone(): Matrix\n    {\n        const matrix = new Matrix();\n\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the given matrix to be the same as the ones in this matrix\n     * @param matrix - The matrix to copy to.\n     * @returns The matrix given in parameter with its values updated.\n     */\n    public copyTo(matrix: Matrix): Matrix\n    {\n        matrix.a = this.a;\n        matrix.b = this.b;\n        matrix.c = this.c;\n        matrix.d = this.d;\n        matrix.tx = this.tx;\n        matrix.ty = this.ty;\n\n        return matrix;\n    }\n\n    /**\n     * Changes the values of the matrix to be the same as the ones in given matrix\n     * @param matrix - The matrix to copy from.\n     * @returns this\n     */\n    public copyFrom(matrix: Matrix): this\n    {\n        this.a = matrix.a;\n        this.b = matrix.b;\n        this.c = matrix.c;\n        this.d = matrix.d;\n        this.tx = matrix.tx;\n        this.ty = matrix.ty;\n\n        return this;\n    }\n\n    /**\n     * check to see if two matrices are the same\n     * @param matrix - The matrix to compare to.\n     */\n    public equals(matrix: Matrix)\n    {\n        return matrix.a === this.a && matrix.b === this.b\n            && matrix.c === this.c && matrix.d === this.d\n            && matrix.tx === this.tx && matrix.ty === this.ty;\n    }\n\n    // #if _DEBUG\n    public toString(): string\n    {\n        return `[pixi.js:Matrix a=${this.a} b=${this.b} c=${this.c} d=${this.d} tx=${this.tx} ty=${this.ty}]`;\n    }\n    // #endif\n\n    /**\n     * A default (identity) matrix.\n     *\n     * This is a shared object, if you want to modify it consider creating a new `Matrix`\n     * @readonly\n     */\n    static get IDENTITY(): Readonly<Matrix>\n    {\n        return identityMatrix.identity();\n    }\n\n    /**\n     * A static Matrix that can be used to avoid creating new objects.\n     * Will always ensure the matrix is reset to identity when requested.\n     * Use this object for fast but temporary calculations, as it may be mutated later on.\n     * This is a different object to the `IDENTITY` object and so can be modified without changing `IDENTITY`.\n     * @readonly\n     */\n    static get shared(): Matrix\n    {\n        return tempMatrix.identity();\n    }\n}\n\nconst tempMatrix = new Matrix();\nconst identityMatrix = new Matrix();\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6042, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6048, "column": 0}, "map": {"version":3,"file":"multiplyHexColors.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/utils/multiplyHexColors.ts"],"sourcesContent":["export function multiplyHexColors(color1: number, color2: number): number\n{\n    if (color1 === 0xFFFFFF || !color2) return color2;\n    if (color2 === 0xFFFFFF || !color1) return color1;\n\n    const r1 = (color1 >> 16) & 0xFF;\n    const g1 = (color1 >> 8) & 0xFF;\n    const b1 = color1 & 0xFF;\n\n    const r2 = (color2 >> 16) & 0xFF;\n    const g2 = (color2 >> 8) & 0xFF;\n    const b2 = color2 & 0xFF;\n\n    const r = ((r1 * r2) / 255) | 0;\n    const g = ((g1 * g2) / 255) | 0;\n    const b = ((b1 * b2) / 255) | 0;\n\n    return (r << 16) + (g << 8) + b;\n}\n"],"names":[],"mappings":";;;;AAAgB,SAAA,iBAAA,CAAkB,MAAA,EAAgB,MAClD,EAAA;IACQ,IAAA,MAAA,KAAW,YAAY,CAAC,MAAA,EAAe,OAAA,MAAA,CAAA;IACvC,IAAA,MAAA,KAAW,YAAY,CAAC,MAAA,EAAe,OAAA,MAAA,CAAA;IAErC,MAAA,EAAA,GAAM,UAAU,EAAM,GAAA,GAAA,CAAA;IACtB,MAAA,EAAA,GAAM,UAAU,CAAK,GAAA,GAAA,CAAA;IAC3B,MAAM,KAAK,MAAS,GAAA,GAAA,CAAA;IAEd,MAAA,EAAA,GAAM,UAAU,EAAM,GAAA,GAAA,CAAA;IACtB,MAAA,EAAA,GAAM,UAAU,CAAK,GAAA,GAAA,CAAA;IAC3B,MAAM,KAAK,MAAS,GAAA,GAAA,CAAA;IAEd,MAAA,CAAA,GAAM,EAAK,GAAA,EAAA,GAAM,GAAO,GAAA,CAAA,CAAA;IACxB,MAAA,CAAA,GAAM,EAAK,GAAA,EAAA,GAAM,GAAO,GAAA,CAAA,CAAA;IACxB,MAAA,CAAA,GAAM,EAAK,GAAA,EAAA,GAAM,GAAO,GAAA,CAAA,CAAA;IAEtB,OAAA,CAAA,CAAA,IAAK,EAAO,IAAA,CAAA,CAAA,IAAK,CAAK,CAAA,GAAA,CAAA,CAAA;AAClC","ignoreList":[0]}},
    {"offset": {"line": 6068, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6074, "column": 0}, "map": {"version":3,"file":"BatchableGraphics.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/BatchableGraphics.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { multiplyHexColors } from '../../container/utils/multiplyHexColors';\n\nimport type { Batch, Batcher } from '../../../rendering/batcher/shared/Batcher';\nimport type { DefaultBatchableMeshElement } from '../../../rendering/batcher/shared/DefaultBatcher';\nimport type { Topology } from '../../../rendering/renderers/shared/geometry/const';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { Graphics } from './Graphics';\n\nconst identityMatrix = new Matrix();\n/**\n * A batchable graphics object.\n * @ignore\n */\n\nexport class BatchableGraphics implements DefaultBatchableMeshElement\n{\n    public readonly packAsQuad = false;\n    public batcherName = 'default';\n\n    public texture: Texture;\n\n    public topology: Topology = 'triangle-list';\n    public renderable: Graphics;\n    public indexOffset: number;\n    public indexSize: number;\n    public attributeOffset: number;\n    public attributeSize: number;\n    public baseColor: number;\n    public alpha: number;\n    public applyTransform = true;\n    public roundPixels: 0 | 1 = 0;\n\n    public _indexStart: number;\n    public _textureId: number;\n    public _attributeStart: number;\n    public _batcher: Batcher = null;\n    public _batch: Batch = null;\n\n    public geometryData: { vertices: number[]; uvs: number[]; indices: number[]; };\n\n    get uvs()\n    {\n        return this.geometryData.uvs;\n    }\n\n    get positions()\n    {\n        return this.geometryData.vertices;\n    }\n\n    get indices()\n    {\n        return this.geometryData.indices;\n    }\n\n    get blendMode()\n    {\n        if (this.applyTransform)\n        {\n            return this.renderable.groupBlendMode;\n        }\n\n        return 'normal';\n    }\n    get color()\n    {\n        const rgb = this.baseColor;\n        const bgr = (rgb >> 16) | (rgb & 0xff00) | ((rgb & 0xff) << 16);\n        const renderable = this.renderable;\n\n        if (renderable)\n        {\n            return multiplyHexColors(bgr, renderable.groupColor)\n            + ((this.alpha * renderable.groupAlpha * 255) << 24);\n        }\n\n        return bgr + ((this.alpha * 255) << 24);\n    }\n\n    get transform()\n    {\n        return this.renderable?.groupTransform || identityMatrix;\n    }\n\n    public copyTo(gpuBuffer: BatchableGraphics)\n    {\n        gpuBuffer.indexOffset = this.indexOffset;\n        gpuBuffer.indexSize = this.indexSize;\n\n        gpuBuffer.attributeOffset = this.attributeOffset;\n        gpuBuffer.attributeSize = this.attributeSize;\n\n        gpuBuffer.baseColor = this.baseColor;\n        gpuBuffer.alpha = this.alpha;\n\n        gpuBuffer.texture = this.texture;\n        gpuBuffer.geometryData = this.geometryData;\n\n        gpuBuffer.topology = this.topology;\n    }\n\n    public reset()\n    {\n        this.applyTransform = true;\n        this.renderable = null;\n        this.topology = 'triangle-list';\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AASA,MAAM,cAAA,GAAiB,uKAAI,SAAO,EAAA,CAAA;AAM3B,MAAM,iBACb,CAAA;IADO,WAAA,EAAA;QAEH,IAAA,CAAgB,UAAa,GAAA,KAAA,CAAA;QAC7B,IAAA,CAAO,WAAc,GAAA,SAAA,CAAA;QAIrB,IAAA,CAAO,QAAqB,GAAA,eAAA,CAAA;QAQ5B,IAAA,CAAO,cAAiB,GAAA,IAAA,CAAA;QACxB,IAAA,CAAO,WAAqB,GAAA,CAAA,CAAA;QAK5B,IAAA,CAAO,QAAoB,GAAA,IAAA,CAAA;QAC3B,IAAA,CAAO,MAAgB,GAAA,IAAA,CAAA;IAAA,CAAA;IAIvB,IAAI,GACJ,GAAA;QACI,OAAO,IAAA,CAAK,YAAa,CAAA,GAAA,CAAA;IAAA,CAC7B;IAEA,IAAI,SACJ,GAAA;QACI,OAAO,IAAA,CAAK,YAAa,CAAA,QAAA,CAAA;IAAA,CAC7B;IAEA,IAAI,OACJ,GAAA;QACI,OAAO,IAAA,CAAK,YAAa,CAAA,OAAA,CAAA;IAAA,CAC7B;IAEA,IAAI,SACJ,GAAA;QACI,IAAI,IAAA,CAAK,cACT,EAAA;YACI,OAAO,IAAA,CAAK,UAAW,CAAA,cAAA,CAAA;QAAA,CAC3B;QAEO,OAAA,QAAA,CAAA;IAAA,CACX;IACA,IAAI,KACJ,GAAA;QACI,MAAM,MAAM,IAAK,CAAA,SAAA,CAAA;QACjB,MAAM,MAAO,GAAO,IAAA,EAAA,GAAO,GAAM,GAAA,KAAA,GAAA,CAAY,MAAM,GAAS,KAAA,EAAA,CAAA;QAC5D,MAAM,aAAa,IAAK,CAAA,UAAA,CAAA;QAExB,IAAI,UACJ,EAAA;YACW,qMAAA,oBAAA,EAAkB,KAAK,UAAW,CAAA,UAAU,IAAA,CAC/C,IAAK,CAAA,KAAA,GAAQ,UAAW,CAAA,UAAA,GAAa,GAAQ,IAAA,EAAA,CAAA,CAAA;QAAA,CACrD;QAEO,OAAA,GAAA,GAAA,CAAQ,IAAK,CAAA,KAAA,GAAQ,GAAQ,IAAA,EAAA,CAAA,CAAA;IAAA,CACxC;IAEA,IAAI,SACJ,GAAA;QACW,OAAA,IAAA,CAAK,UAAA,EAAY,cAAkB,IAAA,cAAA,CAAA;IAAA,CAC9C;IAEO,OAAO,SACd,EAAA;QACI,SAAA,CAAU,WAAA,GAAc,IAAK,CAAA,WAAA,CAAA;QAC7B,SAAA,CAAU,SAAA,GAAY,IAAK,CAAA,SAAA,CAAA;QAE3B,SAAA,CAAU,eAAA,GAAkB,IAAK,CAAA,eAAA,CAAA;QACjC,SAAA,CAAU,aAAA,GAAgB,IAAK,CAAA,aAAA,CAAA;QAE/B,SAAA,CAAU,SAAA,GAAY,IAAK,CAAA,SAAA,CAAA;QAC3B,SAAA,CAAU,KAAA,GAAQ,IAAK,CAAA,KAAA,CAAA;QAEvB,SAAA,CAAU,OAAA,GAAU,IAAK,CAAA,OAAA,CAAA;QACzB,SAAA,CAAU,YAAA,GAAe,IAAK,CAAA,YAAA,CAAA;QAE9B,SAAA,CAAU,QAAA,GAAW,IAAK,CAAA,QAAA,CAAA;IAAA,CAC9B;IAEO,KACP,GAAA;QACI,IAAA,CAAK,cAAiB,GAAA,IAAA,CAAA;QACtB,IAAA,CAAK,UAAa,GAAA,IAAA,CAAA;QAClB,IAAA,CAAK,QAAW,GAAA,eAAA,CAAA;IAAA,CACpB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 6139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6145, "column": 0}, "map": {"version":3,"file":"buildPixelLine.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildPixelLine.ts"],"sourcesContent":["import { closePointEps } from '../const';\n\n/**\n * Builds a line to draw using the polygon method.\n * @param points\n * @param closed\n * @param vertices\n * @param indices\n */\nexport function buildPixelLine(\n    points: number[],\n    closed: boolean,\n    vertices: number[],\n    indices: number[],\n): void\n{\n    const eps = closePointEps;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n\n    // get first and last point.. figure out the middle!\n\n    const fx = points[0];\n    const fy = points[1];\n\n    const lx = points[points.length - 2];\n\n    const ly = points[points.length - 1];\n\n    const closePath = closed || (Math.abs(fx - lx) < eps && Math.abs(fy - ly) < eps);\n\n    const verts = vertices;\n\n    const length = points.length / 2;\n    const indexStart = verts.length / 2;\n\n    for (let i = 0; i < length; i++)\n    {\n        verts.push(points[(i * 2)]);\n        verts.push(points[(i * 2) + 1]);\n    }\n\n    for (let i = 0; i < length - 1; i++)\n    {\n        indices.push(indexStart + i, indexStart + i + 1);\n    }\n\n    if (closePath)\n    {\n        indices.push(indexStart + length - 1, indexStart);\n    }\n}\n\n"],"names":[],"mappings":";;;;;;AASO,SAAS,cACZ,CAAA,MAAA,EACA,MACA,EAAA,QAAA,EACA,OAEJ,EAAA;IACI,MAAM,GAAM,iLAAA,gBAAA,CAAA;IAER,IAAA,MAAA,CAAO,MAAA,KAAW,CACtB,EAAA;QACI,OAAA;IAAA,CACJ;IAIM,MAAA,EAAA,GAAK,MAAA,CAAO,CAAC,CAAA,CAAA;IACb,MAAA,EAAA,GAAK,MAAA,CAAO,CAAC,CAAA,CAAA;IAEnB,MAAM,EAAK,GAAA,MAAA,CAAO,MAAO,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;IAEnC,MAAM,EAAK,GAAA,MAAA,CAAO,MAAO,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;IAEnC,MAAM,SAAY,GAAA,MAAA,IAAW,IAAK,CAAA,GAAA,CAAI,EAAK,GAAA,EAAE,CAAI,GAAA,GAAA,IAAO,IAAK,CAAA,GAAA,CAAI,EAAK,GAAA,EAAE,CAAI,GAAA,GAAA,CAAA;IAE5E,MAAM,KAAQ,GAAA,QAAA,CAAA;IAER,MAAA,MAAA,GAAS,OAAO,MAAS,GAAA,CAAA,CAAA;IACzB,MAAA,UAAA,GAAa,MAAM,MAAS,GAAA,CAAA,CAAA;IAElC,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,MAAA,EAAQ,CAC5B,EAAA,CAAA;QACI,KAAA,CAAM,IAAK,CAAA,MAAA,CAAQ,CAAI,GAAA,CAAE,CAAC,CAAA,CAAA;QAC1B,KAAA,CAAM,IAAK,CAAA,MAAA,CAAQ,CAAI,GAAA,CAAA,GAAK,CAAC,CAAC,CAAA,CAAA;IAAA,CAClC;IAEA,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,MAAA,GAAS,GAAG,CAChC,EAAA,CAAA;QACI,OAAA,CAAQ,IAAK,CAAA,UAAA,GAAa,CAAG,EAAA,UAAA,GAAa,IAAI,CAAC,CAAA,CAAA;IAAA,CACnD;IAEA,IAAI,SACJ,EAAA;QACI,OAAA,CAAQ,IAAK,CAAA,UAAA,GAAa,MAAS,GAAA,CAAA,EAAG,UAAU,CAAA,CAAA;IAAA,CACpD;AACJ","ignoreList":[0]}},
    {"offset": {"line": 6177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6183, "column": 0}, "map": {"version":3,"file":"const.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/const.ts"],"sourcesContent":["export type LineCap = 'butt' | 'round' | 'square';\nexport type LineJoin = 'round' | 'bevel' | 'miter';\n\nexport const closePointEps = 1e-4;\nexport const curveEps = 0.0001;\n"],"names":[],"mappings":";;;;;AAGO,MAAM,aAAgB,GAAA,KAAA;AACtB,MAAM,QAAW,GAAA","ignoreList":[0]}},
    {"offset": {"line": 6192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6198, "column": 0}, "map": {"version":3,"file":"getOrientationOfPoints.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/utils/getOrientationOfPoints.ts"],"sourcesContent":["export function getOrientationOfPoints(points: number[]): number\n{\n    const m = points.length;\n\n    if (m < 6)\n    {\n        return 1;\n    }\n\n    let area = 0;\n\n    for (let i = 0, x1 = points[m - 2], y1 = points[m - 1]; i < m; i += 2)\n    {\n        const x2 = points[i];\n        const y2 = points[i + 1];\n\n        area += (x2 - x1) * (y2 + y1);\n\n        x1 = x2;\n        y1 = y2;\n    }\n\n    if (area < 0)\n    {\n        return -1;\n    }\n\n    return 1;\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,uBAAuB,MACvC,EAAA;IACI,MAAM,IAAI,MAAO,CAAA,MAAA,CAAA;IAEjB,IAAI,IAAI,CACR,EAAA;QACW,OAAA,CAAA,CAAA;IAAA,CACX;IAEA,IAAI,IAAO,GAAA,CAAA,CAAA;IAEX,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,EAAK,GAAA,MAAA,CAAO,IAAI,CAAC,CAAA,EAAG,EAAK,GAAA,MAAA,CAAO,IAAI,CAAC,CAAA,EAAG,CAAI,GAAA,CAAA,EAAG,KAAK,CACpE,CAAA;QACU,MAAA,EAAA,GAAK,MAAA,CAAO,CAAC,CAAA,CAAA;QACb,MAAA,EAAA,GAAK,MAAO,CAAA,CAAA,GAAI,CAAC,CAAA,CAAA;QAEd,IAAA,IAAA,CAAA,EAAA,GAAK,EAAA,IAAA,CAAO,EAAK,GAAA,EAAA,CAAA,CAAA;QAErB,EAAA,GAAA,EAAA,CAAA;QACA,EAAA,GAAA,EAAA,CAAA;IAAA,CACT;IAEA,IAAI,OAAO,CACX,EAAA;QACW,OAAA,CAAA,CAAA,CAAA;IAAA,CACX;IAEO,OAAA,CAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 6222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6228, "column": 0}, "map": {"version":3,"file":"buildLine.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/buildCommands/buildLine.ts"],"sourcesContent":["import { Point } from '../../../../maths/point/Point';\nimport { closePointEps, curveEps } from '../const';\nimport { getOrientationOfPoints } from '../utils/getOrientationOfPoints';\n\nimport type { StrokeAttributes } from '../FillTypes';\n\n/**\n * Buffers vertices to draw a square cap.\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n * @param {number} x - X-coord of end point\n * @param {number} y - Y-coord of end point\n * @param {number} nx - X-coord of line normal pointing inside\n * @param {number} ny - Y-coord of line normal pointing inside\n * @param {number} innerWeight - Weight of inner points\n * @param {number} outerWeight - Weight of outer points\n * @param {boolean} clockwise - Whether the cap is drawn clockwise\n * @param {Array<number>} verts - vertex buffer\n * @returns {number} - no. of vertices pushed\n */\nfunction square(\n    x: number,\n    y: number,\n    nx: number,\n    ny: number,\n    innerWeight: number,\n    outerWeight: number,\n    clockwise: boolean, /* rotation for square (true at left end, false at right end) */\n    verts: Array<number>\n): number\n{\n    const ix = x - (nx * innerWeight);\n    const iy = y - (ny * innerWeight);\n    const ox = x + (nx * outerWeight);\n    const oy = y + (ny * outerWeight);\n\n    /* Rotate nx,ny for extension vector */\n    let exx; let\n        eyy;\n\n    if (clockwise)\n    {\n        exx = ny;\n        eyy = -nx;\n    }\n    else\n    {\n        exx = -ny;\n        eyy = nx;\n    }\n\n    /* [i|0]x,y extended at cap */\n    const eix = ix + exx;\n    const eiy = iy + eyy;\n    const eox = ox + exx;\n    const eoy = oy + eyy;\n\n    /* Square itself must be inserted clockwise*/\n    verts.push(eix, eiy);\n    verts.push(eox, eoy);\n\n    return 2;\n}\n\n/**\n * Buffers vertices to draw an arc at the line joint or cap.\n *\n * Ignored from docs since it is not directly exposed.\n * @ignore\n * @private\n * @param {number} cx - X-coord of center\n * @param {number} cy - Y-coord of center\n * @param {number} sx - X-coord of arc start\n * @param {number} sy - Y-coord of arc start\n * @param {number} ex - X-coord of arc end\n * @param {number} ey - Y-coord of arc end\n * @param {Array[]} verts - buffer of vertices\n * @param {boolean} clockwise - orientation of vertices\n * @returns {number} - no. of vertices pushed\n */\nfunction round(\n    cx: number,\n    cy: number,\n    sx: number,\n    sy: number,\n    ex: number,\n    ey: number,\n    verts: number[],\n    clockwise: boolean, /* if not cap, then clockwise is turn of joint, otherwise rotation from angle0 to angle1 */\n): number\n{\n    const cx2p0x = sx - cx;\n    const cy2p0y = sy - cy;\n\n    let angle0 = Math.atan2(cx2p0x, cy2p0y);\n    let angle1 = Math.atan2(ex - cx, ey - cy);\n\n    if (clockwise && angle0 < angle1)\n    {\n        angle0 += Math.PI * 2;\n    }\n    else if (!clockwise && angle0 > angle1)\n    {\n        angle1 += Math.PI * 2;\n    }\n\n    let startAngle = angle0;\n    const angleDiff = angle1 - angle0;\n    const absAngleDiff = Math.abs(angleDiff);\n\n    const radius = Math.sqrt((cx2p0x * cx2p0x) + (cy2p0y * cy2p0y));\n    const segCount = ((15 * absAngleDiff * Math.sqrt(radius) / Math.PI) >> 0) + 1;\n    const angleInc = angleDiff / segCount;\n\n    startAngle += angleInc;\n\n    if (clockwise)\n    {\n        verts.push(cx, cy);\n        verts.push(sx, sy);\n\n        for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc)\n        {\n            verts.push(cx, cy);\n            verts.push(cx + ((Math.sin(angle) * radius)),\n                cy + ((Math.cos(angle) * radius)));\n        }\n\n        verts.push(cx, cy);\n        verts.push(ex, ey);\n    }\n    else\n    {\n        verts.push(sx, sy);\n        verts.push(cx, cy);\n\n        for (let i = 1, angle = startAngle; i < segCount; i++, angle += angleInc)\n        {\n            verts.push(cx + ((Math.sin(angle) * radius)),\n                cy + ((Math.cos(angle) * radius)));\n            verts.push(cx, cy);\n        }\n\n        verts.push(ex, ey);\n        verts.push(cx, cy);\n    }\n\n    return segCount * 2;\n}\n\n/**\n * Builds a line to draw using the polygon method.\n * @param points\n * @param lineStyle\n * @param flipAlignment\n * @param closed\n * @param vertices\n * @param indices\n */\nexport function buildLine(\n    points: number[],\n    lineStyle: StrokeAttributes,\n    flipAlignment: boolean,\n    closed: boolean,\n    vertices: number[],\n    indices: number[],\n): void\n{\n    // const shape = graphicsData.shape as Polygon;\n    //   let points = graphicsData.points || shape.points.slice();\n    const eps = closePointEps;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n\n    const style = lineStyle;\n\n    let alignment = style.alignment;\n\n    if (lineStyle.alignment !== 0.5)\n    {\n        // rotate the points!\n        let orientation = getOrientationOfPoints(points);\n\n        if (flipAlignment)orientation *= -1;\n\n        alignment = ((alignment - 0.5) * orientation) + 0.5;\n    }\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    const lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n    const closedShape = closed;\n    const closedPath = Math.abs(firstPoint.x - lastPoint.x) < eps\n        && Math.abs(firstPoint.y - lastPoint.y) < eps;\n\n    // if the first point is the last point - gonna have issues :)\n    if (closedShape)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        if (closedPath)\n        {\n            points.pop();\n            points.pop();\n            lastPoint.set(points[points.length - 2], points[points.length - 1]);\n        }\n\n        const midPointX = (firstPoint.x + lastPoint.x) * 0.5;\n        const midPointY = (lastPoint.y + firstPoint.y) * 0.5;\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = vertices;\n\n    const length = points.length / 2;\n    let indexCount = points.length;\n    const indexStart = verts.length / 2;\n\n    // Max. inner and outer width\n    const width = style.width / 2;\n    const widthSquared = width * width;\n    const miterLimitSquared = style.miterLimit * style.miterLimit;\n\n    /* Line segments of interest where (x1,y1) forms the corner. */\n    let x0 = points[0];\n    let y0 = points[1];\n    let x1 = points[2];\n    let y1 = points[3];\n    let x2 = 0;\n    let y2 = 0;\n\n    /* perp[?](x|y) = the line normal with magnitude lineWidth. */\n    let perpX = -(y0 - y1);\n    let perpY = x0 - x1;\n    let perp1x = 0;\n    let perp1y = 0;\n\n    let dist = Math.sqrt((perpX * perpX) + (perpY * perpY));\n\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n\n    const ratio = alignment;// 0.5;\n    const innerWeight = (1 - ratio) * 2;\n    const outerWeight = ratio * 2;\n\n    if (!closedShape)\n    {\n        if (style.cap === 'round')\n        {\n            indexCount += round(\n                x0 - (perpX * (innerWeight - outerWeight) * 0.5),\n                y0 - (perpY * (innerWeight - outerWeight) * 0.5),\n                x0 - (perpX * innerWeight),\n                y0 - (perpY * innerWeight),\n                x0 + (perpX * outerWeight),\n                y0 + (perpY * outerWeight),\n                verts,\n                true,\n            ) + 2;\n        }\n        else if (style.cap === 'square')\n        {\n            indexCount += square(x0, y0, perpX, perpY, innerWeight, outerWeight, true, verts);\n        }\n    }\n\n    // Push first point (below & above vertices)\n    verts.push(\n        x0 - (perpX * innerWeight),\n        y0 - (perpY * innerWeight));\n    verts.push(\n        x0 + (perpX * outerWeight),\n        y0 + (perpY * outerWeight));\n\n    for (let i = 1; i < length - 1; ++i)\n    {\n        x0 = points[(i - 1) * 2];\n        y0 = points[((i - 1) * 2) + 1];\n\n        x1 = points[i * 2];\n        y1 = points[(i * 2) + 1];\n\n        x2 = points[(i + 1) * 2];\n        y2 = points[((i + 1) * 2) + 1];\n\n        perpX = -(y0 - y1);\n        perpY = x0 - x1;\n\n        dist = Math.sqrt((perpX * perpX) + (perpY * perpY));\n        perpX /= dist;\n        perpY /= dist;\n        perpX *= width;\n        perpY *= width;\n\n        perp1x = -(y1 - y2);\n        perp1y = x1 - x2;\n\n        dist = Math.sqrt((perp1x * perp1x) + (perp1y * perp1y));\n        perp1x /= dist;\n        perp1y /= dist;\n        perp1x *= width;\n        perp1y *= width;\n\n        /* d[x|y](0|1) = the component displacement between points p(0,1|1,2) */\n        const dx0 = x1 - x0;\n        const dy0 = y0 - y1;\n        const dx1 = x1 - x2;\n        const dy1 = y2 - y1;\n\n        /* +ve if internal angle < 90 degree, -ve if internal angle > 90 degree. */\n        const dot = (dx0 * dx1) + (dy0 * dy1);\n        /* +ve if internal angle counterclockwise, -ve if internal angle clockwise. */\n        const cross = (dy0 * dx1) - (dy1 * dx0);\n        const clockwise = (cross < 0);\n\n        /* Going nearly parallel? */\n        /* atan(0.001) ~= 0.001 rad ~= 0.057 degree */\n        if (Math.abs(cross) < 0.001 * Math.abs(dot))\n        {\n            verts.push(\n                x1 - (perpX * innerWeight),\n                y1 - (perpY * innerWeight));\n            verts.push(\n                x1 + (perpX * outerWeight),\n                y1 + (perpY * outerWeight));\n\n            /* 180 degree corner? */\n            if (dot >= 0)\n            {\n                if (style.join === 'round')\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpX * innerWeight), y1 - (perpY * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false) + 4;\n                }\n                else\n                {\n                    indexCount += 2;\n                }\n\n                verts.push(\n                    x1 - (perp1x * outerWeight),\n                    y1 - (perp1y * outerWeight));\n                verts.push(\n                    x1 + (perp1x * innerWeight),\n                    y1 + (perp1y * innerWeight));\n            }\n\n            continue;\n        }\n\n        /* p[x|y] is the miter point. pDist is the distance between miter point and p1. */\n        const c1 = ((-perpX + x0) * (-perpY + y1)) - ((-perpX + x1) * (-perpY + y0));\n        const c2 = ((-perp1x + x2) * (-perp1y + y1)) - ((-perp1x + x1) * (-perp1y + y2));\n        const px = ((dx0 * c2) - (dx1 * c1)) / cross;\n        const py = ((dy1 * c1) - (dy0 * c2)) / cross;\n        const pDist = ((px - x1) * (px - x1)) + ((py - y1) * (py - y1));\n\n        /* Inner miter point */\n        const imx = x1 + ((px - x1) * innerWeight);\n        const imy = y1 + ((py - y1) * innerWeight);\n        /* Outer miter point */\n        const omx = x1 - ((px - x1) * outerWeight);\n        const omy = y1 - ((py - y1) * outerWeight);\n\n        /* Is the inside miter point too far away, creating a spike? */\n        const smallerInsideSegmentSq = Math.min((dx0 * dx0) + (dy0 * dy0), (dx1 * dx1) + (dy1 * dy1));\n        const insideWeight = clockwise ? innerWeight : outerWeight;\n        const smallerInsideDiagonalSq = smallerInsideSegmentSq + (insideWeight * insideWeight * widthSquared);\n        const insideMiterOk = pDist <= smallerInsideDiagonalSq;\n\n        if (insideMiterOk)\n        {\n            if (style.join === 'bevel' || pDist / widthSquared > miterLimitSquared)\n            {\n                if (clockwise) /* rotating at inner angle */\n                {\n                    verts.push(imx, imy); // inner miter point\n                    verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight)); // first segment's outer vertex\n                    verts.push(imx, imy); // inner miter point\n                    verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight)); // second segment's outer vertex\n                }\n                else /* rotating at outer angle */\n                {\n                    verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight)); // first segment's inner vertex\n                    verts.push(omx, omy); // outer miter point\n                    verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight)); // second segment's outer vertex\n                    verts.push(omx, omy); // outer miter point\n                }\n\n                indexCount += 2;\n            }\n            else if (style.join === 'round')\n            {\n                if (clockwise) /* arc is outside */\n                {\n                    verts.push(imx, imy);\n                    verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight));\n\n                    indexCount += round(\n                        x1, y1,\n                        x1 + (perpX * outerWeight), y1 + (perpY * outerWeight),\n                        x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight),\n                        verts, true\n                    ) + 4;\n\n                    verts.push(imx, imy);\n                    verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight));\n                }\n                else /* arc is inside */\n                {\n                    verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight));\n                    verts.push(omx, omy);\n\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpX * innerWeight), y1 - (perpY * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false\n                    ) + 4;\n\n                    verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight));\n                    verts.push(omx, omy);\n                }\n            }\n            else\n            {\n                verts.push(imx, imy);\n                verts.push(omx, omy);\n            }\n        }\n        else // inside miter is NOT ok\n        {\n            verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight)); // first segment's inner vertex\n            verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight)); // first segment's outer vertex\n            if (style.join === 'round')\n            {\n                if (clockwise) /* arc is outside */\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 + (perpX * outerWeight), y1 + (perpY * outerWeight),\n                        x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight),\n                        verts, true\n                    ) + 2;\n                }\n                else /* arc is inside */\n                {\n                    indexCount += round(\n                        x1, y1,\n                        x1 - (perpX * innerWeight), y1 - (perpY * innerWeight),\n                        x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight),\n                        verts, false\n                    ) + 2;\n                }\n            }\n            else if (style.join === 'miter' && pDist / widthSquared <= miterLimitSquared)\n            {\n                if (clockwise)\n                {\n                    verts.push(omx, omy); // inner miter point\n                    verts.push(omx, omy); // inner miter point\n                }\n                else\n                {\n                    verts.push(imx, imy); // outer miter point\n                    verts.push(imx, imy); // outer miter point\n                }\n                indexCount += 2;\n            }\n            verts.push(x1 - (perp1x * innerWeight), y1 - (perp1y * innerWeight)); // second segment's inner vertex\n            verts.push(x1 + (perp1x * outerWeight), y1 + (perp1y * outerWeight)); // second segment's outer vertex\n            indexCount += 2;\n        }\n    }\n\n    x0 = points[(length - 2) * 2];\n    y0 = points[((length - 2) * 2) + 1];\n\n    x1 = points[(length - 1) * 2];\n    y1 = points[((length - 1) * 2) + 1];\n\n    perpX = -(y0 - y1);\n    perpY = x0 - x1;\n\n    dist = Math.sqrt((perpX * perpX) + (perpY * perpY));\n    perpX /= dist;\n    perpY /= dist;\n    perpX *= width;\n    perpY *= width;\n\n    verts.push(x1 - (perpX * innerWeight), y1 - (perpY * innerWeight));\n    verts.push(x1 + (perpX * outerWeight), y1 + (perpY * outerWeight));\n\n    if (!closedShape)\n    {\n        if (style.cap === 'round')\n        {\n            indexCount += round(\n                x1 - (perpX * (innerWeight - outerWeight) * 0.5),\n                y1 - (perpY * (innerWeight - outerWeight) * 0.5),\n                x1 - (perpX * innerWeight),\n                y1 - (perpY * innerWeight),\n                x1 + (perpX * outerWeight),\n                y1 + (perpY * outerWeight),\n                verts,\n                false\n            ) + 2;\n        }\n        else if (style.cap === 'square')\n        {\n            indexCount += square(x1, y1, perpX, perpY, innerWeight, outerWeight, false, verts);\n        }\n    }\n\n    // const indices = graphicsGeometry.indices;\n    const eps2 = curveEps * curveEps;\n\n    // indices.push(indexStart);\n    for (let i = indexStart; i < indexCount + indexStart - 2; ++i)\n    {\n        x0 = verts[(i * 2)];\n        y0 = verts[(i * 2) + 1];\n\n        x1 = verts[(i + 1) * 2];\n        y1 = verts[((i + 1) * 2) + 1];\n\n        x2 = verts[(i + 2) * 2];\n        y2 = verts[((i + 2) * 2) + 1];\n\n        /* Skip zero area triangles */\n        if (Math.abs((x0 * (y1 - y2)) + (x1 * (y2 - y0)) + (x2 * (y0 - y1))) < eps2)\n        {\n            continue;\n        }\n\n        indices.push(i, i + 1, i + 2);\n    }\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6507, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6522, "column": 0}, "map": {"version":3,"file":"uid.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/data/uid.ts"],"sourcesContent":["const uidCache: Record<string, number> = {\n    default: -1,\n};\n\ntype UIDNames =\n    | 'default'\n    | 'resource'\n    | 'texture'\n    | 'textureSource'\n    | 'textureResource'\n    | 'batcher' //\n    | 'graphicsContext' //\n    | 'graphicsView' //\n    | 'graphicsPath' //\n    | 'fillGradient' //\n    | 'fillPattern' //\n    | 'meshView' //\n    | 'renderable' //\n    | 'buffer' //\n    | 'bufferResource' //\n    | 'geometry'\n    | 'instructionSet' //\n    | 'renderTarget' //\n    | 'uniform' //\n    | 'spriteView' //\n    | 'textView' //\n    | 'tilingSpriteView'; // ;\n\n/**\n * Gets the next unique identifier\n * @param name - The name of the identifier.\n * @function uid\n * @returns {number} The next unique identifier to use.\n * @memberof utils\n */\nexport function uid(name: UIDNames = 'default'): number\n{\n    if (uidCache[name] === undefined)\n    {\n        uidCache[name] = -1;\n    }\n\n    return ++uidCache[name];\n}\n\n/** Resets the next unique identifier to 0. This is used for some tests, dont touch or things WILL explode :) */\nexport function resetUids(): void\n{\n    for (const key in uidCache)\n    {\n        delete uidCache[key];\n    }\n}\n"],"names":[],"mappings":";;;;;AAAA,MAAM,QAAmC,GAAA;IACrC,OAAS,EAAA,CAAA,CAAA;AACb,CAAA,CAAA;AAiCgB,SAAA,GAAA,CAAI,OAAiB,SACrC,EAAA;IACQ,IAAA,QAAA,CAAS,IAAI,CAAA,KAAM,KACvB,CAAA,EAAA;QACI,QAAA,CAAS,IAAI,CAAI,GAAA,CAAA,CAAA,CAAA;IAAA,CACrB;IAEO,OAAA,EAAE,QAAA,CAAS,IAAI,CAAA,CAAA;AAC1B,CAAA;AAGO,SAAS,SAChB,GAAA;IACI,IAAA,MAAW,OAAO,QAClB,CAAA;QACI,OAAO,QAAA,CAAS,GAAG,CAAA,CAAA;IAAA,CACvB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 6543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6549, "column": 0}, "map": {"version":3,"file":"deprecation.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/logging/deprecation.ts"],"sourcesContent":["import type { Dict } from '../types';\n\n// A map of warning messages already fired\nconst warnings: Dict<boolean> = {};\n\n/**\n * deprecation name for version 8.0.0\n * @ignore\n */\nexport const v8_0_0 = '8.0.0';\nexport const v8_3_4 = '8.3.4';\n\n/**\n * Helper for warning developers about deprecated features & settings.\n * A stack track for warnings is given; useful for tracking-down where\n * deprecated methods/properties/classes are being used within the code.\n * @memberof utils\n * @ignore\n * @function deprecation\n * @param {string} version - The version where the feature became deprecated\n * @param {string} message - Message should include what is deprecated, where, and the new solution\n * @param {number} [ignoreDepth=3] - The number of steps to ignore at the top of the error stack\n *        this is mostly to ignore internal deprecation calls.\n */\nexport function deprecation(version: string, message: string, ignoreDepth = 3): void\n{\n    // Ignore duplicate\n    if (warnings[message])\n    {\n        return;\n    }\n\n    /* eslint-disable no-console */\n    let stack = new Error().stack;\n\n    // Handle IE < 10 and Safari < 6\n    if (typeof stack === 'undefined')\n    {\n        console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n    }\n    else\n    {\n        // chop off the stack trace which includes PixiJS internal calls\n        stack = stack.split('\\n').splice(ignoreDepth).join('\\n');\n\n        if (console.groupCollapsed)\n        {\n            console.groupCollapsed(\n                '%cPixiJS Deprecation Warning: %c%s',\n                'color:#614108;background:#fffbe6',\n                'font-weight:normal;color:#614108;background:#fffbe6',\n                `${message}\\nDeprecated since v${version}`\n            );\n            console.warn(stack);\n            console.groupEnd();\n        }\n        else\n        {\n            console.warn('PixiJS Deprecation Warning: ', `${message}\\nDeprecated since v${version}`);\n            console.warn(stack);\n        }\n    }\n    /* eslint-enable no-console */\n\n    warnings[message] = true;\n}\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,WAA0B,CAAA,CAAC,CAAA;AAM1B,MAAM,MAAS,GAAA,QAAA;AACf,MAAM,MAAS,GAAA,QAAA;AAcf,SAAS,WAAY,CAAA,OAAA,EAAiB,OAAiB,EAAA,WAAA,GAAc,CAC5E,EAAA;IAEQ,IAAA,QAAA,CAAS,OAAO,CACpB,EAAA;QACI,OAAA;IAAA,CACJ;IAGI,IAAA,KAAA,GAAQ,IAAI,KAAA,EAAQ,CAAA,KAAA,CAAA;IAGpB,IAAA,OAAO,UAAU,WACrB,EAAA;QACY,OAAA,CAAA,IAAA,CAAK,8BAAgC,EAAA,CAAA,EAAG,OAAO,CAAA;kBAAA,EAAuB,OAAO,CAAE,CAAA,CAAA,CAAA;IAAA,CAG3F,MAAA;QAEY,KAAA,GAAA,KAAA,CAAM,KAAA,CAAM,IAAI,CAAA,CAAE,MAAA,CAAO,WAAW,CAAA,CAAE,IAAA,CAAK,IAAI,CAAA,CAAA;QAEvD,IAAI,QAAQ,cACZ,EAAA;YACY,OAAA,CAAA,cAAA,CACJ,oCAAA,EACA,kCAAA,EACA,qDAAA,EACA,GAAG,OAAO,CAAA;kBAAA,EAAuB,OAAO,CAAA,CAAA;YAE5C,OAAA,CAAQ,IAAA,CAAK,KAAK,CAAA,CAAA;YAClB,OAAA,CAAQ,QAAS,EAAA,CAAA;QAAA,CAGrB,MAAA;YACY,OAAA,CAAA,IAAA,CAAK,8BAAgC,EAAA,CAAA,EAAG,OAAO,CAAA;kBAAA,EAAuB,OAAO,CAAE,CAAA,CAAA,CAAA;YACvF,OAAA,CAAQ,IAAA,CAAK,KAAK,CAAA,CAAA;QAAA,CACtB;IAAA,CACJ;IAGA,QAAA,CAAS,OAAO,CAAI,GAAA,IAAA,CAAA;AACxB","ignoreList":[0]}},
    {"offset": {"line": 6583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6589, "column": 0}, "map": {"version":3,"file":"TextureStyle.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/texture/TextureStyle.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { uid } from '../../../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation';\n\nimport type { BindResource } from '../../gpu/shader/BindResource';\nimport type { COMPARE_FUNCTION, SCALE_MODE, WRAP_MODE } from './const';\n\nconst idHash: Record<string, number> = Object.create(null);\n\n/**\n * This takes a shader string and maps it to a resource id.\n * This is a little different than regular resource ids as these ids\n * are not unique to the resource. But must not overlap with other (non sampler) resources Ids.\n * @param value - the string to turn into a resource id\n * @returns a unique resource id\n */\nfunction createResourceIdFromString(value: string): number\n{\n    const id = idHash[value];\n\n    if (id === undefined)\n    {\n        idHash[value] = uid('resource');\n    }\n\n    return id;\n}\n\nexport interface TextureStyleOptions extends Partial<TextureStyle>\n{\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    addressMode?: WRAP_MODE;\n    /** specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    addressModeU?: WRAP_MODE;\n    /** specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    addressModeV?: WRAP_MODE;\n    /** Specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    addressModeW?: WRAP_MODE;\n\n    /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n    scaleMode?: SCALE_MODE;\n\n    /** specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n    magFilter?: SCALE_MODE;\n    /** specifies the sampling behavior when the sample footprint is larger than one texel. */\n    minFilter?: SCALE_MODE;\n    /** specifies behavior for sampling between mipmap levels. */\n    mipmapFilter?: SCALE_MODE;\n\n    /** specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    lodMinClamp?: number;\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    lodMaxClamp?: number;\n    /**\n     * When provided the sampler will be a comparison sampler with the specified\n     * {@link GPUCompareFunction}.\n     * Note: Comparison samplers may use filtering, but the sampling results will be\n     * implementation-dependent and may differ from the normal filtering rules.\n     */\n    compare?: COMPARE_FUNCTION;\n    /**\n     * Specifies the maximum anisotropy value clamp used by the sampler.\n     * Note: Most implementations support {@link GPUSamplerDescriptor#maxAnisotropy} values in range\n     * between 1 and 16, inclusive. The used value of {@link GPUSamplerDescriptor#maxAnisotropy} will\n     * be clamped to the maximum value that the platform supports.\n     *\n     * setting this to anything higher than 1 will set scale modes to 'linear'\n     */\n    maxAnisotropy?: number;\n}\n\n/**\n * A texture style describes how a texture should be sampled by a shader.\n * @memberof rendering\n */\nexport class TextureStyle extends EventEmitter<{\n    change: TextureStyle,\n    destroy: TextureStyle,\n}> implements BindResource\n{\n    public _resourceType = 'textureSampler';\n    public _touched = 0;\n    private _sharedResourceId: number;\n\n    /** default options for the style */\n    public static readonly defaultOptions: TextureStyleOptions = {\n        addressMode: 'clamp-to-edge',\n        scaleMode: 'linear'\n    };\n\n    /** */\n    public addressModeU?: WRAP_MODE;\n    /** */\n    public addressModeV?: WRAP_MODE;\n    /** Specifies the {{GPUAddressMode|address modes}} for the texture width, height, and depth coordinates, respectively. */\n    public addressModeW?: WRAP_MODE;\n    /** Specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n    public magFilter?: SCALE_MODE;\n    /** Specifies the sampling behavior when the sample footprint is larger than one texel. */\n    public minFilter?: SCALE_MODE;\n    /** Specifies behavior for sampling between mipmap levels. */\n    public mipmapFilter?: SCALE_MODE;\n    /** */\n    public lodMinClamp?: number;\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    public lodMaxClamp?: number;\n    /**\n     * When provided the sampler will be a comparison sampler with the specified\n     * {@link GPUCompareFunction}.\n     * Note: Comparison samplers may use filtering, but the sampling results will be\n     * implementation-dependent and may differ from the normal filtering rules.\n     */\n    public compare?: COMPARE_FUNCTION;\n    /**\n     * Specifies the maximum anisotropy value clamp used by the sampler.\n     * Note: Most implementations support {@link GPUSamplerDescriptor#maxAnisotropy} values in range\n     * between 1 and 16, inclusive. The used value of {@link GPUSamplerDescriptor#maxAnisotropy} will\n     * be clamped to the maximum value that the platform supports.\n     * @internal\n     * @ignore\n     */\n    public _maxAnisotropy?: number = 1;\n\n    /**\n     * Has the style been destroyed?\n     * @readonly\n     */\n    public destroyed = false;\n\n    /**\n     * @param options - options for the style\n     */\n    constructor(options: TextureStyleOptions = {})\n    {\n        super();\n\n        options = { ...TextureStyle.defaultOptions, ...options };\n\n        this.addressMode = options.addressMode;\n\n        this.addressModeU = options.addressModeU ?? this.addressModeU;\n        this.addressModeV = options.addressModeV ?? this.addressModeV;\n        this.addressModeW = options.addressModeW ?? this.addressModeW;\n\n        this.scaleMode = options.scaleMode;\n\n        this.magFilter = options.magFilter ?? this.magFilter;\n        this.minFilter = options.minFilter ?? this.minFilter;\n        this.mipmapFilter = options.mipmapFilter ?? this.mipmapFilter;\n\n        this.lodMinClamp = options.lodMinClamp;\n        this.lodMaxClamp = options.lodMaxClamp;\n\n        this.compare = options.compare;\n\n        this.maxAnisotropy = options.maxAnisotropy ?? 1;\n    }\n\n    set addressMode(value: WRAP_MODE)\n    {\n        this.addressModeU = value;\n        this.addressModeV = value;\n        this.addressModeW = value;\n    }\n\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    get addressMode(): WRAP_MODE\n    {\n        return this.addressModeU;\n    }\n\n    set wrapMode(value: WRAP_MODE)\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'TextureStyle.wrapMode is now TextureStyle.addressMode');\n        // #endif\n\n        this.addressMode = value;\n    }\n\n    get wrapMode(): WRAP_MODE\n    {\n        return this.addressMode;\n    }\n\n    set scaleMode(value: SCALE_MODE)\n    {\n        this.magFilter = value;\n        this.minFilter = value;\n        this.mipmapFilter = value;\n    }\n\n    /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n    get scaleMode(): SCALE_MODE\n    {\n        return this.magFilter;\n    }\n\n    /** Specifies the maximum anisotropy value clamp used by the sampler. */\n    set maxAnisotropy(value: number)\n    {\n        this._maxAnisotropy = Math.min(value, 16);\n\n        if (this._maxAnisotropy > 1)\n        {\n            this.scaleMode = 'linear';\n        }\n    }\n\n    get maxAnisotropy(): number\n    {\n        return this._maxAnisotropy;\n    }\n\n    // TODO - move this to WebGL?\n    get _resourceId(): number\n    {\n        return this._sharedResourceId || this._generateResourceId();\n    }\n\n    public update()\n    {\n        // manage the resource..\n        this.emit('change', this);\n        this._sharedResourceId = null;\n    }\n\n    private _generateResourceId(): number\n    {\n        // eslint-disable-next-line max-len\n        const bigKey = `${this.addressModeU}-${this.addressModeV}-${this.addressModeW}-${this.magFilter}-${this.minFilter}-${this.mipmapFilter}-${this.lodMinClamp}-${this.lodMaxClamp}-${this.compare}-${this._maxAnisotropy}`;\n\n        this._sharedResourceId = createResourceIdFromString(bigKey);\n\n        return this._resourceId;\n    }\n\n    /** Destroys the style */\n    public destroy()\n    {\n        this.destroyed = true;\n\n        this.emit('destroy', this);\n        this.emit('change', this);\n\n        this.removeAllListeners();\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6703, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6709, "column": 0}, "map": {"version":3,"file":"definedProps.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/utils/definedProps.ts"],"sourcesContent":["/**\n * Returns a new object with all properties from the input object that have defined values.\n * @template T - The type of the input object.\n * @param {T} obj - The input object.\n * @returns {T} - A new object with only the defined properties from the input object.\n * @memberof utils\n * @ignore\n */\nexport function definedProps<T extends Record<string, any>>(obj: T): T\n{\n    const result: Partial<T> = {};\n\n    for (const key in obj)\n    {\n        if (obj[key] !== undefined)\n        {\n            result[key] = obj[key];\n        }\n    }\n\n    return result as T;\n}\n"],"names":[],"mappings":";;;;AAQO,SAAS,aAA4C,GAC5D,EAAA;IACI,MAAM,SAAqB,CAAA,CAAC,CAAA;IAE5B,IAAA,MAAW,OAAO,GAClB,CAAA;QACQ,IAAA,GAAA,CAAI,GAAG,CAAA,KAAM,KACjB,CAAA,EAAA;YACW,MAAA,CAAA,GAAG,CAAI,GAAA,GAAA,CAAI,GAAG,CAAA,CAAA;QAAA,CACzB;IAAA,CACJ;IAEO,OAAA,MAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 6724, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6730, "column": 0}, "map": {"version":3,"file":"pow2.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/maths/misc/pow2.ts"],"sourcesContent":["// Taken from the bit-twiddle package\n\n/**\n * Rounds to next power of two.\n * @function nextPow2\n * @param {number} v - input value\n * @returns {number} - next rounded power of two\n * @memberof maths\n */\nexport function nextPow2(v: number): number\n{\n    v += v === 0 ? 1 : 0;\n    --v;\n    v |= v >>> 1;\n    v |= v >>> 2;\n    v |= v >>> 4;\n    v |= v >>> 8;\n    v |= v >>> 16;\n\n    return v + 1;\n}\n\n/**\n * Checks if a number is a power of two.\n * @function isPow2\n * @param {number} v - input value\n * @returns {boolean} `true` if value is power of two\n * @memberof maths\n */\nexport function isPow2(v: number): boolean\n{\n    return !(v & (v - 1)) && (!!v);\n}\n\n/**\n * Computes ceil of log base 2\n * @function log2\n * @param {number} v - input value\n * @returns {number} logarithm base 2\n * @memberof maths\n */\nexport function log2(v: number): number\n{\n    let r = (v > 0xFFFF ? 1 : 0) << 4;\n\n    v >>>= r;\n\n    let shift = (v > 0xFF ? 1 : 0) << 3;\n\n    v >>>= shift; r |= shift;\n    shift = (v > 0xF ? 1 : 0) << 2;\n    v >>>= shift; r |= shift;\n    shift = (v > 0x3 ? 1 : 0) << 1;\n    v >>>= shift; r |= shift;\n\n    return r | (v >> 1);\n}\n"],"names":[],"mappings":";;;;;;AASO,SAAS,SAAS,CACzB,EAAA;IACS,CAAA,IAAA,CAAA,KAAM,IAAI,CAAI,GAAA,CAAA,CAAA;IACjB,EAAA,CAAA,CAAA;IACF,CAAA,IAAK,CAAM,KAAA,CAAA,CAAA;IACX,CAAA,IAAK,CAAM,KAAA,CAAA,CAAA;IACX,CAAA,IAAK,CAAM,KAAA,CAAA,CAAA;IACX,CAAA,IAAK,CAAM,KAAA,CAAA,CAAA;IACX,CAAA,IAAK,CAAM,KAAA,EAAA,CAAA;IAEX,OAAO,CAAI,GAAA,CAAA,CAAA;AACf,CAAA;AASO,SAAS,OAAO,CACvB,EAAA;IACI,OAAO,CAAA,CAAE,CAAA,GAAK,CAAI,GAAA,CAAA,CAAA,IAAQ,CAAC,CAAC,CAAA,CAAA;AAChC,CAAA;AASO,SAAS,KAAK,CACrB,EAAA;IACI,IAAI,CAAK,GAAA,CAAA,CAAA,GAAI,KAAS,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA,CAAA;IAEzB,CAAA,MAAA,CAAA,CAAA;IAEP,IAAI,KAAS,GAAA,CAAA,CAAA,GAAI,GAAO,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA,CAAA;IAE3B,CAAA,MAAA,KAAA,CAAA;IAAY,CAAA,IAAA,KAAA,CAAA;IACV,KAAA,GAAA,CAAA,CAAA,GAAI,EAAM,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA,CAAA;IACtB,CAAA,MAAA,KAAA,CAAA;IAAY,CAAA,IAAA,KAAA,CAAA;IACV,KAAA,GAAA,CAAA,CAAA,GAAI,CAAM,GAAA,CAAA,GAAI,CAAM,KAAA,CAAA,CAAA;IACtB,CAAA,MAAA,KAAA,CAAA;IAAY,CAAA,IAAA,KAAA,CAAA;IAEnB,OAAO,IAAK,CAAK,IAAA,CAAA,CAAA;AACrB","ignoreList":[0]}},
    {"offset": {"line": 6765, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6771, "column": 0}, "map": {"version":3,"file":"TextureSource.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/TextureSource.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { isPow2 } from '../../../../../maths/misc/pow2';\nimport { definedProps } from '../../../../../scene/container/utils/definedProps';\nimport { uid } from '../../../../../utils/data/uid';\nimport { TextureStyle } from '../TextureStyle';\n\nimport type { BindResource } from '../../../gpu/shader/BindResource';\nimport type { ALPHA_MODES, SCALE_MODE, TEXTURE_DIMENSIONS, TEXTURE_FORMATS, WRAP_MODE } from '../const';\nimport type { TextureStyleOptions } from '../TextureStyle';\nimport type { TextureResourceOrOptions } from '../utils/textureFrom';\n\n/**\n * options for creating a new TextureSource\n * @memberof rendering\n */\nexport interface TextureSourceOptions<T extends Record<string, any> = any> extends TextureStyleOptions\n{\n    /**\n     * the resource that will be uploaded to the GPU. This is where we get our pixels from\n     * eg an ImageBimt / Canvas / Video etc\n     */\n    resource?: T;\n    /** the pixel width of this texture source. This is the REAL pure number, not accounting resolution */\n    width?: number;\n    /** the pixel height of this texture source. This is the REAL pure number, not accounting resolution */\n    height?: number;\n    /** the resolution of the texture. */\n    resolution?: number;\n    /** the format that the texture data has */\n    format?: TEXTURE_FORMATS;\n    /**\n     * Used by internal textures\n     * @ignore\n     */\n    sampleCount?: number;\n    /**\n     * Only really affects RenderTextures.\n     * Should we use antialiasing for this texture. It will look better, but may impact performance as a\n     * Blit operation will be required to resolve the texture.\n     */\n    antialias?: boolean;\n    /** how many dimensions does this texture have? currently v8 only supports 2d */\n    dimensions?: TEXTURE_DIMENSIONS;\n    /** The number of mip levels to generate for this texture. this is  overridden if autoGenerateMipmaps is true */\n    mipLevelCount?: number;\n    /**\n     * Should we auto generate mipmaps for this texture? This will automatically generate mipmaps\n     * for this texture when uploading to the GPU. Mipmapped textures take up more memory, but\n     * can look better when scaled down.\n     *\n     * For performance reasons, it is recommended to NOT use this with RenderTextures, as they are often updated every frame.\n     * If you do, make sure to call `updateMipmaps` after you update the texture.\n     */\n    autoGenerateMipmaps?: boolean;\n    /** the alpha mode of the texture */\n    alphaMode?: ALPHA_MODES;\n    /** optional label, can be used for debugging */\n    label?: string;\n    /** If true, the Garbage Collector will unload this texture if it is not used after a period of time */\n    autoGarbageCollect?: boolean;\n}\n\n/**\n * A TextureSource stores the information that represents an image.\n * All textures have require TextureSource, which contains information about the source.\n * Therefore you can have many textures all using a single TextureSource (eg a sprite sheet)\n *\n * This is an class is extended depending on the source of the texture.\n * Eg if you are using an an image as your resource, then an ImageSource is used.\n * @memberof rendering\n * @typeParam T - The TextureSource's Resource type.\n */\nexport class TextureSource<T extends Record<string, any> = any> extends EventEmitter<{\n    change: BindResource;\n    update: TextureSource;\n    unload: TextureSource;\n    destroy: TextureSource;\n    resize: TextureSource;\n    styleChange: TextureSource;\n    updateMipmaps: TextureSource;\n    error: Error;\n}> implements BindResource\n{\n    /** The default options used when creating a new TextureSource. override these to add your own defaults */\n    public static defaultOptions: TextureSourceOptions = {\n        resolution: 1,\n        format: 'bgra8unorm',\n        alphaMode: 'premultiply-alpha-on-upload',\n        dimensions: '2d',\n        mipLevelCount: 1,\n        autoGenerateMipmaps: false,\n        sampleCount: 1,\n        antialias: false,\n        autoGarbageCollect: false,\n    };\n\n    /** unique id for this Texture source */\n    public readonly uid: number = uid('textureSource');\n    /** optional label, can be used for debugging */\n    public label: string;\n\n    /**\n     * The resource type used by this TextureSource. This is used by the bind groups to determine\n     * how to handle this resource.\n     * @ignore\n     * @internal\n     */\n    public readonly _resourceType = 'textureSource';\n    /**\n     * i unique resource id, used by the bind group systems.\n     * This can change if the texture is resized or its resource changes\n     */\n    public _resourceId = uid('resource');\n    /**\n     * this is how the backends know how to upload this texture to the GPU\n     * It changes depending on the resource type. Classes that extend TextureSource\n     * should override this property.\n     * @ignore\n     * @internal\n     */\n    public uploadMethodId = 'unknown';\n\n    // dimensions\n    public _resolution = 1;\n\n    /** the pixel width of this texture source. This is the REAL pure number, not accounting resolution */\n    public pixelWidth = 1;\n    /** the pixel height of this texture source. This is the REAL pure number, not accounting resolution */\n    public pixelHeight = 1;\n\n    /**\n     * the width of this texture source, accounting for resolution\n     * eg pixelWidth 200, resolution 2, then width will be 100\n     */\n    public width = 1;\n    /**\n     * the height of this texture source, accounting for resolution\n     * eg pixelHeight 200, resolution 2, then height will be 100\n     */\n    public height = 1;\n\n    /**\n     * the resource that will be uploaded to the GPU. This is where we get our pixels from\n     * eg an ImageBimt / Canvas / Video etc\n     */\n    public resource: T;\n\n    /**\n     * The number of samples of a multisample texture. This is always 1 for non-multisample textures.\n     * To enable multisample for a texture, set antialias to true\n     * @internal\n     * @ignore\n     */\n    public sampleCount = 1;\n\n    /** The number of mip levels to generate for this texture. this is  overridden if autoGenerateMipmaps is true */\n    public mipLevelCount = 1;\n    /**\n     * Should we auto generate mipmaps for this texture? This will automatically generate mipmaps\n     * for this texture when uploading to the GPU. Mipmapped textures take up more memory, but\n     * can look better when scaled down.\n     *\n     * For performance reasons, it is recommended to NOT use this with RenderTextures, as they are often updated every frame.\n     * If you do, make sure to call `updateMipmaps` after you update the texture.\n     */\n    public autoGenerateMipmaps = false;\n    /** the format that the texture data has */\n    public format: TEXTURE_FORMATS = 'rgba8unorm';\n    /** how many dimensions does this texture have? currently v8 only supports 2d */\n    public dimension: TEXTURE_DIMENSIONS = '2d';\n    /** the alpha mode of the texture */\n    public alphaMode: ALPHA_MODES;\n    private _style: TextureStyle;\n\n    /**\n     * Only really affects RenderTextures.\n     * Should we use antialiasing for this texture. It will look better, but may impact performance as a\n     * Blit operation will be required to resolve the texture.\n     */\n    public antialias = false;\n\n    /**\n     * Has the source been destroyed?\n     * @readonly\n     */\n    public destroyed: boolean;\n\n    /**\n     * Used by automatic texture Garbage Collection, stores last GC tick when it was bound\n     * @protected\n     */\n    public _touched = 0;\n\n    /**\n     * Used by the batcher to build texture batches. faster to have the variable here!\n     * @protected\n     */\n    public _batchTick = -1;\n    /**\n     * A temporary batch location for the texture batching. Here for performance reasons only!\n     * @protected\n     */\n    public _textureBindLocation = -1;\n\n    public isPowerOfTwo: boolean;\n\n    /** If true, the Garbage Collector will unload this texture if it is not used after a period of time */\n    public autoGarbageCollect: boolean;\n\n    /**\n     * used internally to know where a texture came from. Usually assigned by the asset loader!\n     * @ignore\n     */\n    public _sourceOrigin: string;\n\n    /**\n     * @param options - options for creating a new TextureSource\n     */\n    constructor(protected readonly options: TextureSourceOptions<T> = {})\n    {\n        super();\n\n        options = { ...TextureSource.defaultOptions, ...options };\n\n        this.label = options.label ?? '';\n        this.resource = options.resource;\n        this.autoGarbageCollect = options.autoGarbageCollect;\n        this._resolution = options.resolution;\n\n        if (options.width)\n        {\n            this.pixelWidth = options.width * this._resolution;\n        }\n        else\n        {\n            this.pixelWidth = this.resource ? (this.resourceWidth ?? 1) : 1;\n        }\n\n        if (options.height)\n        {\n            this.pixelHeight = options.height * this._resolution;\n        }\n        else\n        {\n            this.pixelHeight = this.resource ? (this.resourceHeight ?? 1) : 1;\n        }\n\n        this.width = this.pixelWidth / this._resolution;\n        this.height = this.pixelHeight / this._resolution;\n\n        this.format = options.format;\n        this.dimension = options.dimensions;\n        this.mipLevelCount = options.mipLevelCount;\n        this.autoGenerateMipmaps = options.autoGenerateMipmaps;\n        this.sampleCount = options.sampleCount;\n        this.antialias = options.antialias;\n        this.alphaMode = options.alphaMode;\n\n        this.style = new TextureStyle(definedProps(options));\n\n        this.destroyed = false;\n\n        this._refreshPOT();\n    }\n\n    /** returns itself */\n    get source(): TextureSource\n    {\n        return this;\n    }\n\n    /** the style of the texture */\n    get style(): TextureStyle\n    {\n        return this._style;\n    }\n\n    set style(value: TextureStyle)\n    {\n        if (this.style === value) return;\n\n        this._style?.off('change', this._onStyleChange, this);\n        this._style = value;\n        this._style?.on('change', this._onStyleChange, this);\n\n        this._onStyleChange();\n    }\n\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    get addressMode(): WRAP_MODE\n    {\n        return this._style.addressMode;\n    }\n\n    set addressMode(value: WRAP_MODE)\n    {\n        this._style.addressMode = value;\n    }\n\n    /** setting this will set wrapModeU,wrapModeV and wrapModeW all at once! */\n    get repeatMode(): WRAP_MODE\n    {\n        return this._style.addressMode;\n    }\n\n    set repeatMode(value: WRAP_MODE)\n    {\n        this._style.addressMode = value;\n    }\n\n    /** Specifies the sampling behavior when the sample footprint is smaller than or equal to one texel. */\n    get magFilter(): SCALE_MODE\n    {\n        return this._style.magFilter;\n    }\n\n    set magFilter(value: SCALE_MODE)\n    {\n        this._style.magFilter = value;\n    }\n\n    /** Specifies the sampling behavior when the sample footprint is larger than one texel. */\n    get minFilter(): SCALE_MODE\n    {\n        return this._style.minFilter;\n    }\n\n    set minFilter(value: SCALE_MODE)\n    {\n        this._style.minFilter = value;\n    }\n\n    /** Specifies behavior for sampling between mipmap levels. */\n    get mipmapFilter(): SCALE_MODE\n    {\n        return this._style.mipmapFilter;\n    }\n\n    set mipmapFilter(value: SCALE_MODE)\n    {\n        this._style.mipmapFilter = value;\n    }\n\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    get lodMinClamp(): number\n    {\n        return this._style.lodMinClamp;\n    }\n\n    set lodMinClamp(value: number)\n    {\n        this._style.lodMinClamp = value;\n    }\n\n    /** Specifies the minimum and maximum levels of detail, respectively, used internally when sampling a texture. */\n    get lodMaxClamp(): number\n    {\n        return this._style.lodMaxClamp;\n    }\n\n    set lodMaxClamp(value: number)\n    {\n        this._style.lodMaxClamp = value;\n    }\n\n    private _onStyleChange()\n    {\n        this.emit('styleChange', this);\n    }\n\n    /** call this if you have modified the texture outside of the constructor */\n    public update()\n    {\n        // update resource...\n        if (this.resource)\n        {\n            const resolution = this._resolution;\n\n            const didResize = this.resize(this.resourceWidth / resolution, this.resourceHeight / resolution);\n\n            // no need to dispatch the update we resized as that will\n            // notify the texture systems anyway\n            if (didResize) return;\n        }\n\n        this.emit('update', this);\n    }\n\n    /** Destroys this texture source */\n    public destroy()\n    {\n        this.destroyed = true;\n        this.emit('destroy', this);\n        this.emit('change', this);\n\n        if (this._style)\n        {\n            this._style.destroy();\n            this._style = null;\n        }\n\n        this.uploadMethodId = null;\n        this.resource = null;\n        this.removeAllListeners();\n    }\n\n    /**\n     * This will unload the Texture source from the GPU. This will free up the GPU memory\n     * As soon as it is required fore rendering, it will be re-uploaded.\n     */\n    public unload()\n    {\n        this._resourceId = uid('resource');\n        this.emit('change', this);\n        this.emit('unload', this);\n    }\n\n    /** the width of the resource. This is the REAL pure number, not accounting resolution   */\n    public get resourceWidth(): number\n    {\n        const { resource } = this;\n\n        return resource.naturalWidth || resource.videoWidth || resource.displayWidth || resource.width;\n    }\n\n    /** the height of the resource. This is the REAL pure number, not accounting resolution */\n    public get resourceHeight(): number\n    {\n        const { resource } = this;\n\n        return resource.naturalHeight || resource.videoHeight || resource.displayHeight || resource.height;\n    }\n\n    /**\n     * the resolution of the texture. Changing this number, will not change the number of pixels in the actual texture\n     * but will the size of the texture when rendered.\n     *\n     * changing the resolution of this texture to 2 for example will make it appear twice as small when rendered (as pixel\n     * density will have increased)\n     */\n    get resolution(): number\n    {\n        return this._resolution;\n    }\n\n    set resolution(resolution: number)\n    {\n        if (this._resolution === resolution) return;\n\n        this._resolution = resolution;\n\n        this.width = this.pixelWidth / resolution;\n        this.height = this.pixelHeight / resolution;\n    }\n\n    /**\n     * Resize the texture, this is handy if you want to use the texture as a render texture\n     * @param width - the new width of the texture\n     * @param height - the new height of the texture\n     * @param resolution - the new resolution of the texture\n     * @returns - if the texture was resized\n     */\n    public resize(width?: number, height?: number, resolution?: number): boolean\n    {\n        resolution ||= this._resolution;\n        width ||= this.width;\n        height ||= this.height;\n\n        // make sure we work with rounded pixels\n        const newPixelWidth = Math.round(width * resolution);\n        const newPixelHeight = Math.round(height * resolution);\n\n        this.width = newPixelWidth / resolution;\n        this.height = newPixelHeight / resolution;\n\n        this._resolution = resolution;\n\n        if (this.pixelWidth === newPixelWidth && this.pixelHeight === newPixelHeight)\n        {\n            return false;\n        }\n\n        this._refreshPOT();\n\n        this.pixelWidth = newPixelWidth;\n        this.pixelHeight = newPixelHeight;\n\n        this.emit('resize', this);\n\n        this._resourceId = uid('resource');\n        this.emit('change', this);\n\n        return true;\n    }\n\n    /**\n     * Lets the renderer know that this texture has been updated and its mipmaps should be re-generated.\n     * This is only important for RenderTexture instances, as standard Texture instances will have their\n     * mipmaps generated on upload. You should call this method after you make any change to the texture\n     *\n     * The reason for this is is can be quite expensive to update mipmaps for a texture. So by default,\n     * We want you, the developer to specify when this action should happen.\n     *\n     * Generally you don't want to have mipmaps generated on Render targets that are changed every frame,\n     */\n    public updateMipmaps()\n    {\n        if (this.autoGenerateMipmaps && this.mipLevelCount > 1)\n        {\n            this.emit('updateMipmaps', this);\n        }\n    }\n\n    set wrapMode(value: WRAP_MODE)\n    {\n        this._style.wrapMode = value;\n    }\n\n    get wrapMode(): WRAP_MODE\n    {\n        return this._style.wrapMode;\n    }\n\n    set scaleMode(value: SCALE_MODE)\n    {\n        this._style.scaleMode = value;\n    }\n\n    /** setting this will set magFilter,minFilter and mipmapFilter all at once!  */\n    get scaleMode(): SCALE_MODE\n    {\n        return this._style.scaleMode;\n    }\n\n    /**\n     * Refresh check for isPowerOfTwo texture based on size\n     * @private\n     */\n    protected _refreshPOT(): void\n    {\n        this.isPowerOfTwo = isPow2(this.pixelWidth) && isPow2(this.pixelHeight);\n    }\n\n    public static test(_resource: any): any\n    {\n        // this should be overridden by other sources..\n        throw new Error('Unimplemented');\n    }\n\n    /**\n     * A helper function that creates a new TextureSource based on the resource you provide.\n     * @param resource - The resource to create the texture source from.\n     */\n    public static from: (resource: TextureResourceOrOptions) => TextureSource;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7078, "column": 0}, "map": {"version":3,"file":"TextureMatrix.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/texture/TextureMatrix.ts"],"sourcesContent":["import { Matrix } from '../../../../maths/matrix/Matrix';\n\nimport type { Texture } from './Texture';\n\nconst tempMat = new Matrix();\n\n/**\n * Class controls uv mapping from Texture normal space to BaseTexture normal space.\n *\n * Takes `trim` and `rotate` into account. May contain clamp settings for Meshes and TilingSprite.\n *\n * Can be used in Texture `uvMatrix` field, or separately, you can use different clamp settings on the same texture.\n * If you want to add support for texture region of certain feature or filter, that's what you're looking for.\n *\n * Takes track of Texture changes through `_lastTextureID` private field.\n * Use `update()` method call to track it from outside.\n * @see Texture\n * @see Mesh\n * @see TilingSprite\n * @memberof rendering\n */\nexport class TextureMatrix\n{\n    /**\n     * Matrix operation that converts texture region coords to texture coords\n     * @readonly\n     */\n    public mapCoord: Matrix;\n\n    /**\n     * Changes frame clamping\n     * Works with TilingSprite and Mesh\n     * Change to 1.5 if you texture has repeated right and bottom lines, that leads to smoother borders\n     * @default 0\n     */\n    public clampOffset: number;\n\n    /**\n     * Changes frame clamping\n     * Works with TilingSprite and Mesh\n     * Change to -0.5 to add a pixel to the edge, recommended for transparent trimmed textures in atlas\n     * @default 0.5\n     */\n    public clampMargin: number;\n\n    /**\n     * Clamp region for normalized coords, left-top pixel center in xy , bottom-right in zw.\n     * Calculated based on clampOffset.\n     */\n    public readonly uClampFrame: Float32Array;\n\n    /** Normalized clamp offset. Calculated based on clampOffset. */\n    public readonly uClampOffset: Float32Array;\n\n    /**\n     * Tracks Texture frame changes.\n     * @ignore\n     */\n    public _updateID: number;\n\n    /**\n     * Tracks Texture frame changes.\n     * @protected\n     */\n    protected _textureID: number;\n\n    protected _texture: Texture;\n\n    /**\n     * If texture size is the same as baseTexture.\n     * @default false\n     * @readonly\n     */\n    public isSimple: boolean;\n\n    /**\n     * @param texture - observed texture\n     * @param clampMargin - Changes frame clamping, 0.5 by default. Use -0.5 for extra border.\n     */\n    constructor(texture: Texture, clampMargin?: number)\n    {\n        this.mapCoord = new Matrix();\n        this.uClampFrame = new Float32Array(4);\n        this.uClampOffset = new Float32Array(2);\n        this._textureID = -1;\n        this._updateID = 0;\n\n        this.clampOffset = 0;\n\n        if ((typeof clampMargin === 'undefined'))\n        {\n            this.clampMargin = (texture.width < 10) ? 0 : 0.5;\n        }\n        else\n        {\n            this.clampMargin = clampMargin;\n        }\n\n        this.isSimple = false;\n\n        this.texture = texture;\n    }\n\n    /** Texture property. */\n    get texture(): Texture\n    {\n        return this._texture;\n    }\n\n    set texture(value: Texture)\n    {\n        if (this.texture === value) return;\n\n        this._texture?.removeListener('update', this.update, this);\n        this._texture = value;\n        this._texture.addListener('update', this.update, this);\n\n        this.update();\n    }\n\n    /**\n     * Multiplies uvs array to transform\n     * @param uvs - mesh uvs\n     * @param [out=uvs] - output\n     * @returns - output\n     */\n    public multiplyUvs(uvs: Float32Array, out?: Float32Array): Float32Array\n    {\n        if (out === undefined)\n        {\n            out = uvs;\n        }\n\n        const mat = this.mapCoord;\n\n        for (let i = 0; i < uvs.length; i += 2)\n        {\n            const x = uvs[i];\n            const y = uvs[i + 1];\n\n            out[i] = (x * mat.a) + (y * mat.c) + mat.tx;\n            out[i + 1] = (x * mat.b) + (y * mat.d) + mat.ty;\n        }\n\n        return out;\n    }\n\n    /**\n     * Updates matrices if texture was changed\n     * @returns - whether or not it was updated\n     */\n    public update(): boolean\n    {\n        const tex = this._texture;\n\n        this._updateID++;\n\n        const uvs = tex.uvs;\n\n        this.mapCoord.set(uvs.x1 - uvs.x0, uvs.y1 - uvs.y0, uvs.x3 - uvs.x0, uvs.y3 - uvs.y0, uvs.x0, uvs.y0);\n\n        const orig = tex.orig;\n        const trim = tex.trim;\n\n        if (trim)\n        {\n            tempMat.set(\n                orig.width / trim.width,\n                0, 0, orig.height / trim.height,\n                -trim.x / trim.width,\n                -trim.y / trim.height\n            );\n\n            this.mapCoord.append(tempMat);\n        }\n\n        const texBase = tex.source;\n        const frame = this.uClampFrame;\n        const margin = this.clampMargin / texBase._resolution;\n        const offset = this.clampOffset / texBase._resolution;\n\n        frame[0] = (tex.frame.x + margin + offset) / texBase.width;\n        frame[1] = (tex.frame.y + margin + offset) / texBase.height;\n        frame[2] = (tex.frame.x + tex.frame.width - margin + offset) / texBase.width;\n        frame[3] = (tex.frame.y + tex.frame.height - margin + offset) / texBase.height;\n\n        this.uClampOffset[0] = this.clampOffset / texBase.pixelWidth;\n        this.uClampOffset[1] = this.clampOffset / texBase.pixelHeight;\n\n        this.isSimple = tex.frame.width === texBase.width\n            && tex.frame.height === texBase.height\n            && tex.rotate === 0;\n\n        return true;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7168, "column": 0}, "map": {"version":3,"file":"groupD8.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/maths/matrix/groupD8.ts"],"sourcesContent":["// Your friendly neighbour https://en.wikipedia.org/wiki/Dihedral_group\n//\n// This file implements the dihedral group of order 16, also called\n// of degree 8. That's why its called groupD8.\n\nimport { Matrix } from './Matrix';\n\n/*\n * Transform matrix for operation n is:\n * | ux | vx |\n * | uy | vy |\n */\n\nconst ux = [1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1, 0, 1];\nconst uy = [0, 1, 1, 1, 0, -1, -1, -1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vx = [0, -1, -1, -1, 0, 1, 1, 1, 0, 1, 1, 1, 0, -1, -1, -1];\nconst vy = [1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, 1, 1, 1, 0, -1];\n\n/**\n * [Cayley Table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n * for the composition of each rotation in the dihederal group D8.\n * @type {number[][]}\n * @private\n */\nconst rotationCayley: number[][] = [];\n\n/**\n * Matrices for each `GD8Symmetry` rotation.\n * @type {Matrix[]}\n * @private\n */\nconst rotationMatrices: Matrix[] = [];\n\n/*\n * Alias for {@code Math.sign}.\n */\nconst signum = Math.sign;\n\n/*\n * Initializes `rotationCayley` and `rotationMatrices`. It is called\n * only once below.\n */\nfunction init(): void\n{\n    for (let i = 0; i < 16; i++)\n    {\n        const row: number[] = [];\n\n        rotationCayley.push(row);\n\n        for (let j = 0; j < 16; j++)\n        {\n            /* Multiplies rotation matrices i and j. */\n            const _ux = signum((ux[i] * ux[j]) + (vx[i] * uy[j]));\n            const _uy = signum((uy[i] * ux[j]) + (vy[i] * uy[j]));\n            const _vx = signum((ux[i] * vx[j]) + (vx[i] * vy[j]));\n            const _vy = signum((uy[i] * vx[j]) + (vy[i] * vy[j]));\n\n            /* Finds rotation matrix matching the product and pushes it. */\n            for (let k = 0; k < 16; k++)\n            {\n                if (ux[k] === _ux && uy[k] === _uy\n                      && vx[k] === _vx && vy[k] === _vy)\n                {\n                    row.push(k);\n                    break;\n                }\n            }\n        }\n    }\n\n    for (let i = 0; i < 16; i++)\n    {\n        const mat = new Matrix();\n\n        mat.set(ux[i], uy[i], vx[i], vy[i], 0, 0);\n        rotationMatrices.push(mat);\n    }\n}\n\ninit();\n\ntype GD8Symmetry = number;\n/**\n * @typedef {number} GD8Symmetry\n * @see groupD8\n */\n\n/**\n * Implements the dihedral group D8, which is similar to\n * [group D4]{@link http://mathworld.wolfram.com/DihedralGroupD4.html};\n * D8 is the same but with diagonals, and it is used for texture\n * rotations.\n *\n * The directions the U- and V- axes after rotation\n * of an angle of `a: GD8Constant` are the vectors `(uX(a), uY(a))`\n * and `(vX(a), vY(a))`. These aren't necessarily unit vectors.\n *\n * **Origin:**<br>\n *  This is the small part of gameofbombs.com portal system. It works.\n * @see maths.groupD8.E\n * @see maths.groupD8.SE\n * @see maths.groupD8.S\n * @see maths.groupD8.SW\n * @see maths.groupD8.W\n * @see maths.groupD8.NW\n * @see maths.groupD8.N\n * @see maths.groupD8.NE\n * @author Ivan @ivanpopelyshev\n * @namespace maths.groupD8\n */\nexport const groupD8 = {\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 0°       | East      |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    E: 0,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 45°↻     | Southeast |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    SE: 1,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 90°↻     | South     |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    S: 2,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 135°↻    | Southwest |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    SW: 3,\n\n    /**\n     * | Rotation | Direction |\n     * |----------|-----------|\n     * | 180°     | West      |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    W: 4,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -135°/225°↻ | Northwest    |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    NW: 5,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -90°/270°↻  | North        |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    N: 6,\n\n    /**\n     * | Rotation    | Direction    |\n     * |-------------|--------------|\n     * | -45°/315°↻  | Northeast    |\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    NE: 7,\n\n    /**\n     * Reflection about Y-axis.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    MIRROR_VERTICAL: 8,\n\n    /**\n     * Reflection about the main diagonal.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    MAIN_DIAGONAL: 10,\n\n    /**\n     * Reflection about X-axis.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    MIRROR_HORIZONTAL: 12,\n\n    /**\n     * Reflection about reverse diagonal.\n     * @memberof maths.groupD8\n     * @constant {GD8Symmetry}\n     */\n    REVERSE_DIAGONAL: 14,\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The X-component of the U-axis\n     *    after rotating the axes.\n     */\n    uX: (ind: GD8Symmetry): GD8Symmetry => ux[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The Y-component of the U-axis\n     *    after rotating the axes.\n     */\n    uY: (ind: GD8Symmetry): GD8Symmetry => uy[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The X-component of the V-axis\n     *    after rotating the axes.\n     */\n    vX: (ind: GD8Symmetry): GD8Symmetry => vx[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} ind - sprite rotation angle.\n     * @returns {GD8Symmetry} The Y-component of the V-axis\n     *    after rotating the axes.\n     */\n    vY: (ind: GD8Symmetry): GD8Symmetry => vy[ind],\n\n    /**\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotation - symmetry whose opposite\n     *   is needed. Only rotations have opposite symmetries while\n     *   reflections don't.\n     * @returns {GD8Symmetry} The opposite symmetry of `rotation`\n     */\n    inv: (rotation: GD8Symmetry): GD8Symmetry =>\n    {\n        if (rotation & 8)// true only if between 8 & 15 (reflections)\n        {\n            return rotation & 15;// or rotation % 16\n        }\n\n        return (-rotation) & 7;// or (8 - rotation) % 8\n    },\n\n    /**\n     * Composes the two D8 operations.\n     *\n     * Taking `^` as reflection:\n     *\n     * |       | E=0 | S=2 | W=4 | N=6 | E^=8 | S^=10 | W^=12 | N^=14 |\n     * |-------|-----|-----|-----|-----|------|-------|-------|-------|\n     * | E=0   | E   | S   | W   | N   | E^   | S^    | W^    | N^    |\n     * | S=2   | S   | W   | N   | E   | S^   | W^    | N^    | E^    |\n     * | W=4   | W   | N   | E   | S   | W^   | N^    | E^    | S^    |\n     * | N=6   | N   | E   | S   | W   | N^   | E^    | S^    | W^    |\n     * | E^=8  | E^  | N^  | W^  | S^  | E    | N     | W     | S     |\n     * | S^=10 | S^  | E^  | N^  | W^  | S    | E     | N     | W     |\n     * | W^=12 | W^  | S^  | E^  | N^  | W    | S     | E     | N     |\n     * | N^=14 | N^  | W^  | S^  | E^  | N    | W     | S     | E     |\n     *\n     * [This is a Cayley table]{@link https://en.wikipedia.org/wiki/Cayley_table}\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotationSecond - Second operation, which\n     *   is the row in the above cayley table.\n     * @param {GD8Symmetry} rotationFirst - First operation, which\n     *   is the column in the above cayley table.\n     * @returns {GD8Symmetry} Composed operation\n     */\n    add: (rotationSecond: GD8Symmetry, rotationFirst: GD8Symmetry): GD8Symmetry => (\n        rotationCayley[rotationSecond][rotationFirst]\n    ),\n\n    /**\n     * Reverse of `add`.\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotationSecond - Second operation\n     * @param {GD8Symmetry} rotationFirst - First operation\n     * @returns {GD8Symmetry} Result\n     */\n    sub: (rotationSecond: GD8Symmetry, rotationFirst: GD8Symmetry): GD8Symmetry => (\n        rotationCayley[rotationSecond][groupD8.inv(rotationFirst)]\n    ),\n\n    /**\n     * Adds 180 degrees to rotation, which is a commutative\n     * operation.\n     * @memberof maths.groupD8\n     * @param {number} rotation - The number to rotate.\n     * @returns {number} Rotated number\n     */\n    rotate180: (rotation: number): number => rotation ^ 4,\n\n    /**\n     * Checks if the rotation angle is vertical, i.e. south\n     * or north. It doesn't work for reflections.\n     * @memberof maths.groupD8\n     * @param {GD8Symmetry} rotation - The number to check.\n     * @returns {boolean} Whether or not the direction is vertical\n     */\n    isVertical: (rotation: GD8Symmetry): boolean => (rotation & 3) === 2, // rotation % 4 === 2\n\n    /**\n     * Approximates the vector `V(dx,dy)` into one of the\n     * eight directions provided by `groupD8`.\n     * @memberof maths.groupD8\n     * @param {number} dx - X-component of the vector\n     * @param {number} dy - Y-component of the vector\n     * @returns {GD8Symmetry} Approximation of the vector into\n     *  one of the eight symmetries.\n     */\n    byDirection: (dx: number, dy: number): GD8Symmetry =>\n    {\n        if (Math.abs(dx) * 2 <= Math.abs(dy))\n        {\n            if (dy >= 0)\n            {\n                return groupD8.S;\n            }\n\n            return groupD8.N;\n        }\n        else if (Math.abs(dy) * 2 <= Math.abs(dx))\n        {\n            if (dx > 0)\n            {\n                return groupD8.E;\n            }\n\n            return groupD8.W;\n        }\n        else if (dy > 0)\n        {\n            if (dx > 0)\n            {\n                return groupD8.SE;\n            }\n\n            return groupD8.SW;\n        }\n        else if (dx > 0)\n        {\n            return groupD8.NE;\n        }\n\n        return groupD8.NW;\n    },\n\n    /**\n     * Helps sprite to compensate texture packer rotation.\n     * @memberof maths.groupD8\n     * @param {Matrix} matrix - sprite world matrix\n     * @param {GD8Symmetry} rotation - The rotation factor to use.\n     * @param {number} tx - sprite anchoring\n     * @param {number} ty - sprite anchoring\n     */\n    matrixAppendRotationInv: (matrix: Matrix, rotation: GD8Symmetry, tx = 0, ty = 0): void =>\n    {\n        // Packer used \"rotation\", we use \"inv(rotation)\"\n        const mat: Matrix = rotationMatrices[groupD8.inv(rotation)];\n\n        mat.tx = tx;\n        mat.ty = ty;\n        matrix.append(mat);\n    },\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7477, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7483, "column": 0}, "map": {"version":3,"file":"NOOP.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/misc/NOOP.ts"],"sourcesContent":["export const NOOP = () =>\n{\n    // empty!\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,OAAO,KAGpB,CAFA","ignoreList":[0]}},
    {"offset": {"line": 7490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7496, "column": 0}, "map": {"version":3,"file":"BufferImageSource.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/texture/sources/BufferImageSource.ts"],"sourcesContent":["import { ExtensionType } from '../../../../../extensions/Extensions';\nimport { TextureSource } from './TextureSource';\n\nimport type { ExtensionMetadata } from '../../../../../extensions/Extensions';\nimport type { TypedArray } from '../../buffer/Buffer';\nimport type { TextureSourceOptions } from './TextureSource';\n\nexport interface BufferSourceOptions extends TextureSourceOptions<TypedArray | ArrayBuffer>\n{\n    width: number;\n    height: number;\n}\n\nexport class BufferImageSource extends TextureSource<TypedArray | ArrayBuffer>\n{\n    public static extension: ExtensionMetadata = ExtensionType.TextureSource;\n\n    public uploadMethodId = 'buffer';\n\n    constructor(options: BufferSourceOptions)\n    {\n        const buffer = options.resource || new Float32Array(options.width * options.height * 4);\n        let format = options.format;\n\n        if (!format)\n        {\n            if (buffer instanceof Float32Array)\n            {\n                format = 'rgba32float';\n            }\n            else if (buffer instanceof Int32Array)\n            {\n                format = 'rgba32uint';\n            }\n            else if (buffer instanceof Uint32Array)\n            {\n                format = 'rgba32uint';\n            }\n            else if (buffer instanceof Int16Array)\n            {\n                format = 'rgba16uint';\n            }\n            else if (buffer instanceof Uint16Array)\n            {\n                format = 'rgba16uint';\n            }\n            else if (buffer instanceof Int8Array)\n            {\n                format = 'bgra8unorm';\n            }\n            else\n            {\n                format = 'bgra8unorm';\n            }\n        }\n\n        super({\n            ...options,\n            resource: buffer,\n            format,\n        });\n    }\n\n    public static test(resource: any): resource is TypedArray | ArrayBuffer\n    {\n        return resource instanceof Int8Array\n        || resource instanceof Uint8Array\n        || resource instanceof Uint8ClampedArray\n        || resource instanceof Int16Array\n        || resource instanceof Uint16Array\n        || resource instanceof Int32Array\n        || resource instanceof Uint32Array\n        || resource instanceof Float32Array;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAaO,MAAM,2OAA0B,gBACvC,CAAA;IAKI,YAAY,OACZ,CAAA;QACU,MAAA,MAAA,GAAS,QAAQ,QAAY,IAAA,IAAI,aAAa,OAAQ,CAAA,KAAA,GAAQ,OAAQ,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;QACtF,IAAI,SAAS,OAAQ,CAAA,MAAA,CAAA;QAErB,IAAI,CAAC,MACL,EAAA;YACI,IAAI,kBAAkB,YACtB,EAAA;gBACa,MAAA,GAAA,aAAA,CAAA;YAAA,CACb,MAAA,IACS,kBAAkB,UAC3B,EAAA;gBACa,MAAA,GAAA,YAAA,CAAA;YAAA,CACb,MAAA,IACS,kBAAkB,WAC3B,EAAA;gBACa,MAAA,GAAA,YAAA,CAAA;YAAA,CACb,MAAA,IACS,kBAAkB,UAC3B,EAAA;gBACa,MAAA,GAAA,YAAA,CAAA;YAAA,CACb,MAAA,IACS,kBAAkB,WAC3B,EAAA;gBACa,MAAA,GAAA,YAAA,CAAA;YAAA,CACb,MAAA,IACS,kBAAkB,SAC3B,EAAA;gBACa,MAAA,GAAA,YAAA,CAAA;YAAA,CAGb,MAAA;gBACa,MAAA,GAAA,YAAA,CAAA;YAAA,CACb;QAAA,CACJ;QAEM,KAAA,CAAA;YACF,GAAG,OAAA;YACH,QAAU,EAAA,MAAA;YACV,MAAA;QAAA,CACH,CAAA,CAAA;QA3CL,IAAA,CAAO,cAAiB,GAAA,QAAA,CAAA;IAAA,CA4CxB;IAEA,OAAc,KAAK,QACnB,EAAA;QACI,OAAO,QAAoB,YAAA,SAAA,IACxB,QAAoB,YAAA,UAAA,IACpB,oBAAoB,iBACpB,IAAA,QAAA,YAAoB,UACpB,IAAA,QAAA,YAAoB,WACpB,IAAA,QAAA,YAAoB,UACpB,IAAA,QAAA,YAAoB,eACpB,QAAoB,YAAA,YAAA,CAAA;IAAA,CAC3B;AACJ,CAAA;AA7Da,iBAAA,CAEK,SAAA,qKAA+B,gBAAc,CAAA,aAAA","ignoreList":[0]}},
    {"offset": {"line": 7539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7545, "column": 0}, "map": {"version":3,"file":"Texture.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/texture/Texture.ts"],"sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { groupD8 } from '../../../../maths/matrix/groupD8';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport { uid } from '../../../../utils/data/uid';\nimport { deprecation, v8_0_0 } from '../../../../utils/logging/deprecation';\nimport { NOOP } from '../../../../utils/misc/NOOP';\nimport { BufferImageSource } from './sources/BufferImageSource';\nimport { TextureSource } from './sources/TextureSource';\nimport { TextureMatrix } from './TextureMatrix';\n\nimport type { TextureResourceOrOptions } from './utils/textureFrom';\n\n/**\n * Stores the width of the non-scalable borders, for example when used with {@link scene.NineSlicePlane} texture.\n * @memberof rendering\n */\nexport interface TextureBorders\n{\n    /** left border in pixels */\n    left: number;\n    /** top border in pixels */\n    top: number;\n    /** right border in pixels */\n    right: number;\n    /** bottom border in pixels */\n    bottom: number;\n}\n\n/**\n * The UVs data structure for a texture.\n * @memberof rendering\n */\nexport type UVs = {\n    x0: number;\n    y0: number;\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    x3: number;\n    y3: number;\n};\n\n/**\n * The options that can be passed to a new Texture\n * @memberof rendering\n */\nexport interface TextureOptions<TextureSourceType extends TextureSource = TextureSource>\n{\n    /** the underlying texture data that this texture will use  */\n    source?: TextureSourceType;\n    /** optional label, for debugging */\n    label?: string;\n    /** The rectangle frame of the texture to show */\n    frame?: Rectangle;\n    /** The area of original texture */\n    orig?: Rectangle;\n    /** Trimmed rectangle of original texture */\n    trim?: Rectangle;\n    /** Default anchor point used for sprite placement / rotation */\n    defaultAnchor?: { x: number; y: number };\n    /** Default borders used for 9-slice scaling {@link NineSlicePlane}*/\n    defaultBorders?: TextureBorders;\n    /** indicates how the texture was rotated by texture packer. See {@link groupD8} */\n    rotate?: number;\n    /**\n     * Set to true if you plan on modifying this texture's frame, UVs, or swapping its source at runtime.\n     * This is false by default as it improves performance. Generally, it's recommended to create new\n     * textures and swap those rather than modifying an existing texture's properties unless you are\n     * working with a dynamic frames.\n     * Not setting this to true when modifying the texture can lead to visual artifacts.\n     *\n     * If this is false and you modify the texture, you can manually update the sprite's texture by calling\n     * `sprite.onViewUpdate()`.\n     */\n    dynamic?: boolean;\n}\n\nexport interface BindableTexture\n{\n    source: TextureSource;\n}\n\nexport type TextureSourceLike = TextureSource | TextureResourceOrOptions | string;\n\n/**\n * A texture stores the information that represents an image or part of an image.\n *\n * A texture must have a loaded resource passed to it to work. It does not contain any\n * loading mechanisms.\n *\n * The Assets class can be used to load an texture from a file. This is the recommended\n * way as it will handle the loading and caching for you.\n *\n * ```js\n *\n * const texture = await Assets.load('assets/image.png');\n *\n * // once Assets has loaded the image it will be available via the from method\n * const sameTexture = Texture.from('assets/image.png');\n * // another way to access the texture once loaded\n * const sameAgainTexture = Asset.get('assets/image.png');\n *\n * const sprite1 = new Sprite(texture);\n *\n * ```\n *\n * It cannot be added to the display list directly; instead use it as the texture for a Sprite.\n * If no frame is provided for a texture, then the whole image is used.\n *\n * You can directly create a texture from an image and then reuse it multiple times like this :\n *\n * ```js\n * import { Sprite, Texture } from 'pixi.js';\n *\n * const texture = await Assets.load('assets/image.png');\n * const sprite1 = new Sprite(texture);\n * const sprite2 = new Sprite(texture);\n * ```\n *\n * If you didn't pass the texture frame to constructor, it enables `noFrame` mode:\n * it subscribes on baseTexture events, it automatically resizes at the same time as baseTexture.\n * @memberof rendering\n * @class\n */\nexport class Texture<TextureSourceType extends TextureSource = TextureSource> extends EventEmitter<{\n    update: Texture\n    destroy: Texture\n}> implements BindableTexture\n{\n    /**\n     * Helper function that creates a returns Texture based on the source you provide.\n     * The source should be loaded and ready to go. If not its best to grab the asset using Assets.\n     * @param id - String or Source to create texture from\n     * @param skipCache - Skip adding the texture to the cache\n     * @returns The texture based on the Id provided\n     */\n    public static from: (id: TextureSourceLike, skipCache?: boolean) => Texture;\n\n    /** label used for debugging */\n    public label?: string;\n    /** unique id for this texture */\n    public readonly uid: number = uid('texture');\n    /**\n     * Has the texture been destroyed?\n     * @readonly\n     */\n    public destroyed: boolean;\n\n    public _source: TextureSourceType;\n\n    /**\n     * Indicates whether the texture is rotated inside the atlas\n     * set to 2 to compensate for texture packer rotation\n     * set to 6 to compensate for spine packer rotation\n     * can be used to rotate or mirror sprites\n     * See {@link maths.groupD8} for explanation\n     */\n    public readonly rotate: number;\n    /** A uvs object based on the given frame and the texture source */\n    public readonly uvs: UVs = { x0: 0, y0: 0, x1: 0, y1: 0, x2: 0, y2: 0, x3: 0, y3: 0 };\n    /**\n     * Anchor point that is used as default if sprite is created with this texture.\n     * Changing the `defaultAnchor` at a later point of time will not update Sprite's anchor point.\n     * @default {0,0}\n     */\n    public readonly defaultAnchor?: { x: number; y: number };\n    /**\n     * Default width of the non-scalable border that is used if 9-slice plane is created with this texture.\n     * @since 7.2.0\n     * @see scene.NineSliceSprite\n     */\n    public readonly defaultBorders?: TextureBorders;\n    /**\n     * This is the area of the BaseTexture image to actually copy to the Canvas / WebGL when rendering,\n     * irrespective of the actual frame size or placement (which can be influenced by trimmed texture atlases)\n     */\n    public readonly frame = new Rectangle();\n    /** This is the area of original texture, before it was put in atlas. */\n    public readonly orig: Rectangle;\n    /**\n     * This is the trimmed area of original texture, before it was put in atlas\n     * Please call `updateUvs()` after you change coordinates of `trim` manually.\n     */\n    public readonly trim: Rectangle;\n\n    /**\n     * Does this Texture have any frame data assigned to it?\n     *\n     * This mode is enabled automatically if no frame was passed inside constructor.\n     *\n     * In this mode texture is subscribed to baseTexture events, and fires `update` on any change.\n     *\n     * Beware, after loading or resize of baseTexture event can fired two times!\n     * If you want more control, subscribe on baseTexture itself.\n     * @example\n     * texture.on('update', () => {});\n     */\n    public noFrame = false;\n\n    /**\n     * Set to true if you plan on modifying the uvs of this texture.\n     * When this is the case, sprites and other objects using the texture will\n     * make sure to listen for changes to the uvs and update their vertices accordingly.\n     */\n    public dynamic = false;\n\n    private _textureMatrix: TextureMatrix;\n\n    /** is it a texture? yes! used for type checking */\n    public readonly isTexture = true;\n\n    /**\n     * @param {rendering.TextureOptions} options - Options for the texture\n     */\n    constructor({\n        source,\n        label,\n        frame,\n        orig,\n        trim,\n        defaultAnchor,\n        defaultBorders,\n        rotate,\n        dynamic\n    }: TextureOptions<TextureSourceType> = {})\n    {\n        super();\n\n        this.label = label;\n        this.source = (source?.source ?? new TextureSource()) as TextureSourceType;\n\n        this.noFrame = !frame;\n\n        if (frame)\n        {\n            this.frame.copyFrom(frame);\n        }\n        else\n        {\n            const { width, height } = this._source;\n\n            this.frame.width = width;\n            this.frame.height = height;\n        }\n\n        this.orig = orig || this.frame;\n        this.trim = trim;\n\n        this.rotate = rotate ?? 0;\n        this.defaultAnchor = defaultAnchor;\n        this.defaultBorders = defaultBorders;\n\n        this.destroyed = false;\n        this.dynamic = dynamic || false;\n\n        this.updateUvs();\n    }\n\n    set source(value: TextureSourceType)\n    {\n        if (this._source)\n        {\n            this._source.off('resize', this.update, this);\n        }\n\n        this._source = value;\n\n        value.on('resize', this.update, this);\n\n        this.emit('update', this);\n    }\n\n    /** the underlying source of the texture (equivalent of baseTexture in v7) */\n    get source(): TextureSourceType\n    {\n        return this._source;\n    }\n\n    /** returns a TextureMatrix instance for this texture. By default, that object is not created because its heavy. */\n    get textureMatrix()\n    {\n        if (!this._textureMatrix)\n        {\n            this._textureMatrix = new TextureMatrix(this);\n        }\n\n        return this._textureMatrix;\n    }\n\n    /** The width of the Texture in pixels. */\n    get width(): number\n    {\n        return this.orig.width;\n    }\n\n    /** The height of the Texture in pixels. */\n    get height(): number\n    {\n        return this.orig.height;\n    }\n\n    /** Call this function when you have modified the frame of this texture. */\n    public updateUvs()\n    {\n        const { uvs, frame } = this;\n        const { width, height } = this._source;\n\n        const nX = frame.x / width;\n        const nY = frame.y / height;\n\n        const nW = frame.width / width;\n        const nH = frame.height / height;\n\n        let rotate = this.rotate;\n\n        if (rotate)\n        {\n            // width and height div 2 div baseFrame size\n            const w2 = nW / 2;\n            const h2 = nH / 2;\n\n            // coordinates of center\n            const cX = nX + w2;\n            const cY = nY + h2;\n\n            rotate = groupD8.add(rotate, groupD8.NW); // NW is top-left corner\n            uvs.x0 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y0 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2); // rotate 90 degrees clockwise\n            uvs.x1 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y1 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            uvs.x2 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y2 = cY + (h2 * groupD8.uY(rotate));\n\n            rotate = groupD8.add(rotate, 2);\n            uvs.x3 = cX + (w2 * groupD8.uX(rotate));\n            uvs.y3 = cY + (h2 * groupD8.uY(rotate));\n        }\n\n        else\n        {\n            uvs.x0 = nX;\n            uvs.y0 = nY;\n            uvs.x1 = nX + nW;\n            uvs.y1 = nY;\n            uvs.x2 = nX + nW;\n            uvs.y2 = nY + nH;\n            uvs.x3 = nX;\n            uvs.y3 = nY + nH;\n        }\n    }\n\n    /**\n     * Destroys this texture\n     * @param destroySource - Destroy the source when the texture is destroyed.\n     */\n    public destroy(destroySource = false)\n    {\n        if (this._source)\n        {\n            if (destroySource)\n            {\n                this._source.destroy();\n                this._source = null;\n            }\n        }\n\n        this._textureMatrix = null;\n        this.destroyed = true;\n        this.emit('destroy', this);\n        this.removeAllListeners();\n    }\n\n    /**\n     * Call this if you have modified the `texture outside` of the constructor.\n     *\n     * If you have modified this texture's source, you must separately call `texture.source.update()` to see those changes.\n     */\n    public update(): void\n    {\n        if (this.noFrame)\n        {\n            this.frame.width = this._source.width;\n            this.frame.height = this._source.height;\n        }\n\n        this.updateUvs();\n        this.emit('update', this);\n    }\n\n    /** @deprecated since 8.0.0 */\n    get baseTexture(): TextureSource\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Texture.baseTexture is now Texture.source');\n        // #endif\n\n        return this._source;\n    }\n\n    /** an Empty Texture used internally by the engine */\n    public static EMPTY: Texture;\n    /** a White texture used internally by the engine */\n    public static WHITE: Texture<BufferImageSource>;\n}\n\nTexture.EMPTY = new Texture({\n    label: 'EMPTY',\n    source: new TextureSource({\n        label: 'EMPTY',\n    })\n});\n\nTexture.EMPTY.destroy = NOOP;\n\nTexture.WHITE = new Texture({\n    source: new BufferImageSource({\n        resource: new Uint8Array([255, 255, 255, 255]),\n        width: 1,\n        height: 1,\n        alphaMode: 'premultiply-alpha-on-upload',\n        label: 'WHITE',\n    }),\n    label: 'WHITE',\n});\n\nTexture.WHITE.destroy = NOOP;\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7747, "column": 0}, "map": {"version":3,"file":"buildUvs.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/buildUvs.ts"],"sourcesContent":["import type { Matrix } from '../../../../../maths/matrix/Matrix';\n\n/**\n * Takes a vertices array and a matrix and transforms the vertices based on the matrix.\n * this out put is written to the uvs array\n * @param vertices - the vertices to calculate uvs from\n * @param verticesStride - the stride of the vertice\n * @param verticesOffset - the offset of the vertices\n * @param uvs - the uvs to fill\n * @param uvsOffset - the offset of the uvs\n * @param uvsStride - the stride of the uvs\n * @param size - the size of the vertices\n * @param matrix - the matrix to apply to the uvs\n * @memberof rendering\n */\nexport function buildUvs(\n    vertices: number[],\n    verticesStride: number,\n    verticesOffset: number,\n\n    uvs: number[],\n    uvsOffset: number,\n    uvsStride: number,\n\n    size: number,\n    matrix: Matrix = null\n): void\n{\n    let index = 0;\n\n    verticesOffset *= verticesStride;\n    uvsOffset *= uvsStride;\n\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n\n    while (index < size)\n    {\n        const x = vertices[verticesOffset];\n        const y = vertices[verticesOffset + 1];\n\n        uvs[uvsOffset] = (a * x) + (c * y) + tx;\n        uvs[uvsOffset + 1] = (b * x) + (d * y) + ty;\n\n        uvsOffset += uvsStride;\n\n        verticesOffset += verticesStride;\n\n        index++;\n    }\n}\n\nexport function buildSimpleUvs(\n    uvs: number[],\n    uvsOffset: number,\n    uvsStride: number,\n    size: number,\n)\n{\n    let index = 0;\n\n    uvsOffset *= uvsStride;\n\n    while (index < size)\n    {\n        uvs[uvsOffset] = 0;\n        uvs[uvsOffset + 1] = 0;\n\n        uvsOffset += uvsStride;\n\n        index++;\n    }\n}\n"],"names":[],"mappings":";;;;;AAegB,SAAA,QAAA,CACZ,QAAA,EACA,cACA,EAAA,cAAA,EAEA,GAAA,EACA,SACA,EAAA,SAAA,EAEA,IACA,EAAA,MAAA,GAAiB,IAErB,EAAA;IACI,IAAI,KAAQ,GAAA,CAAA,CAAA;IAEM,cAAA,IAAA,cAAA,CAAA;IACL,SAAA,IAAA,SAAA,CAAA;IAEb,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,KAAK,MAAO,CAAA,EAAA,CAAA;IAClB,MAAM,KAAK,MAAO,CAAA,EAAA,CAAA;IAElB,MAAO,QAAQ,IACf,CAAA;QACU,MAAA,CAAA,GAAI,QAAA,CAAS,cAAc,CAAA,CAAA;QAC3B,MAAA,CAAA,GAAI,QAAS,CAAA,cAAA,GAAiB,CAAC,CAAA,CAAA;QAErC,GAAA,CAAI,SAAS,CAAA,GAAK,CAAI,GAAA,CAAA,GAAM,IAAI,CAAK,GAAA,EAAA,CAAA;QACrC,GAAA,CAAI,YAAY,CAAC,CAAA,GAAK,CAAI,GAAA,CAAA,GAAM,IAAI,CAAK,GAAA,EAAA,CAAA;QAE5B,SAAA,IAAA,SAAA,CAAA;QAEK,cAAA,IAAA,cAAA,CAAA;QAElB,KAAA,EAAA,CAAA;IAAA,CACJ;AACJ,CAAA;AAEO,SAAS,cACZ,CAAA,GAAA,EACA,SACA,EAAA,SAAA,EACA,IAEJ,EAAA;IACI,IAAI,KAAQ,GAAA,CAAA,CAAA;IAEC,SAAA,IAAA,SAAA,CAAA;IAEb,MAAO,QAAQ,IACf,CAAA;QACI,GAAA,CAAI,SAAS,CAAI,GAAA,CAAA,CAAA;QACb,GAAA,CAAA,SAAA,GAAY,CAAC,CAAI,GAAA,CAAA,CAAA;QAER,SAAA,IAAA,SAAA,CAAA;QAEb,KAAA,EAAA,CAAA;IAAA,CACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 7784, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7790, "column": 0}, "map": {"version":3,"file":"buildContextBatches.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/utils/buildContextBatches.ts"],"sourcesContent":["import { extensions, ExtensionType } from '../../../../extensions/Extensions';\nimport { Rectangle } from '../../../../maths/shapes/Rectangle';\nimport { buildSimpleUvs, buildUvs } from '../../../../rendering/renderers/shared/geometry/utils/buildUvs';\nimport { transformVertices } from '../../../../rendering/renderers/shared/geometry/utils/transformVertices';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { BigPool } from '../../../../utils/pool/PoolGroup';\nimport { BatchableGraphics } from '../BatchableGraphics';\nimport { buildCircle, buildEllipse, buildRoundedRectangle } from '../buildCommands/buildCircle';\nimport { buildLine } from '../buildCommands/buildLine';\nimport { buildPixelLine } from '../buildCommands/buildPixelLine';\nimport { buildPolygon } from '../buildCommands/buildPolygon';\nimport { buildRectangle } from '../buildCommands/buildRectangle';\nimport { buildTriangle } from '../buildCommands/buildTriangle';\nimport { triangulateWithHoles } from './triangulateWithHoles';\n\nimport type { Polygon } from '../../../../maths/shapes/Polygon';\nimport type { Topology } from '../../../../rendering/renderers/shared/geometry/const';\nimport type { ShapeBuildCommand } from '../buildCommands/ShapeBuildCommand';\nimport type { ConvertedFillStyle, ConvertedStrokeStyle } from '../FillTypes';\nimport type { GraphicsContext, TextureInstruction } from '../GraphicsContext';\nimport type { GpuGraphicsContext } from '../GraphicsContextSystem';\nimport type { GraphicsPath } from '../path/GraphicsPath';\nimport type { ShapePath } from '../path/ShapePath';\n\nexport const shapeBuilders: Record<string, ShapeBuildCommand> = {};\n\nextensions.handleByMap(ExtensionType.ShapeBuilder, shapeBuilders);\nextensions.add(buildRectangle, buildPolygon, buildTriangle, buildCircle, buildEllipse, buildRoundedRectangle);\n\nconst tempRect = new Rectangle();\n\nexport function buildContextBatches(context: GraphicsContext, gpuContext: GpuGraphicsContext)\n{\n    const { geometryData, batches } = gpuContext;\n\n    // reset them..\n    batches.length = 0;\n    geometryData.indices.length = 0;\n    geometryData.vertices.length = 0;\n    geometryData.uvs.length = 0;\n\n    for (let i = 0; i < context.instructions.length; i++)\n    {\n        const instruction = context.instructions[i];\n\n        if (instruction.action === 'texture')\n        {\n            // add a quad!\n            addTextureToGeometryData(instruction.data, batches, geometryData);\n        }\n        else if (instruction.action === 'fill' || instruction.action === 'stroke')\n        {\n            const isStroke = instruction.action === 'stroke';\n\n            // build path collection of polys and shapes points..\n            const shapePath = instruction.data.path.shapePath;\n\n            const style = instruction.data.style;\n\n            const hole = instruction.data.hole;\n\n            if (isStroke && hole)\n            {\n                addShapePathToGeometryData(hole.shapePath, style, null, true, batches, geometryData);\n            }\n\n            addShapePathToGeometryData(shapePath, style, hole, isStroke, batches, geometryData);\n        }\n    }\n}\n\nfunction addTextureToGeometryData(\n    data: TextureInstruction['data'],\n    batches: BatchableGraphics[],\n    geometryData: {\n        vertices: number[];\n        uvs: number[];\n        indices: number[];\n    }\n)\n{\n    const { vertices, uvs, indices } = geometryData;\n\n    const indexOffset = indices.length;\n    const vertOffset = vertices.length / 2;\n\n    const points: number[] = [];\n\n    const build = shapeBuilders.rectangle;\n\n    const rect = tempRect;\n\n    const texture = data.image;\n\n    rect.x = data.dx;\n    rect.y = data.dy;\n    rect.width = data.dw;\n    rect.height = data.dh;\n\n    const matrix = data.transform;\n\n    // TODO - this can be cached...\n    build.build(rect, points);\n\n    if (matrix)\n    {\n        transformVertices(points, matrix);\n    }\n\n    build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n\n    const textureUvs = texture.uvs;\n\n    uvs.push(\n        textureUvs.x0, textureUvs.y0,\n        textureUvs.x1, textureUvs.y1,\n        textureUvs.x3, textureUvs.y3,\n        textureUvs.x2, textureUvs.y2,\n    );\n\n    const graphicsBatch = BigPool.get(BatchableGraphics);\n\n    graphicsBatch.indexOffset = indexOffset;\n    graphicsBatch.indexSize = indices.length - indexOffset;\n\n    graphicsBatch.attributeOffset = vertOffset;\n    graphicsBatch.attributeSize = (vertices.length / 2) - vertOffset;\n\n    graphicsBatch.baseColor = data.style;\n    graphicsBatch.alpha = data.alpha;\n\n    graphicsBatch.texture = texture;\n    graphicsBatch.geometryData = geometryData;\n\n    batches.push(graphicsBatch);\n}\n\nfunction addShapePathToGeometryData(\n    shapePath: ShapePath,\n    style: ConvertedFillStyle | ConvertedStrokeStyle,\n    hole: GraphicsPath,\n    isStroke: boolean,\n    batches: BatchableGraphics[],\n    geometryData: {\n        vertices: number[];\n        uvs: number[];\n        indices: number[];\n    }\n)\n{\n    const { vertices, uvs, indices } = geometryData;\n    const lastIndex = shapePath.shapePrimitives.length - 1;\n\n    shapePath.shapePrimitives.forEach(({ shape, transform: matrix }, i) =>\n    {\n        const indexOffset = indices.length;\n        const vertOffset = vertices.length / 2;\n\n        const points: number[] = [];\n\n        const build = shapeBuilders[shape.type];\n        let topology: Topology = 'triangle-list';\n        // TODO - this can be cached...\n        // TODO - THIS IS DONE TWICE!!!!!!\n        // ONCE FOR STROKE AND ONCE FOR FILL\n        // move to the ShapePath2D class itself?\n\n        build.build(shape, points);\n\n        if (matrix)\n        {\n            transformVertices(points, matrix);\n        }\n\n        if (!isStroke)\n        {\n            if (hole && lastIndex === i)\n            {\n                if (lastIndex !== 0)\n                {\n                    console.warn('[Pixi Graphics] only the last shape have be cut out');\n                }\n\n                const holeIndices: number[] = [];\n\n                const otherPoints = points.slice();\n\n                const holeArrays = getHoleArrays(hole.shapePath);\n\n                holeArrays.forEach((holePoints) =>\n                {\n                    holeIndices.push(otherPoints.length / 2);\n                    otherPoints.push(...holePoints);\n                });\n\n                triangulateWithHoles(otherPoints, holeIndices, vertices, 2, vertOffset, indices, indexOffset);\n            }\n            else\n            {\n                build.triangulate(points, vertices, 2, vertOffset, indices, indexOffset);\n            }\n        }\n        else\n        {\n            const close = (shape as Polygon).closePath ?? true;\n            const lineStyle = style as ConvertedStrokeStyle;\n\n            if (!lineStyle.pixelLine)\n            {\n                buildLine(points, lineStyle, false, close, vertices, indices);\n            }\n            else\n            {\n                buildPixelLine(points, close, vertices, indices);\n                topology = 'line-list';\n            }\n        }\n\n        const uvsOffset = uvs.length / 2;\n\n        const texture = style.texture;\n\n        if (texture !== Texture.WHITE)\n        {\n            const textureMatrix = style.matrix;\n\n            if (textureMatrix)\n            {\n                // todo can prolly do this before calculating uvs..\n                if (matrix)\n                {\n                    textureMatrix.append(matrix.clone().invert());\n                }\n\n                buildUvs(vertices, 2, vertOffset, uvs, uvsOffset, 2, (vertices.length / 2) - vertOffset, textureMatrix);\n            }\n        }\n        else\n        {\n            buildSimpleUvs(uvs, uvsOffset, 2, (vertices.length / 2) - vertOffset);\n        }\n\n        const graphicsBatch = BigPool.get(BatchableGraphics);\n\n        graphicsBatch.indexOffset = indexOffset;\n        graphicsBatch.indexSize = indices.length - indexOffset;\n\n        graphicsBatch.attributeOffset = vertOffset;\n        graphicsBatch.attributeSize = (vertices.length / 2) - vertOffset;\n\n        graphicsBatch.baseColor = style.color;\n        graphicsBatch.alpha = style.alpha;\n\n        graphicsBatch.texture = texture;\n        graphicsBatch.geometryData = geometryData;\n        graphicsBatch.topology = topology;\n\n        batches.push(graphicsBatch);\n    });\n}\n\nfunction getHoleArrays(shape: ShapePath)\n{\n    if (!shape) return [];\n\n    const holePrimitives = shape.shapePrimitives;\n\n    const holeArrays = [];\n\n    for (let k = 0; k < holePrimitives.length; k++)\n    {\n        const holePrimitive = holePrimitives[k].shape;\n\n        // TODO - need to transform the points via there transform here..\n        const holePoints: number[] = [];\n\n        const holeBuilder = shapeBuilders[holePrimitive.type] as ShapeBuildCommand;\n\n        holeBuilder.build(holePrimitive, holePoints);\n\n        holeArrays.push(holePoints);\n    }\n\n    return holeArrays;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7960, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7966, "column": 0}, "map": {"version":3,"file":"BindGroup.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/gpu/shader/BindGroup.ts"],"sourcesContent":["import type { BindResource } from './BindResource';\n\n/**\n * A bind group is a collection of resources that are bound together for use by a shader.\n * They are essentially a wrapper for the WebGPU BindGroup class. But with the added bonus\n * that WebGL can also work with them.\n * @see https://gpuweb.github.io/gpuweb/#dictdef-gpubindgroupdescriptor\n * @example\n * // Create a bind group with a single texture and sampler\n * const bindGroup = new BindGroup({\n *    uTexture: texture.source,\n *    uTexture: texture.style,\n * });\n *\n * Bind groups resources must implement the {@link BindResource} interface.\n * The following resources are supported:\n * - {@link TextureSource}\n * - {@link TextureStyle}\n * - {@link Buffer}\n * - {@link BufferResource}\n * - {@link UniformGroup}\n *\n * The keys in the bind group must correspond to the names of the resources in the GPU program.\n *\n * This bind group class will also watch for changes in its resources ensuring that the changes\n * are reflected in the WebGPU BindGroup.\n * @memberof rendering\n */\nexport class BindGroup\n{\n    /** The resources that are bound together for use by a shader. */\n    public resources: Record<string, BindResource> = Object.create(null);\n    /**\n     * a key used internally to match it up to a WebGPU Bindgroup\n     * @internal\n     * @ignore\n     */\n    public _key: string;\n    private _dirty = true;\n\n    /**\n     * Create a new instance eof the Bind Group.\n     * @param resources - The resources that are bound together for use by a shader.\n     */\n    constructor(resources?: Record<string, BindResource>)\n    {\n        let index = 0;\n\n        for (const i in resources)\n        {\n            const resource: BindResource = resources[i];\n\n            this.setResource(resource, index++);\n        }\n\n        this._updateKey();\n    }\n\n    /**\n     * Updates the key if its flagged as dirty. This is used internally to\n     * match this bind group to a WebGPU BindGroup.\n     * @internal\n     * @ignore\n     */\n    public _updateKey(): void\n    {\n        if (!this._dirty) return;\n\n        this._dirty = false;\n\n        const keyParts = [];\n        let index = 0;\n\n        // TODO - lets use big ints instead of strings...\n        for (const i in this.resources)\n        {\n            // TODO make this consistent...\n            keyParts[index++] = this.resources[i]._resourceId;\n        }\n\n        this._key = keyParts.join('|');\n    }\n\n    /**\n     * Set a resource at a given index. this function will\n     * ensure that listeners will be removed from the current resource\n     * and added to the new resource.\n     * @param resource - The resource to set.\n     * @param index - The index to set the resource at.\n     */\n    public setResource(resource: BindResource, index: number): void\n    {\n        const currentResource = this.resources[index];\n\n        if (resource === currentResource) return;\n\n        if (currentResource)\n        {\n            resource.off?.('change', this.onResourceChange, this);\n        }\n\n        resource.on?.('change', this.onResourceChange, this);\n\n        this.resources[index] = resource;\n        this._dirty = true;\n    }\n\n    /**\n     * Returns the resource at the current specified index.\n     * @param index - The index of the resource to get.\n     * @returns - The resource at the specified index.\n     */\n    public getResource(index: number): BindResource\n    {\n        return this.resources[index];\n    }\n\n    /**\n     * Used internally to 'touch' each resource, to ensure that the GC\n     * knows that all resources in this bind group are still being used.\n     * @param tick - The current tick.\n     * @internal\n     * @ignore\n     */\n    public _touch(tick: number)\n    {\n        const resources = this.resources;\n\n        for (const i in resources)\n        {\n            resources[i]._touched = tick;\n        }\n    }\n\n    /** Destroys this bind group and removes all listeners. */\n    public destroy()\n    {\n        const resources = this.resources;\n\n        for (const i in resources)\n        {\n            const resource = resources[i];\n\n            resource.off?.('change', this.onResourceChange, this);\n        }\n\n        this.resources = null;\n    }\n\n    protected onResourceChange(resource: BindResource)\n    {\n        this._dirty = true;\n\n        // check if a resource has been destroyed, if it has then we need to destroy this bind group\n        // using this bind group with a destroyed resource will cause the renderer to explode :)\n        if (resource.destroyed)\n        {\n            // free up the resource\n            const resources = this.resources;\n\n            for (const i in resources)\n            {\n                if (resources[i] === resource)\n                {\n                    resources[i] = null;\n                }\n            }\n        }\n        else\n        {\n            this._updateKey();\n        }\n    }\n}\n"],"names":[],"mappings":";;;;AA4BO,MAAM,SACb,CAAA;IAAA;;;GAAA,GAeI,YAAY,SACZ,CAAA;QAdA,+DAAA,GAAO,IAAA,CAAA,SAAA,GAAA,aAAA,GAAiD,MAAA,CAAA,MAAA,CAAO,IAAI,CAAA,CAAA;QAOnE,IAAA,CAAQ,MAAS,GAAA,IAAA,CAAA;QAQb,IAAI,KAAQ,GAAA,CAAA,CAAA;QAEZ,IAAA,MAAW,KAAK,SAChB,CAAA;YACU,MAAA,QAAA,GAAyB,SAAA,CAAU,CAAC,CAAA,CAAA;YAErC,IAAA,CAAA,WAAA,CAAY,UAAU,KAAO,EAAA,CAAA,CAAA;QAAA,CACtC;QAEA,IAAA,CAAK,UAAW,EAAA,CAAA;IAAA,CACpB;IAAA;;;;;GAAA,GAQO,UACP,GAAA;QACI,IAAI,CAAC,IAAK,CAAA,MAAA,EAAQ,OAAA;QAElB,IAAA,CAAK,MAAS,GAAA,KAAA,CAAA;QAEd,MAAM,WAAW,EAAC,CAAA;QAClB,IAAI,KAAQ,GAAA,CAAA,CAAA;QAGD,IAAA,MAAA,CAAA,IAAK,IAAA,CAAK,SACrB,CAAA;YAEI,QAAA,CAAS,KAAO,EAAA,CAAA,GAAI,IAAK,CAAA,SAAA,CAAU,CAAC,CAAE,CAAA,WAAA,CAAA;QAAA,CAC1C;QAEK,IAAA,CAAA,IAAA,GAAO,QAAS,CAAA,IAAA,CAAK,GAAG,CAAA,CAAA;IAAA,CACjC;IAAA;;;;;;GAAA,GASO,WAAA,CAAY,QAAA,EAAwB,KAC3C,EAAA;QACU,MAAA,eAAA,GAAkB,IAAK,CAAA,SAAA,CAAU,KAAK,CAAA,CAAA;QAE5C,IAAI,QAAa,KAAA,eAAA,EAAiB,OAAA;QAElC,IAAI,eACJ,EAAA;YACI,QAAA,CAAS,GAAM,GAAA,QAAA,EAAU,IAAK,CAAA,gBAAA,EAAkB,IAAI,CAAA,CAAA;QAAA,CACxD;QAEA,QAAA,CAAS,EAAK,GAAA,QAAA,EAAU,IAAK,CAAA,gBAAA,EAAkB,IAAI,CAAA,CAAA;QAE9C,IAAA,CAAA,SAAA,CAAU,KAAK,CAAI,GAAA,QAAA,CAAA;QACxB,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;IAAA,CAClB;IAAA;;;;GAAA,GAOO,YAAY,KACnB,EAAA;QACW,OAAA,IAAA,CAAK,SAAA,CAAU,KAAK,CAAA,CAAA;IAAA,CAC/B;IAAA;;;;;;GAAA,GASO,OAAO,IACd,EAAA;QACI,MAAM,YAAY,IAAK,CAAA,SAAA,CAAA;QAEvB,IAAA,MAAW,KAAK,SAChB,CAAA;YACc,SAAA,CAAA,CAAC,CAAA,CAAE,QAAW,GAAA,IAAA,CAAA;QAAA,CAC5B;IAAA,CACJ;IAAA,wDAAA,GAGO,OACP,GAAA;QACI,MAAM,YAAY,IAAK,CAAA,SAAA,CAAA;QAEvB,IAAA,MAAW,KAAK,SAChB,CAAA;YACU,MAAA,QAAA,GAAW,SAAA,CAAU,CAAC,CAAA,CAAA;YAE5B,QAAA,CAAS,GAAM,GAAA,QAAA,EAAU,IAAK,CAAA,gBAAA,EAAkB,IAAI,CAAA,CAAA;QAAA,CACxD;QAEA,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;IAAA,CACrB;IAEU,iBAAiB,QAC3B,EAAA;QACI,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;QAId,IAAI,SAAS,SACb,EAAA;YAEI,MAAM,YAAY,IAAK,CAAA,SAAA,CAAA;YAEvB,IAAA,MAAW,KAAK,SAChB,CAAA;gBACQ,IAAA,SAAA,CAAU,CAAC,CAAA,KAAM,QACrB,EAAA;oBACI,SAAA,CAAU,CAAC,CAAI,GAAA,IAAA,CAAA;gBAAA,CACnB;YAAA,CACJ;QAAA,CAGJ,MAAA;YACI,IAAA,CAAK,UAAW,EAAA,CAAA;QAAA,CACpB;IAAA,CACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 8058, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8064, "column": 0}, "map": {"version":3,"file":"getTextureBatchBindGroup.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/batcher/gpu/getTextureBatchBindGroup.ts"],"sourcesContent":["import { BindGroup } from '../../renderers/gpu/shader/BindGroup';\nimport { Texture } from '../../renderers/shared/texture/Texture';\nimport { getMaxTexturesPerBatch } from '../gl/utils/maxRecommendedTextures';\n\nimport type { TextureSource } from '../../renderers/shared/texture/sources/TextureSource';\n\nconst cachedGroups: Record<number, BindGroup> = {};\n\nexport function getTextureBatchBindGroup(textures: TextureSource[], size: number)\n{\n    let uid = 2166136261; // FNV-1a 32-bit offset basis\n\n    for (let i = 0; i < size; i++)\n    {\n        uid ^= textures[i].uid;\n        uid = Math.imul(uid, 16777619);\n        uid >>>= 0;\n    }\n\n    return cachedGroups[uid] || generateTextureBatchBindGroup(textures, size, uid);\n}\n\nlet maxTextures = 0;\n\nfunction generateTextureBatchBindGroup(textures: TextureSource[], size: number, key: number): BindGroup\n{\n    const bindGroupResources: Record<string, any> = {};\n\n    let bindIndex = 0;\n\n    if (!maxTextures)maxTextures = getMaxTexturesPerBatch();\n\n    for (let i = 0; i < maxTextures; i++)\n    {\n        const texture = i < size ? textures[i] : Texture.EMPTY.source;\n\n        bindGroupResources[bindIndex++] = texture.source;\n        bindGroupResources[bindIndex++] = texture.style;\n    }\n\n    // pad out with empty textures\n    const bindGroup = new BindGroup(bindGroupResources);\n\n    cachedGroups[key] = bindGroup;\n\n    return bindGroup;\n}\n\n"],"names":[],"mappings":";;;;;;;;;;AAMA,MAAM,eAA0C,CAAA,CAAC,CAAA;AAEjC,SAAA,wBAAA,CAAyB,QAAA,EAA2B,IACpE,EAAA;IACI,IAAI,GAAM,GAAA,UAAA,CAAA;IAEV,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,IAAA,EAAM,CAC1B,EAAA,CAAA;QACW,GAAA,IAAA,QAAA,CAAS,CAAC,CAAE,CAAA,GAAA,CAAA;QACb,GAAA,GAAA,IAAA,CAAK,IAAK,CAAA,GAAA,EAAK,QAAQ,CAAA,CAAA;QACpB,GAAA,MAAA,CAAA,CAAA;IAAA,CACb;IAEA,OAAO,YAAA,CAAa,GAAG,CAAA,IAAK,6BAA8B,CAAA,QAAA,EAAU,MAAM,GAAG,CAAA,CAAA;AACjF,CAAA;AAEA,IAAI,WAAc,GAAA,CAAA,CAAA;AAElB,SAAS,6BAAA,CAA8B,QAA2B,EAAA,IAAA,EAAc,GAChF,EAAA;IACI,MAAM,qBAA0C,CAAA,CAAC,CAAA;IAEjD,IAAI,SAAY,GAAA,CAAA,CAAA;IAEhB,IAAI,CAAC,WAAA,EAAY,WAAA,IAAc,mOAAA,AAAuB,EAAA,CAAA;IAEtD,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,WAAA,EAAa,CACjC,EAAA,CAAA;QACI,MAAM,UAAU,CAAI,GAAA,IAAA,GAAO,QAAA,CAAS,CAAC,CAAA,mMAAI,UAAA,CAAQ,KAAM,CAAA,MAAA,CAAA;QAEpC,kBAAA,CAAA,SAAA,EAAW,CAAA,GAAI,OAAQ,CAAA,MAAA,CAAA;QACvB,kBAAA,CAAA,SAAA,EAAW,CAAA,GAAI,OAAQ,CAAA,KAAA,CAAA;IAAA,CAC9C;IAGM,MAAA,SAAA,GAAY,kMAAI,YAAA,CAAU,kBAAkB,CAAA,CAAA;IAElD,YAAA,CAAa,GAAG,CAAI,GAAA,SAAA,CAAA;IAEb,OAAA,SAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 8100, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8106, "column": 0}, "map": {"version":3,"file":"GraphicsContextSystem.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/GraphicsContextSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { getTextureBatchBindGroup } from '../../../rendering/batcher/gpu/getTextureBatchBindGroup';\nimport { DefaultBatcher } from '../../../rendering/batcher/shared/DefaultBatcher';\nimport { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport { deprecation, v8_3_4 } from '../../../utils/logging/deprecation';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { buildContextBatches } from './utils/buildContextBatches';\n\nimport type { Batcher } from '../../../rendering/batcher/shared/Batcher';\nimport type { System } from '../../../rendering/renderers/shared/system/System';\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { PoolItem } from '../../../utils/pool/Pool';\nimport type { BatchableGraphics } from './BatchableGraphics';\nimport type { GraphicsContext } from './GraphicsContext';\n\ninterface GeometryData\n{\n    vertices: number[];\n    uvs: number[];\n    indices: number[];\n}\n\n/**\n * A class that holds batchable graphics data for a GraphicsContext.\n * @memberof rendering\n * @ignore\n */\nexport class GpuGraphicsContext\n{\n    public isBatchable: boolean;\n    public context: GraphicsContext;\n\n    public batches: BatchableGraphics[] = [];\n    public geometryData: GeometryData = {\n        vertices: [],\n        uvs: [],\n        indices: [],\n    };\n    public graphicsData: GraphicsContextRenderData;\n}\n\n/**\n * A class that holds the render data for a GraphicsContext.\n * @memberof rendering\n * @ignore\n */\nexport class GraphicsContextRenderData\n{\n    public batcher: Batcher = new DefaultBatcher();\n    public instructions = new InstructionSet();\n\n    public init()\n    {\n        this.instructions.reset();\n    }\n\n    /**\n     * @deprecated since version 8.0.0\n     * Use `batcher.geometry` instead.\n     * @see {Batcher#geometry}\n     */\n    get geometry()\n    {\n        // #if _DEBUG\n        deprecation(v8_3_4, 'GraphicsContextRenderData#geometry is deprecated, please use batcher.geometry instead.');\n        // #endif\n\n        return this.batcher.geometry;\n    }\n}\n\n/**\n * Options for the GraphicsContextSystem.\n * @memberof rendering\n */\nexport interface GraphicsContextSystemOptions\n{\n    /** A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother) */\n    bezierSmoothness?: number;\n}\n\n/**\n * A system that manages the rendering of GraphicsContexts.\n * @memberof rendering\n */\nexport class GraphicsContextSystem implements System<GraphicsContextSystemOptions>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n            ExtensionType.CanvasSystem,\n        ],\n        name: 'graphicsContext'\n    } as const;\n\n    /** The default options for the GraphicsContextSystem. */\n    public static readonly defaultOptions: GraphicsContextSystemOptions = {\n        /**\n         * A value from 0 to 1 that controls the smoothness of bezier curves (the higher the smoother)\n         * @default 0.5\n         */\n        bezierSmoothness: 0.5,\n    };\n\n    // the root context batches, used to either make a batch or geometry\n    // all graphics use this as a base\n    private _gpuContextHash: Record<number, GpuGraphicsContext> = {};\n    // used for non-batchable graphics\n    private _graphicsDataContextHash: Record<number, GraphicsContextRenderData> = Object.create(null);\n\n    constructor(renderer: Renderer)\n    {\n        renderer.renderableGC.addManagedHash(this, '_gpuContextHash');\n        renderer.renderableGC.addManagedHash(this, '_graphicsDataContextHash');\n    }\n\n    /**\n     * Runner init called, update the default options\n     * @ignore\n     */\n    public init(options?: GraphicsContextSystemOptions)\n    {\n        GraphicsContextSystem.defaultOptions.bezierSmoothness = options?.bezierSmoothness\n            ?? GraphicsContextSystem.defaultOptions.bezierSmoothness;\n    }\n\n    public getContextRenderData(context: GraphicsContext): GraphicsContextRenderData\n    {\n        return this._graphicsDataContextHash[context.uid] || this._initContextRenderData(context);\n    }\n\n    // Context management functions\n    public updateGpuContext(context: GraphicsContext)\n    {\n        let gpuContext: GpuGraphicsContext = this._gpuContextHash[context.uid]\n\n            || this._initContext(context);\n\n        if (context.dirty)\n        {\n            if (gpuContext)\n            {\n                this._cleanGraphicsContextData(context);\n            }\n            else\n            {\n                gpuContext = this._initContext(context);\n            }\n\n            buildContextBatches(context, gpuContext);\n\n            const batchMode = context.batchMode;\n\n            if (context.customShader || batchMode === 'no-batch')\n            {\n                gpuContext.isBatchable = false;\n            }\n            else if (batchMode === 'auto')\n            {\n                gpuContext.isBatchable = (gpuContext.geometryData.vertices.length < 400);\n            }\n\n            context.dirty = false;\n        }\n\n        return gpuContext;\n    }\n\n    public getGpuContext(context: GraphicsContext): GpuGraphicsContext\n    {\n        return this._gpuContextHash[context.uid] || this._initContext(context);\n    }\n\n    private _initContextRenderData(context: GraphicsContext): GraphicsContextRenderData\n    {\n        const graphicsData: GraphicsContextRenderData = BigPool.get(GraphicsContextRenderData);// ();\n\n        const { batches, geometryData } = this._gpuContextHash[context.uid];\n\n        const vertexSize = geometryData.vertices.length;\n        const indexSize = geometryData.indices.length;\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            batches[i].applyTransform = false;\n        }\n\n        const batcher = graphicsData.batcher;\n\n        // TODO we can pool buffers here eventually..\n        batcher.ensureAttributeBuffer(vertexSize);\n        batcher.ensureIndexBuffer(indexSize);\n\n        batcher.begin();\n\n        for (let i = 0; i < batches.length; i++)\n        {\n            const batch = batches[i];\n\n            batcher.add(batch);\n        }\n\n        batcher.finish(graphicsData.instructions);\n\n        const geometry = batcher.geometry;\n\n        // not to self - this works as we are assigning the batchers array buffer\n        // once its up loaded - this buffer is then put back in the pool to be reused.\n        // this mean we don't have to creating new Batchers for each graphics items\n        geometry.indexBuffer.setDataWithSize(batcher.indexBuffer, batcher.indexSize, true);\n        geometry.buffers[0].setDataWithSize(batcher.attributeBuffer.float32View, batcher.attributeSize, true);\n\n        const drawBatches = batcher.batches;\n\n        for (let i = 0; i < drawBatches.length; i++)\n        {\n            const batch = drawBatches[i];\n\n            batch.bindGroup = getTextureBatchBindGroup(batch.textures.textures, batch.textures.count);\n        }\n\n        this._graphicsDataContextHash[context.uid] = graphicsData;\n\n        return graphicsData;\n    }\n\n    private _initContext(context: GraphicsContext): GpuGraphicsContext\n    {\n        const gpuContext = new GpuGraphicsContext();\n\n        gpuContext.context = context;\n\n        this._gpuContextHash[context.uid] = gpuContext;\n\n        context.on('destroy', this.onGraphicsContextDestroy, this);\n\n        return this._gpuContextHash[context.uid];\n    }\n\n    protected onGraphicsContextDestroy(context: GraphicsContext)\n    {\n        this._cleanGraphicsContextData(context);\n\n        context.off('destroy', this.onGraphicsContextDestroy, this);\n\n        this._gpuContextHash[context.uid] = null;\n    }\n\n    private _cleanGraphicsContextData(context: GraphicsContext)\n    {\n        const gpuContext: GpuGraphicsContext = this._gpuContextHash[context.uid];\n\n        if (!gpuContext.isBatchable)\n        {\n            if (this._graphicsDataContextHash[context.uid])\n            {\n                BigPool.return(this.getContextRenderData(context) as PoolItem);\n\n                // we will rebuild this...\n                this._graphicsDataContextHash[context.uid] = null;\n            }\n        }\n\n        if (gpuContext.batches)\n        {\n            gpuContext.batches.forEach((batch) =>\n            {\n                BigPool.return(batch as PoolItem);\n            });\n        }\n    }\n\n    public destroy()\n    {\n        // Clean up all graphics contexts\n\n        for (const i in this._gpuContextHash)\n        {\n            if (this._gpuContextHash[i])\n            {\n                this.onGraphicsContextDestroy(this._gpuContextHash[i].context);\n            }\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8280, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { GraphicsContextSystem } from './shared/GraphicsContextSystem';\nimport { GraphicsPipe } from './shared/GraphicsPipe';\n\nextensions.add(GraphicsPipe);\nextensions.add(GraphicsContextSystem);\n"],"names":[],"mappings":";;;;;;;;kKAIA,aAAA,CAAW,GAAA,sLAAI,eAAY,CAAA,CAAA;kKAC3B,aAAA,CAAW,GAAA,+LAAI,wBAAqB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 8290, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8296, "column": 0}, "map": {"version":3,"file":"BatchableMesh.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/mesh/shared/BatchableMesh.ts"],"sourcesContent":["import type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { Batch, Batcher } from '../../../rendering/batcher/shared/Batcher';\nimport type { DefaultBatchableMeshElement } from '../../../rendering/batcher/shared/DefaultBatcher';\nimport type { Topology } from '../../../rendering/renderers/shared/geometry/const';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { ViewContainer } from '../../view/ViewContainer';\nimport type { MeshGeometry } from './MeshGeometry';\n\n/**\n * A batchable mesh object.\n * @ignore\n */\nexport class BatchableMesh implements DefaultBatchableMeshElement\n{\n    public batcherName = 'default';\n\n    public _topology: Topology;\n\n    public readonly packAsQuad = false;\n    public location: number;\n\n    public renderable: ViewContainer;\n\n    public indexOffset = 0;\n    public attributeOffset = 0;\n\n    public texture: Texture;\n    public geometry: MeshGeometry;\n    public transform: Matrix;\n    public roundPixels: 0 | 1 = 0;\n\n    public _attributeStart: number;\n    public _batcher: Batcher = null;\n    public _batch: Batch = null;\n    public _indexStart: number;\n    public _textureId: number;\n\n    private _transformedUvs: Float32Array;\n    private _uvUpdateId: number = -1;\n    private _textureMatrixUpdateId: number = -1;\n\n    get blendMode() { return this.renderable.groupBlendMode; }\n\n    get topology() { return this._topology || this.geometry.topology; }\n    set topology(value: Topology) { this._topology = value; }\n\n    public reset()\n    {\n        this.renderable = null;\n        this.texture = null;\n        this._batcher = null;\n        this._batch = null;\n        this.geometry = null;\n        this._uvUpdateId = -1;\n        this._textureMatrixUpdateId = -1;\n    }\n\n    get uvs()\n    {\n        const geometry = this.geometry;\n\n        const uvBuffer = geometry.getBuffer('aUV');\n\n        const uvs = uvBuffer.data;\n\n        let transformedUvs = uvs;\n        const textureMatrix = this.texture.textureMatrix;\n\n        if (!textureMatrix.isSimple)\n        {\n            transformedUvs = this._transformedUvs;\n\n            if (this._textureMatrixUpdateId !== textureMatrix._updateID || this._uvUpdateId !== uvBuffer._updateID)\n            {\n                if (!transformedUvs || transformedUvs.length < uvs.length)\n                {\n                    transformedUvs = this._transformedUvs = new Float32Array(uvs.length);\n                }\n\n                this._textureMatrixUpdateId = textureMatrix._updateID;\n                this._uvUpdateId = uvBuffer._updateID;\n\n                textureMatrix.multiplyUvs(uvs as Float32Array, transformedUvs);\n            }\n        }\n\n        return transformedUvs as Float32Array;\n    }\n\n    get positions()\n    {\n        return this.geometry.positions;\n    }\n\n    get indices()\n    {\n        return this.geometry.indices;\n    }\n\n    get color()\n    {\n        return this.renderable.groupColorAlpha;\n    }\n\n    get groupTransform()\n    {\n        return this.renderable.groupTransform;\n    }\n\n    get attributeSize()\n    {\n        return this.geometry.positions.length / 2;\n    }\n\n    get indexSize()\n    {\n        return this.geometry.indices.length;\n    }\n}\n"],"names":[],"mappings":";;;;AAYO,MAAM,aACb,CAAA;IADO,WAAA,EAAA;QAEH,IAAA,CAAO,WAAc,GAAA,SAAA,CAAA;QAIrB,IAAA,CAAgB,UAAa,GAAA,KAAA,CAAA;QAK7B,IAAA,CAAO,WAAc,GAAA,CAAA,CAAA;QACrB,IAAA,CAAO,eAAkB,GAAA,CAAA,CAAA;QAKzB,IAAA,CAAO,WAAqB,GAAA,CAAA,CAAA;QAG5B,IAAA,CAAO,QAAoB,GAAA,IAAA,CAAA;QAC3B,IAAA,CAAO,MAAgB,GAAA,IAAA,CAAA;QAKvB,IAAA,CAAQ,WAAsB,GAAA,CAAA,CAAA,CAAA;QAC9B,IAAA,CAAQ,sBAAiC,GAAA,CAAA,CAAA,CAAA;IAAA,CAAA;IAEzC,IAAI,SAAY,GAAA;QAAE,OAAO,IAAA,CAAK,UAAW,CAAA,cAAA,CAAA;IAAA,CAAgB;IAEzD,IAAI,QAAW,GAAA;QAAS,OAAA,IAAA,CAAK,SAAa,IAAA,IAAA,CAAK,QAAS,CAAA,QAAA,CAAA;IAAA,CAAU;IAClE,IAAI,SAAS,KAAiB,EAAA;QAAE,IAAA,CAAK,SAAY,GAAA,KAAA,CAAA;IAAA,CAAO;IAEjD,KACP,GAAA;QACI,IAAA,CAAK,UAAa,GAAA,IAAA,CAAA;QAClB,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;QACf,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;QAChB,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;QACd,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;QAChB,IAAA,CAAK,WAAc,GAAA,CAAA,CAAA,CAAA;QACnB,IAAA,CAAK,sBAAyB,GAAA,CAAA,CAAA,CAAA;IAAA,CAClC;IAEA,IAAI,GACJ,GAAA;QACI,MAAM,WAAW,IAAK,CAAA,QAAA,CAAA;QAEhB,MAAA,QAAA,GAAW,QAAS,CAAA,SAAA,CAAU,KAAK,CAAA,CAAA;QAEzC,MAAM,MAAM,QAAS,CAAA,IAAA,CAAA;QAErB,IAAI,cAAiB,GAAA,GAAA,CAAA;QACf,MAAA,aAAA,GAAgB,IAAA,CAAK,OAAQ,CAAA,aAAA,CAAA;QAE/B,IAAA,CAAC,cAAc,QACnB,EAAA;YACI,cAAA,GAAiB,IAAK,CAAA,eAAA,CAAA;YAEtB,IAAI,IAAA,CAAK,sBAA2B,KAAA,aAAA,CAAc,SAAA,IAAa,IAAK,CAAA,WAAA,KAAgB,SAAS,SAC7F,EAAA;gBACI,IAAI,CAAC,cAAA,IAAkB,cAAe,CAAA,MAAA,GAAS,IAAI,MACnD,EAAA;oBACI,cAAA,GAAiB,IAAK,CAAA,eAAA,GAAkB,IAAI,YAAA,CAAa,IAAI,MAAM,CAAA,CAAA;gBAAA,CACvE;gBAEA,IAAA,CAAK,sBAAA,GAAyB,aAAc,CAAA,SAAA,CAAA;gBAC5C,IAAA,CAAK,WAAA,GAAc,QAAS,CAAA,SAAA,CAAA;gBAEd,aAAA,CAAA,WAAA,CAAY,KAAqB,cAAc,CAAA,CAAA;YAAA,CACjE;QAAA,CACJ;QAEO,OAAA,cAAA,CAAA;IAAA,CACX;IAEA,IAAI,SACJ,GAAA;QACI,OAAO,IAAA,CAAK,QAAS,CAAA,SAAA,CAAA;IAAA,CACzB;IAEA,IAAI,OACJ,GAAA;QACI,OAAO,IAAA,CAAK,QAAS,CAAA,OAAA,CAAA;IAAA,CACzB;IAEA,IAAI,KACJ,GAAA;QACI,OAAO,IAAA,CAAK,UAAW,CAAA,eAAA,CAAA;IAAA,CAC3B;IAEA,IAAI,cACJ,GAAA;QACI,OAAO,IAAA,CAAK,UAAW,CAAA,cAAA,CAAA;IAAA,CAC3B;IAEA,IAAI,aACJ,GAAA;QACW,OAAA,IAAA,CAAK,QAAS,CAAA,SAAA,CAAU,MAAS,GAAA,CAAA,CAAA;IAAA,CAC5C;IAEA,IAAI,SACJ,GAAA;QACW,OAAA,IAAA,CAAK,QAAA,CAAS,OAAQ,CAAA,MAAA,CAAA;IAAA,CACjC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 8370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8376, "column": 0}, "map": {"version":3,"file":"MeshPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/mesh/shared/MeshPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { Matrix } from '../../../maths/matrix/Matrix';\nimport { BindGroup } from '../../../rendering/renderers/gpu/shader/BindGroup';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup';\nimport { getAdjustedBlendModeBlend } from '../../../rendering/renderers/shared/state/getAdjustedBlendModeBlend';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform';\nimport { BatchableMesh } from './BatchableMesh';\n\nimport type { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport type {\n    InstructionPipe,\n    RenderPipe\n} from '../../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { PoolItem } from '../../../utils/pool/Pool';\nimport type { Container } from '../../container/Container';\nimport type { Mesh } from './Mesh';\n\n// TODO Record mode is a P2, will get back to this as it's not a priority\n// const recordMode = true;\n\ninterface MeshData\n{\n    batched: boolean;\n    indexSize: number;\n    vertexSize: number;\n}\n\nexport interface MeshAdaptor\n{\n    init(): void;\n    execute(meshPipe: MeshPipe, mesh: Mesh): void;\n    destroy(): void;\n}\n\nexport class MeshPipe implements RenderPipe<Mesh>, InstructionPipe<Mesh>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'mesh',\n    } as const;\n\n    public localUniforms = new UniformGroup({\n        uTransformMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n        uColor: { value: new Float32Array([1, 1, 1, 1]), type: 'vec4<f32>' },\n        uRound: { value: 0, type: 'f32' },\n    });\n\n    public localUniformsBindGroup = new BindGroup({\n        0: this.localUniforms,\n    });\n\n    public renderer: Renderer;\n\n    private _meshDataHash: Record<number, MeshData> = Object.create(null);\n    private _gpuBatchableMeshHash: Record<number, BatchableMesh> = Object.create(null);\n    private _adaptor: MeshAdaptor;\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: Renderer, adaptor: MeshAdaptor)\n    {\n        this.renderer = renderer;\n        this._adaptor = adaptor;\n\n        this._adaptor.init();\n\n        renderer.renderableGC.addManagedHash(this, '_gpuBatchableMeshHash');\n        renderer.renderableGC.addManagedHash(this, '_meshDataHash');\n    }\n\n    public validateRenderable(mesh: Mesh): boolean\n    {\n        const meshData = this._getMeshData(mesh);\n\n        const wasBatched = meshData.batched;\n\n        const isBatched = mesh.batched;\n\n        meshData.batched = isBatched;\n\n        if (wasBatched !== isBatched)\n        {\n            return true;\n        }\n        else if (isBatched)\n        {\n            const geometry = mesh._geometry;\n\n            // no need to break the batch if it's the same size\n            if (geometry.indices.length !== meshData.indexSize\n                    || geometry.positions.length !== meshData.vertexSize)\n            {\n                meshData.indexSize = geometry.indices.length;\n                meshData.vertexSize = geometry.positions.length;\n\n                return true;\n            }\n\n            const batchableMesh = this._getBatchableMesh(mesh);\n\n            return !batchableMesh._batcher.checkAndUpdateTexture(\n                batchableMesh,\n                mesh.texture\n            );\n        }\n\n        return false;\n    }\n\n    public addRenderable(mesh: Mesh, instructionSet: InstructionSet)\n    {\n        const batcher = this.renderer.renderPipes.batch;\n\n        const { batched } = this._getMeshData(mesh);\n\n        if (batched)\n        {\n            const gpuBatchableMesh = this._getBatchableMesh(mesh);\n\n            gpuBatchableMesh.texture = mesh._texture;\n            gpuBatchableMesh.geometry = mesh._geometry;\n\n            batcher.addToBatch(gpuBatchableMesh, instructionSet);\n        }\n        else\n        {\n            batcher.break(instructionSet);\n\n            instructionSet.add(mesh);\n        }\n    }\n\n    public updateRenderable(mesh: Mesh)\n    {\n        if (mesh.batched)\n        {\n            const gpuBatchableMesh = this._gpuBatchableMeshHash[mesh.uid];\n\n            gpuBatchableMesh.texture = mesh._texture;\n            gpuBatchableMesh.geometry = mesh._geometry;\n\n            gpuBatchableMesh._batcher.updateElement(gpuBatchableMesh);\n        }\n    }\n\n    public destroyRenderable(mesh: Mesh)\n    {\n        this._meshDataHash[mesh.uid] = null;\n\n        const gpuMesh = this._gpuBatchableMeshHash[mesh.uid];\n\n        if (gpuMesh)\n        {\n            BigPool.return(gpuMesh as PoolItem);\n            this._gpuBatchableMeshHash[mesh.uid] = null;\n        }\n\n        mesh.off('destroyed', this._destroyRenderableBound);\n    }\n\n    public execute(mesh: Mesh)\n    {\n        if (!mesh.isRenderable) return;\n\n        mesh.state.blendMode = getAdjustedBlendModeBlend(mesh.groupBlendMode, mesh.texture._source);\n\n        const localUniforms = this.localUniforms;\n\n        localUniforms.uniforms.uTransformMatrix = mesh.groupTransform;\n        localUniforms.uniforms.uRound = this.renderer._roundPixels | mesh._roundPixels;\n        localUniforms.update();\n\n        color32BitToUniform(\n            mesh.groupColorAlpha,\n            localUniforms.uniforms.uColor,\n            0\n        );\n\n        this._adaptor.execute(this, mesh);\n    }\n\n    private _getMeshData(mesh: Mesh): MeshData\n    {\n        return this._meshDataHash[mesh.uid] || this._initMeshData(mesh);\n    }\n\n    private _initMeshData(mesh: Mesh): MeshData\n    {\n        this._meshDataHash[mesh.uid] = {\n            batched: mesh.batched,\n            indexSize: mesh._geometry.indices?.length,\n            vertexSize: mesh._geometry.positions?.length,\n        };\n\n        mesh.on('destroyed', this._destroyRenderableBound);\n\n        return this._meshDataHash[mesh.uid];\n    }\n\n    private _getBatchableMesh(mesh: Mesh): BatchableMesh\n    {\n        return this._gpuBatchableMeshHash[mesh.uid] || this._initBatchableMesh(mesh);\n    }\n\n    private _initBatchableMesh(mesh: Mesh): BatchableMesh\n    {\n        // TODO - make this batchable graphics??\n        const gpuMesh: BatchableMesh = BigPool.get(BatchableMesh);\n\n        gpuMesh.renderable = mesh;\n        gpuMesh.texture = mesh._texture;\n        gpuMesh.transform = mesh.groupTransform;\n        gpuMesh.roundPixels = (this.renderer._roundPixels | mesh._roundPixels) as 0 | 1;\n\n        this._gpuBatchableMeshHash[mesh.uid] = gpuMesh;\n\n        return gpuMesh;\n    }\n\n    public destroy()\n    {\n        for (const i in this._gpuBatchableMeshHash)\n        {\n            if (this._gpuBatchableMeshHash[i])\n            {\n                BigPool.return(this._gpuBatchableMeshHash[i] as PoolItem);\n            }\n        }\n\n        this._gpuBatchableMeshHash = null;\n        this._meshDataHash = null;\n\n        this.localUniforms = null;\n        this.localUniformsBindGroup = null;\n\n        this._adaptor.destroy();\n        this._adaptor = null;\n\n        this.renderer = null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8543, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/mesh/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { MeshPipe } from './shared/MeshPipe';\n\nextensions.add(MeshPipe);\n"],"names":[],"mappings":";;;;;;kKAGA,aAAA,CAAW,GAAA,8KAAI,WAAQ,CAAA","ignoreList":[0]}},
    {"offset": {"line": 8550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8556, "column": 0}, "map": {"version":3,"file":"GlParticleContainerAdaptor.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/gl/GlParticleContainerAdaptor.ts"],"sourcesContent":["import type { WebGLRenderer } from '../../../rendering/renderers/gl/WebGLRenderer';\nimport type { ParticleContainer } from '../shared/ParticleContainer';\nimport type { ParticleContainerAdaptor, ParticleContainerPipe } from '../shared/ParticleContainerPipe';\n\nexport class GlParticleContainerAdaptor implements ParticleContainerAdaptor\n{\n    public execute(particleContainerPipe: ParticleContainerPipe, container: ParticleContainer)\n    {\n        const state = particleContainerPipe.state;\n        const renderer = particleContainerPipe.renderer as WebGLRenderer;\n        const shader = container.shader || particleContainerPipe.defaultShader;\n\n        shader.resources.uTexture = container.texture._source;\n        shader.resources.uniforms = particleContainerPipe.localUniforms;\n\n        const gl = renderer.gl;\n\n        const buffer = particleContainerPipe.getBuffers(container);\n\n        // now lets upload and render the buffers..\n        renderer.shader.bind(shader);\n        renderer.state.set(state);\n        renderer.geometry.bind(buffer.geometry, shader.glProgram);\n\n        const byteSize = buffer.geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n        const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n\n        gl.drawElements(gl.TRIANGLES, container.particleChildren.length * 6, glType, 0);\n    }\n}\n"],"names":[],"mappings":";;;;AAIO,MAAM,0BACb,CAAA;IACW,OAAA,CAAQ,qBAAA,EAA8C,SAC7D,EAAA;QACI,MAAM,QAAQ,qBAAsB,CAAA,KAAA,CAAA;QACpC,MAAM,WAAW,qBAAsB,CAAA,QAAA,CAAA;QACjC,MAAA,MAAA,GAAS,SAAU,CAAA,MAAA,IAAU,qBAAsB,CAAA,aAAA,CAAA;QAElD,MAAA,CAAA,SAAA,CAAU,QAAW,GAAA,SAAA,CAAU,OAAQ,CAAA,OAAA,CAAA;QACvC,MAAA,CAAA,SAAA,CAAU,QAAA,GAAW,qBAAsB,CAAA,aAAA,CAAA;QAElD,MAAM,KAAK,QAAS,CAAA,EAAA,CAAA;QAEd,MAAA,MAAA,GAAS,qBAAsB,CAAA,UAAA,CAAW,SAAS,CAAA,CAAA;QAGhD,QAAA,CAAA,MAAA,CAAO,IAAA,CAAK,MAAM,CAAA,CAAA;QAClB,QAAA,CAAA,KAAA,CAAM,GAAA,CAAI,KAAK,CAAA,CAAA;QACxB,QAAA,CAAS,QAAS,CAAA,IAAA,CAAK,MAAO,CAAA,QAAA,EAAU,OAAO,SAAS,CAAA,CAAA;QAExD,MAAM,QAAW,GAAA,MAAA,CAAO,QAAS,CAAA,WAAA,CAAY,IAAK,CAAA,iBAAA,CAAA;QAClD,MAAM,MAAS,GAAA,QAAA,KAAa,CAAI,GAAA,EAAA,CAAG,cAAA,GAAiB,EAAG,CAAA,YAAA,CAAA;QAEpD,EAAA,CAAA,YAAA,CAAa,GAAG,SAAW,EAAA,SAAA,CAAU,gBAAA,CAAiB,MAAS,GAAA,CAAA,EAAG,QAAQ,CAAC,CAAA,CAAA;IAAA,CAClF;AACJ","ignoreList":[0]}},
    {"offset": {"line": 8579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8585, "column": 0}, "map": {"version":3,"file":"ensurePrecision.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/ensurePrecision.ts"],"sourcesContent":["import type { PRECISION } from '../../const';\n\ninterface EnsurePrecisionOptions\n{\n    requestedVertexPrecision: PRECISION;\n    requestedFragmentPrecision: PRECISION;\n    maxSupportedVertexPrecision: PRECISION;\n    maxSupportedFragmentPrecision: PRECISION;\n}\n\n/**\n * Sets the float precision on the shader, ensuring the device supports the request precision.\n * If the precision is already present, it just ensures that the device is able to handle it.\n * @param src\n * @param options\n * @param options.requestedVertexPrecision\n * @param options.requestedFragmentPrecision\n * @param options.maxSupportedVertexPrecision\n * @param options.maxSupportedFragmentPrecision\n * @param isFragment\n * @private\n */\nexport function ensurePrecision(\n    src: string,\n    options: EnsurePrecisionOptions,\n    isFragment: boolean,\n): string\n{\n    const maxSupportedPrecision = isFragment ? options.maxSupportedFragmentPrecision : options.maxSupportedVertexPrecision;\n\n    if (src.substring(0, 9) !== 'precision')\n    {\n        // no precision supplied, so PixiJS will add the requested level.\n        let precision = isFragment ? options.requestedFragmentPrecision : options.requestedVertexPrecision;\n\n        // If highp is requested but not supported, downgrade precision to a level all devices support.\n        if (precision === 'highp' && maxSupportedPrecision !== 'highp')\n        {\n            precision = 'mediump';\n        }\n\n        return `precision ${precision} float;\\n${src}`;\n    }\n    else if (maxSupportedPrecision !== 'highp' && src.substring(0, 15) === 'precision highp')\n    {\n        // precision was supplied, but at a level this device does not support, so downgrading to mediump.\n        return src.replace('precision highp', 'precision mediump');\n    }\n\n    return src;\n}\n"],"names":[],"mappings":";;;;AAsBgB,SAAA,eAAA,CACZ,GACA,EAAA,OAAA,EACA,UAEJ,EAAA;IACI,MAAM,qBAAwB,GAAA,UAAA,GAAa,OAAQ,CAAA,6BAAA,GAAgC,OAAQ,CAAA,2BAAA,CAAA;IAE3F,IAAI,GAAI,CAAA,SAAA,CAAU,CAAG,EAAA,CAAC,MAAM,WAC5B,EAAA;QAEI,IAAI,SAAY,GAAA,UAAA,GAAa,OAAQ,CAAA,0BAAA,GAA6B,OAAQ,CAAA,wBAAA,CAAA;QAGtE,IAAA,SAAA,KAAc,OAAW,IAAA,qBAAA,KAA0B,OACvD,EAAA;YACgB,SAAA,GAAA,SAAA,CAAA;QAAA,CAChB;QAEA,OAAO,CAAA,UAAA,EAAa,SAAS,CAAA;AAAA,EAAY,GAAG,CAAA,CAAA,CAAA;IAAA,CAChD,MAAA,IACS,0BAA0B,OAAW,IAAA,GAAA,CAAI,SAAA,CAAU,CAAG,EAAA,EAAE,MAAM,iBACvE,EAAA;QAEW,OAAA,GAAA,CAAI,OAAQ,CAAA,iBAAA,EAAmB,mBAAmB,CAAA,CAAA;IAAA,CAC7D;IAEO,OAAA,GAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 8605, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8611, "column": 0}, "map": {"version":3,"file":"setProgramName.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/gl/shader/program/preprocessors/setProgramName.ts"],"sourcesContent":["const fragmentNameCache: { [key: string]: number } = {};\nconst VertexNameCache: { [key: string]: number } = {};\n\nexport function setProgramName(src: string, { name = `pixi-program` }: { name: string; }, isFragment = true)\n{\n    name = name.replace(/\\s+/g, '-');\n\n    name += isFragment ? '-fragment' : '-vertex';\n\n    const nameCache = isFragment ? fragmentNameCache : VertexNameCache;\n\n    if (nameCache[name])\n    {\n        nameCache[name]++;\n        name += `-${nameCache[name]}`;\n    }\n    else\n    {\n        nameCache[name] = 1;\n    }\n\n    // if it already contains the define return\n    if (src.indexOf('#define SHADER_NAME') !== -1) return src;\n\n    const shaderName = `#define SHADER_NAME ${name}`;\n\n    return `${shaderName}\\n${src}`;\n}\n"],"names":[],"mappings":";;;;AAAA,MAAM,oBAA+C,CAAA,CAAC,CAAA;AACtD,MAAM,kBAA6C,CAAA,CAAC,CAAA;AAE7C,SAAS,eAAe,GAAa,EAAA,EAAE,OAAO,CAAe,YAAA,CAAA,EAAA,EAAsB,aAAa,IACvG,EAAA;IACW,IAAA,GAAA,IAAA,CAAK,OAAQ,CAAA,MAAA,EAAQ,GAAG,CAAA,CAAA;IAE/B,IAAA,IAAQ,aAAa,WAAc,GAAA,SAAA,CAAA;IAE7B,MAAA,SAAA,GAAY,aAAa,iBAAoB,GAAA,eAAA,CAAA;IAE/C,IAAA,SAAA,CAAU,IAAI,CAClB,EAAA;QACI,SAAA,CAAU,IAAI,CAAA,EAAA,CAAA;QACN,IAAA,IAAA,CAAA,CAAA,EAAI,SAAU,CAAA,IAAI,CAAC,CAAA,CAAA,CAAA;IAAA,CAG/B,MAAA;QACI,SAAA,CAAU,IAAI,CAAI,GAAA,CAAA,CAAA;IAAA,CACtB;IAGI,IAAA,GAAA,CAAI,OAAQ,CAAA,qBAAqB,CAAM,KAAA,CAAA,CAAA,EAAW,OAAA,GAAA,CAAA;IAEhD,MAAA,UAAA,GAAa,CAAA,oBAAA,EAAuB,IAAI,CAAA,CAAA,CAAA;IAE9C,OAAO,GAAG,UAAU,CAAA;AAAA,EAAK,GAAG,CAAA,CAAA,CAAA;AAChC","ignoreList":[0]}},
    {"offset": {"line": 8634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8640, "column": 0}, "map": {"version":3,"file":"GlProgram.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/gl/shader/GlProgram.ts"],"sourcesContent":["import { createIdFromString } from '../../shared/utils/createIdFromString';\nimport { getMaxFragmentPrecision } from './program/getMaxFragmentPrecision';\nimport { addProgramDefines } from './program/preprocessors/addProgramDefines';\nimport { ensurePrecision } from './program/preprocessors/ensurePrecision';\nimport { insertVersion } from './program/preprocessors/insertVersion';\nimport { setProgramName } from './program/preprocessors/setProgramName';\nimport { stripVersion } from './program/preprocessors/stripVersion';\n\nimport type { TypedArray } from '../../shared/buffer/Buffer';\nimport type { ExtractedAttributeData } from './program/extractAttributesFromGlProgram';\n\nexport interface GlAttributeData\n{\n    type: string;\n    size: number;\n    location: number;\n    name: string;\n}\n\nexport interface GlUniformData\n{\n    name: string;\n    index: number;\n    type: string;\n    size: number;\n    isArray: boolean;\n    value: any;\n}\n\nexport interface GlUniformBlockData\n{\n    index: number;\n    name: string;\n    size: number;\n    value?: TypedArray;\n}\n\n/**\n * The options for the gl program\n * @memberof rendering\n */\nexport interface GlProgramOptions\n{\n    /** The fragment glsl shader source. */\n    fragment: string;\n    /** The vertex glsl shader source. */\n    vertex: string;\n    /** the name of the program, defaults to 'pixi-program' */\n    name?: string;\n    /** the preferred vertex precision for the shader, this may not be used if the device does not support it  */\n    preferredVertexPrecision?: string;\n    /** the preferred fragment precision for the shader, this may not be used if the device does not support it  */\n    preferredFragmentPrecision?: string;\n\n    transformFeedbackVaryings?: {names: string[], bufferMode: 'separate' | 'interleaved'};\n}\n\nconst processes: Record<string, ((source: string, options: any, isFragment?: boolean) => string)> = {\n    // strips any version headers..\n    stripVersion,\n    // adds precision string if not already present\n    ensurePrecision,\n    // add some defines if WebGL1 to make it more compatible with WebGL2 shaders\n    addProgramDefines,\n    // add the program name to the shader\n    setProgramName,\n    // add the version string to the shader header\n    insertVersion,\n};\n\nconst programCache: Record<string, GlProgram> = Object.create(null);\n\n/**\n * A wrapper for a WebGL Program. You can create one and then pass it to a shader.\n * This will manage the WebGL program that is compiled and uploaded to the GPU.\n *\n * To get the most out of this class, you should be familiar with glsl shaders and how they work.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLProgram\n * @example\n *\n * // Create a new program\n * const program = new GlProgram({\n *   vertex: '...',\n *   fragment: '...',\n * });\n *\n *\n * There are a few key things that pixi shader will do for you automatically:\n * <br>\n * - If no precision is provided in the shader, it will be injected into the program source for you.\n * This precision will be taken form the options provided, if none is provided,\n * then the program will default to the defaultOptions.\n * <br>\n * - It will inject the program name into the shader source if none is provided.\n * <br>\n *  - It will set the program version to 300 es.\n *\n * For optimal usage and best performance, its best to reuse programs as much as possible.\n * You should use the {@link GlProgram.from} helper function to create programs.\n * @class\n * @memberof rendering\n */\nexport class GlProgram\n{\n    /** The default options used by the program. */\n    public static defaultOptions: Partial<GlProgramOptions> = {\n        preferredVertexPrecision: 'highp',\n        preferredFragmentPrecision: 'mediump',\n    };\n\n    /** the fragment glsl shader source. */\n    public readonly fragment?: string;\n    /** the vertex glsl shader source */\n    public readonly vertex?: string;\n    /**\n     * attribute data extracted from the program once created this happens when the program is used for the first time\n     * @internal\n     * @ignore\n     */\n    public _attributeData: Record<string, ExtractedAttributeData>;\n    /**\n     * uniform data extracted from the program once created this happens when the program is used for the first time\n     * @internal\n     * @ignore\n     */\n    public _uniformData: Record<string, GlUniformData>;\n    /**\n     * uniform data extracted from the program once created this happens when the program is used for the first time\n     * @internal\n     * @ignore\n     */\n    public _uniformBlockData: Record<string, GlUniformBlockData>;\n    /** details on how to use this program with transform feedback */\n    public transformFeedbackVaryings?: {names: string[], bufferMode: 'separate' | 'interleaved'};\n    /**\n     * the key that identifies the program via its source vertex + fragment\n     * @internal\n     * @ignore\n     */\n    public readonly _key: number;\n\n    /**\n     * Creates a shiny new GlProgram. Used by WebGL renderer.\n     * @param options - The options for the program.\n     */\n    constructor(options: GlProgramOptions)\n    {\n        options = { ...GlProgram.defaultOptions, ...options };\n\n        // only need to check one as they both need to be the same or\n        // errors ensue!\n        const isES300 = options.fragment.indexOf('#version 300 es') !== -1;\n\n        const preprocessorOptions = {\n            stripVersion: isES300,\n            ensurePrecision: {\n                requestedFragmentPrecision: options.preferredFragmentPrecision,\n                requestedVertexPrecision: options.preferredVertexPrecision,\n                maxSupportedVertexPrecision: 'highp',\n                maxSupportedFragmentPrecision: getMaxFragmentPrecision(),\n            },\n            setProgramName: {\n                name: options.name,\n            },\n            addProgramDefines: isES300,\n            insertVersion: isES300\n        };\n\n        let fragment = options.fragment;\n        let vertex = options.vertex;\n\n        Object.keys(processes).forEach((processKey) =>\n        {\n            const processOptions = preprocessorOptions[processKey as keyof typeof preprocessorOptions];\n\n            fragment = processes[processKey](fragment, processOptions, true);\n            vertex = processes[processKey](vertex, processOptions, false);\n        });\n\n        this.fragment = fragment;\n        this.vertex = vertex;\n\n        this.transformFeedbackVaryings = options.transformFeedbackVaryings;\n\n        this._key = createIdFromString(`${this.vertex}:${this.fragment}`, 'gl-program');\n    }\n\n    /** destroys the program */\n    public destroy(): void\n    {\n        (this.fragment as null) = null;\n        (this.vertex as null) = null;\n\n        this._attributeData = null;\n        this._uniformData = null;\n        this._uniformBlockData = null;\n\n        this.transformFeedbackVaryings = null;\n    }\n\n    /**\n     * Helper function that creates a program for a given source.\n     * It will check the program cache if the program has already been created.\n     * If it has that one will be returned, if not a new one will be created and cached.\n     * @param options - The options for the program.\n     * @returns A program using the same source\n     */\n    public static from(options: GlProgramOptions): GlProgram\n    {\n        const key = `${options.vertex}:${options.fragment}`;\n\n        if (!programCache[key])\n        {\n            programCache[key] = new GlProgram(options);\n        }\n\n        return programCache[key];\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8736, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8742, "column": 0}, "map": {"version":3,"file":"particles.vert.mjs","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8754, "column": 0}, "map": {"version":3,"file":"particles.frag.mjs","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8766, "column": 0}, "map": {"version":3,"file":"particles.wgsl.mjs","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 8772, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8778, "column": 0}, "map": {"version":3,"file":"ParticleShader.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/shader/ParticleShader.ts"],"sourcesContent":["import { Color } from '../../../../color/Color';\nimport { Matrix } from '../../../../maths/matrix/Matrix';\nimport { GlProgram } from '../../../../rendering/renderers/gl/shader/GlProgram';\nimport { GpuProgram } from '../../../../rendering/renderers/gpu/shader/GpuProgram';\nimport { Shader } from '../../../../rendering/renderers/shared/shader/Shader';\nimport { Texture } from '../../../../rendering/renderers/shared/texture/Texture';\nimport { TextureStyle } from '../../../../rendering/renderers/shared/texture/TextureStyle';\nimport fragment from './particles.frag';\nimport vertex from './particles.vert';\nimport wgsl from './particles.wgsl';\n\nexport class ParticleShader extends Shader\n{\n    constructor()\n    {\n        const glProgram = GlProgram.from({\n            vertex,\n            fragment\n        });\n\n        const gpuProgram = GpuProgram.from({\n            fragment: {\n                source: wgsl,\n                entryPoint: 'mainFragment'\n            },\n            vertex: {\n                source: wgsl,\n                entryPoint: 'mainVertex'\n            }\n        });\n\n        super({\n            glProgram,\n            gpuProgram,\n            resources: {\n                // this will be replaced with the texture from the particle container\n                uTexture: Texture.WHITE.source,\n                // this will be replaced with the texture style from the particle container\n                uSampler: new TextureStyle({}),\n                // this will be replaced with the local uniforms from the particle container\n                uniforms: {\n                    uTranslationMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n                    uColor: { value: new Color(0xFFFFFF), type: 'vec4<f32>' },\n                    uRound: { value: 1, type: 'f32' },\n                    uResolution: { value: [0, 0], type: 'vec2<f32>' },\n                }\n            }\n        });\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAWO,MAAM,qNAAuB,SACpC,CAAA;IACI,WACA,EAAA;QACU,MAAA,SAAA,gMAAY,YAAA,CAAU,IAAK,CAAA;qOAC7B,UAAA;uOACA,UAAA;QAAA,CACH,CAAA,CAAA;QAEK,MAAA,UAAA,iMAAa,cAAA,CAAW,IAAK,CAAA;YAC/B,QAAU,EAAA;gBACN,MAAQ,mNAAA,UAAA;gBACR,UAAY,EAAA,cAAA;YAAA,CAChB;YACA,MAAQ,EAAA;gBACJ,MAAQ,mNAAA,UAAA;gBACR,UAAY,EAAA,YAAA;YAAA,CAChB;QAAA,CACH,CAAA,CAAA;QAEK,KAAA,CAAA;YACF,SAAA;YACA,UAAA;YACA,SAAW,EAAA;gBAAA,qEAAA;gBAEP,QAAA,EAAU,0MAAA,CAAQ,KAAM,CAAA,MAAA;gBAAA,2EAAA;gBAExB,QAAU,EAAA,yMAAI,eAAa,CAAA,CAAA,CAAE,CAAA;gBAAA,4EAAA;gBAE7B,QAAU,EAAA;oBACN,oBAAoB;wBAAE,KAAA,EAAO,uKAAI,SAAO,EAAA;wBAAG,MAAM,aAAc;oBAAA,CAAA;oBAC/D,MAAA,EAAQ;wBAAE,KAAO,EAAA,4JAAI,QAAA,CAAM,QAAQ,CAAA;wBAAG,MAAM,WAAY;oBAAA,CAAA;oBACxD,MAAQ,EAAA;wBAAE,KAAO,EAAA,CAAA;wBAAG,MAAM,KAAM;oBAAA,CAAA;oBAChC,WAAA,EAAa;wBAAE,KAAO,EAAA;4BAAC;4BAAG,CAAC;yBAAA;wBAAG,MAAM,WAAY;oBAAA,CAAA;gBAAA,CACpD;YAAA,CACJ;QAAA,CACH,CAAA,CAAA;IAAA,CACL;AACJ","ignoreList":[0]}},
    {"offset": {"line": 8854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8860, "column": 0}, "map": {"version":3,"file":"getAttributeInfoFromFormat.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.ts"],"sourcesContent":["import type { VertexFormat } from '../const';\n\nconst attributeFormatData = {\n    uint8x2: { size: 2, stride: 2, normalised: false },\n    uint8x4: { size: 4, stride: 4, normalised: false },\n    sint8x2: { size: 2, stride: 2, normalised: false },\n    sint8x4: { size: 4, stride: 4, normalised: false },\n    unorm8x2: { size: 2, stride: 2, normalised: true },\n    unorm8x4: { size: 4, stride: 4, normalised: true },\n    snorm8x2: { size: 2, stride: 2, normalised: true },\n    snorm8x4: { size: 4, stride: 4, normalised: true },\n    uint16x2: { size: 2, stride: 4, normalised: false },\n    uint16x4: { size: 4, stride: 8, normalised: false },\n    sint16x2: { size: 2, stride: 4, normalised: false },\n    sint16x4: { size: 4, stride: 8, normalised: false },\n    unorm16x2: { size: 2, stride: 4, normalised: true },\n    unorm16x4: { size: 4, stride: 8, normalised: true },\n    snorm16x2: { size: 2, stride: 4, normalised: true },\n    snorm16x4: { size: 4, stride: 8, normalised: true },\n    float16x2: { size: 2, stride: 4, normalised: false },\n    float16x4: { size: 4, stride: 8, normalised: false },\n    float32: { size: 1, stride: 4, normalised: false },\n    float32x2: { size: 2, stride: 8, normalised: false },\n    float32x3: { size: 3, stride: 12, normalised: false },\n    float32x4: { size: 4, stride: 16, normalised: false },\n    uint32: { size: 1, stride: 4, normalised: false },\n    uint32x2: { size: 2, stride: 8, normalised: false },\n    uint32x3: { size: 3, stride: 12, normalised: false },\n    uint32x4: { size: 4, stride: 16, normalised: false },\n    sint32: { size: 1, stride: 4, normalised: false },\n    sint32x2: { size: 2, stride: 8, normalised: false },\n    sint32x3: { size: 3, stride: 12, normalised: false },\n    sint32x4: { size: 4, stride: 16, normalised: false },\n};\n\nexport function getAttributeInfoFromFormat(format: VertexFormat): { size: number; stride: number; normalised: boolean }\n{\n    return attributeFormatData[format] ?? attributeFormatData.float32;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9027, "column": 0}, "map": {"version":3,"file":"createIndicesForQuads.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/utils/createIndicesForQuads.ts"],"sourcesContent":["/**\n * Generic Mask Stack data structure\n * @function createIndicesForQuads\n * @param {number} size - Number of quads\n * @param {Uint16Array|Uint32Array} [outBuffer] - Buffer for output, length has to be `6 * size`\n * @returns {Uint16Array|Uint32Array} - Resulting index buffer\n */\nexport function createIndicesForQuads(\n    size: number,\n    outBuffer: Uint16Array | Uint32Array | null = null\n): Uint16Array | Uint32Array\n{\n    // the total number of indices in our array, there are 6 points per quad.\n    const totalIndices = size * 6;\n\n    // Check if we need to use Uint32Array\n    if (totalIndices > 65535)\n    {\n        outBuffer ||= new Uint32Array(totalIndices); // Use Uint32Array if needed\n    }\n    else\n    {\n        outBuffer ||= new Uint16Array(totalIndices);\n    }\n\n    if (outBuffer.length !== totalIndices)\n    {\n        throw new Error(`Out buffer length is incorrect, got ${outBuffer.length} and expected ${totalIndices}`);\n    }\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        outBuffer[i + 0] = j + 0;\n        outBuffer[i + 1] = j + 1;\n        outBuffer[i + 2] = j + 2;\n        outBuffer[i + 3] = j + 0;\n        outBuffer[i + 4] = j + 2;\n        outBuffer[i + 5] = j + 3;\n    }\n\n    return outBuffer;\n}\n"],"names":[],"mappings":";;;;AAOgB,SAAA,qBAAA,CACZ,IACA,EAAA,SAAA,GAA8C,IAElD,EAAA;IAEI,MAAM,eAAe,IAAO,GAAA,CAAA,CAAA;IAG5B,IAAI,eAAe,KACnB,EAAA;QACkB,SAAA,IAAA,CAAA,SAAA,GAAA,IAAI,YAAY,YAAY,CAAA,CAAA,CAAA;IAAA,CAG9C,MAAA;QACkB,SAAA,IAAA,CAAA,SAAA,GAAA,IAAI,YAAY,YAAY,CAAA,CAAA,CAAA;IAAA,CAC9C;IAEI,IAAA,SAAA,CAAU,MAAA,KAAW,YACzB,EAAA;QACI,MAAM,IAAI,KAAM,CAAA,CAAA,oCAAA,EAAuC,UAAU,MAAM,CAAA,cAAA,EAAiB,YAAY,CAAE,CAAA,CAAA,CAAA;IAAA,CAC1G;IAGS,IAAA,IAAA,CAAA,GAAI,GAAG,CAAI,GAAA,CAAA,EAAG,IAAI,YAAc,EAAA,CAAA,IAAK,CAAG,EAAA,CAAA,IAAK,CACtD,CAAA;QACc,SAAA,CAAA,CAAA,GAAI,CAAC,CAAA,GAAI,CAAI,GAAA,CAAA,CAAA;QACb,SAAA,CAAA,CAAA,GAAI,CAAC,CAAA,GAAI,CAAI,GAAA,CAAA,CAAA;QACb,SAAA,CAAA,CAAA,GAAI,CAAC,CAAA,GAAI,CAAI,GAAA,CAAA,CAAA;QACb,SAAA,CAAA,CAAA,GAAI,CAAC,CAAA,GAAI,CAAI,GAAA,CAAA,CAAA;QACb,SAAA,CAAA,CAAA,GAAI,CAAC,CAAA,GAAI,CAAI,GAAA,CAAA,CAAA;QACb,SAAA,CAAA,CAAA,GAAI,CAAC,CAAA,GAAI,CAAI,GAAA,CAAA,CAAA;IAAA,CAC3B;IAEO,OAAA,SAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 9053, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9059, "column": 0}, "map": {"version":3,"file":"generateParticleUpdateFunction.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/utils/generateParticleUpdateFunction.ts"],"sourcesContent":["import {\n    getAttributeInfoFromFormat\n} from '../../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat';\n\nimport type { IParticle } from '../Particle';\nimport type { ParticleRendererProperty } from '../particleData';\n\n// TODO rename to update function\nexport type ParticleUpdateFunction = (ps: IParticle[], f32v: Float32Array, u32v: Uint32Array) => void;\n\nexport function generateParticleUpdateFunction(properties: Record<string, ParticleRendererProperty>)\n{\n    return {\n        dynamicUpdate: generateUpdateFunction(properties, true),\n        staticUpdate: generateUpdateFunction(properties, false),\n    };\n}\n\nfunction generateUpdateFunction(\n    properties: Record<string, ParticleRendererProperty>,\n    dynamic: boolean\n): ParticleUpdateFunction\n{\n    const funcFragments: string[] = [];\n\n    funcFragments.push(`\n      \n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            `);\n\n    let offset = 0;\n\n    for (const i in properties)\n    {\n        const property = properties[i];\n\n        if (dynamic !== property.dynamic) continue;\n\n        funcFragments.push(`offset = index + ${offset}`);\n\n        funcFragments.push(property.code);\n\n        const attributeInfo = getAttributeInfoFromFormat(property.format);\n\n        offset += attributeInfo.stride / 4;\n    }\n\n    funcFragments.push(`\n            index += stride * 4;\n        }\n    `);\n\n    // add to the front..\n    funcFragments.unshift(`\n        var stride = ${offset};\n    `);\n\n    const functionSource = funcFragments.join('\\n');\n\n    // eslint-disable-next-line no-new-func\n    return new Function('ps', 'f32v', 'u32v', functionSource) as ParticleUpdateFunction;\n}\n"],"names":[],"mappings":";;;;;;AAUO,SAAS,+BAA+B,UAC/C,EAAA;IACW,OAAA;QACH,aAAA,EAAe,sBAAuB,CAAA,UAAA,EAAY,IAAI,CAAA;QACtD,YAAA,EAAc,sBAAuB,CAAA,UAAA,EAAY,KAAK,CAAA;IAAA,CAC1D,CAAA;AACJ,CAAA;AAEA,SAAS,sBAAA,CACL,UAAA,EACA,OAEJ,EAAA;IACI,MAAM,gBAA0B,EAAC,CAAA;IAEjC,aAAA,CAAc,IAAK,CAAA,CAAA;;;;;;;;YAQV,CAAA,CAAA,CAAA;IAET,IAAI,MAAS,GAAA,CAAA,CAAA;IAEb,IAAA,MAAW,KAAK,UAChB,CAAA;QACU,MAAA,QAAA,GAAW,UAAA,CAAW,CAAC,CAAA,CAAA;QAE7B,IAAI,YAAY,QAAS,CAAA,OAAA,EAAS,SAAA;QAEpB,aAAA,CAAA,IAAA,CAAK,CAAoB,iBAAA,EAAA,MAAM,CAAE,CAAA,CAAA,CAAA;QAEjC,aAAA,CAAA,IAAA,CAAK,SAAS,IAAI,CAAA,CAAA;QAE1B,MAAA,aAAA,oOAAgB,6BAAA,AAA2B,EAAA,QAAA,CAAS,MAAM,CAAA,CAAA;QAEhE,MAAA,IAAU,cAAc,MAAS,GAAA,CAAA,CAAA;IAAA,CACrC;IAEA,aAAA,CAAc,IAAK,CAAA,CAAA;;;IAGlB,CAAA,CAAA,CAAA;IAGD,aAAA,CAAc,OAAQ,CAAA,CAAA;qBAAA,EACH,MAAM,CAAA;IACxB,CAAA,CAAA,CAAA;IAEK,MAAA,cAAA,GAAiB,aAAc,CAAA,IAAA,CAAK,IAAI,CAAA,CAAA;IAG9C,OAAO,IAAI,QAAA,CAAS,IAAM,EAAA,MAAA,EAAQ,QAAQ,cAAc,CAAA,CAAA;AAC5D","ignoreList":[0]}},
    {"offset": {"line": 9103, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9109, "column": 0}, "map": {"version":3,"file":"ParticleBuffer.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/ParticleBuffer.ts"],"sourcesContent":["import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry';\nimport { getAttributeInfoFromFormat } from '../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat';\nimport { ViewableBuffer } from '../../../utils/data/ViewableBuffer';\nimport { createIndicesForQuads } from './utils/createIndicesForQuads';\nimport { generateParticleUpdateFunction } from './utils/generateParticleUpdateFunction';\n\nimport type { IndexBufferArray } from '../../../rendering/renderers/shared/geometry/Geometry';\nimport type { IParticle } from './Particle';\nimport type { ParticleRendererProperty } from './particleData';\nimport type { ParticleUpdateFunction } from './utils/generateParticleUpdateFunction';\n\n/**\n * Options for creating a ParticleBuffer.\n * @property {number} size - The size of the particle buffer.\n * @property {Record<string, ParticleRendererProperty>} properties - A record of attributes that the particle container uses.\n */\nexport interface ParticleBufferOptions\n{\n    size: number;\n    properties: Record<string, ParticleRendererProperty>;\n}\n\n/**\n * The ParticleBuffer holds the buffers and geometry for a particle container.\n * It also contains the upload functions for the static and dynamic properties.\n * @internal\n */\nexport class ParticleBuffer\n{\n    /** The buffer containing static attribute data for all elements in the batch. */\n    public staticAttributeBuffer: ViewableBuffer;\n    /** The buffer containing dynamic attribute data for all elements in the batch. */\n    public dynamicAttributeBuffer: ViewableBuffer;\n\n    private readonly _staticBuffer: Buffer;\n    private readonly _dynamicBuffer: Buffer;\n\n    /** The buffer containing index data for all elements in the batch. */\n    public indexBuffer: IndexBufferArray;\n\n    private readonly _dynamicStride: number;\n    private readonly _staticStride: number;\n\n    /** The geometry of the particle buffer. */\n    public readonly geometry: Geometry;\n\n    private _size = 0;\n    private readonly _dynamicUpload: ParticleUpdateFunction;\n    private readonly _staticUpload: ParticleUpdateFunction;\n    private readonly _generateParticleUpdateCache: Record<string, {\n        dynamicUpdate: ParticleUpdateFunction;\n        staticUpdate: ParticleUpdateFunction;\n    }> = {};\n\n    constructor(options: ParticleBufferOptions)\n    {\n        // size in sprites!\n        const size = this._size = options.size ?? 1000;\n\n        // TODO add the option to specify what is dynamic!\n        const properties = options.properties;\n\n        // in bytes!\n        let staticVertexSize = 0;\n        let dynamicVertexSize = 0;\n\n        for (const i in properties)\n        {\n            const property = properties[i];\n            const attributeInfo = getAttributeInfoFromFormat(property.format);\n\n            if (property.dynamic)\n            {\n                // dynamic.\n                dynamicVertexSize += attributeInfo.stride;\n            }\n            else\n            {\n                // static.\n                staticVertexSize += attributeInfo.stride;\n            }\n        }\n\n        this._dynamicStride = dynamicVertexSize / 4;\n        this._staticStride = staticVertexSize / 4;\n\n        this.staticAttributeBuffer = new ViewableBuffer(size * 4 * staticVertexSize);\n        this.dynamicAttributeBuffer = new ViewableBuffer(size * 4 * dynamicVertexSize);\n\n        this.indexBuffer = createIndicesForQuads(size);\n\n        // build geometry..\n\n        const geometry = new Geometry();\n\n        let dynamicOffset = 0;\n        let staticOffset = 0;\n\n        this._staticBuffer = new Buffer({\n            data: new Float32Array(1),\n            label: 'static-particle-buffer',\n            shrinkToFit: false,\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n        });\n\n        this._dynamicBuffer = new Buffer({\n            data: new Float32Array(1),\n            label: 'dynamic-particle-buffer',\n            shrinkToFit: false,\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST\n        });\n\n        for (const i in properties)\n        {\n            const property = properties[i];\n            const attributeInfo = getAttributeInfoFromFormat(property.format);\n\n            if (property.dynamic)\n            {\n                geometry.addAttribute(property.attributeName, {\n                    buffer: this._dynamicBuffer,\n                    stride: this._dynamicStride * 4,\n                    offset: dynamicOffset * 4,\n                    format: property.format,\n                });\n                dynamicOffset += attributeInfo.size;\n            }\n            else\n            {\n                geometry.addAttribute(property.attributeName, {\n                    buffer: this._staticBuffer,\n                    stride: this._staticStride * 4,\n                    offset: staticOffset * 4,\n                    format: property.format,\n                });\n                staticOffset += attributeInfo.size;\n            }\n        }\n\n        geometry.addIndex(this.indexBuffer);\n\n        const uploadFunction = this.getParticleUpdate(properties);\n\n        this._dynamicUpload = uploadFunction.dynamicUpdate;\n        this._staticUpload = uploadFunction.staticUpdate;\n\n        this.geometry = geometry;\n    }\n\n    public getParticleUpdate(properties: Record<string, ParticleRendererProperty>)\n    {\n        const key = getParticleSyncKey(properties);\n\n        if (this._generateParticleUpdateCache[key])\n        {\n            return this._generateParticleUpdateCache[key];\n        }\n\n        this._generateParticleUpdateCache[key] = this.generateParticleUpdate(properties);\n\n        return this._generateParticleUpdateCache[key];\n    }\n\n    public generateParticleUpdate(properties: Record<string, ParticleRendererProperty>)\n    {\n        return generateParticleUpdateFunction(properties);\n    }\n\n    public update(particles: IParticle[], uploadStatic: boolean)\n    {\n        // first resize the buffers if needed!\n        // TODO resize!\n        if (particles.length > this._size)\n        {\n            uploadStatic = true;\n\n            this._size = Math.max(particles.length, (this._size * 1.5) | 0);\n\n            this.staticAttributeBuffer = new ViewableBuffer(this._size * this._staticStride * 4 * 4);\n            this.dynamicAttributeBuffer = new ViewableBuffer(this._size * this._dynamicStride * 4 * 4);\n            this.indexBuffer = createIndicesForQuads(this._size);\n\n            this.geometry.indexBuffer.setDataWithSize(\n                this.indexBuffer, this.indexBuffer.byteLength, true);\n        }\n\n        const dynamicAttributeBuffer = this.dynamicAttributeBuffer;\n\n        this._dynamicUpload(particles, dynamicAttributeBuffer.float32View, dynamicAttributeBuffer.uint32View);\n\n        this._dynamicBuffer.setDataWithSize(\n            this.dynamicAttributeBuffer.float32View, particles.length * this._dynamicStride * 4, true);\n\n        if (uploadStatic)\n        {\n            const staticAttributeBuffer = this.staticAttributeBuffer;\n\n            this._staticUpload(particles, staticAttributeBuffer.float32View, staticAttributeBuffer.uint32View);\n\n            this._staticBuffer.setDataWithSize(\n                staticAttributeBuffer.float32View, particles.length * this._staticStride * 4, true);\n        }\n    }\n\n    public destroy()\n    {\n        this._staticBuffer.destroy();\n        this._dynamicBuffer.destroy();\n        this.geometry.destroy();\n    }\n}\n\nfunction getParticleSyncKey(properties: Record<string, ParticleRendererProperty>)\n{\n    const keyGen: string[] = [];\n\n    for (const key in properties)\n    {\n        const property = properties[key];\n\n        keyGen.push(key, property.code, property.dynamic ? 'd' : 's');\n    }\n\n    return keyGen.join('_');\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9242, "column": 0}, "map": {"version":3,"file":"ParticleContainerPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/ParticleContainerPipe.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup';\nimport { getAdjustedBlendModeBlend } from '../../../rendering/renderers/shared/state/getAdjustedBlendModeBlend';\nimport { State } from '../../../rendering/renderers/shared/state/State';\nimport { color32BitToUniform } from '../../graphics/gpu/colorToUniform';\nimport { ParticleBuffer } from './ParticleBuffer';\nimport { ParticleShader } from './shader/ParticleShader';\n\nimport type { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Shader } from '../../../rendering/renderers/shared/shader/Shader';\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { Container } from '../../container/Container';\nimport type { ParticleContainer } from './ParticleContainer';\n\nexport interface ParticleContainerAdaptor\n{\n    execute(particleContainerPop: ParticleContainerPipe, container: ParticleContainer): void;\n}\n\n/**\n * Renderer for Particles that is designer for speed over feature set.\n * @memberof scene\n */\nexport class ParticleContainerPipe implements RenderPipe<ParticleContainer>\n{\n    /** The default shader that is used if a sprite doesn't have a more specific one. */\n    public defaultShader: Shader;\n\n    public adaptor: ParticleContainerAdaptor;\n    public readonly state = State.for2d();\n    public readonly renderer: Renderer;\n\n    private _gpuBufferHash: Record<number, ParticleBuffer> = Object.create(null);\n    // eslint-disable-next-line max-len\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as unknown as (renderable: Container) => void;\n\n    public readonly localUniforms = new UniformGroup({\n        uTranslationMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n        uColor: { value: new Float32Array(4), type: 'vec4<f32>' },\n        uRound: { value: 1, type: 'f32' },\n        uResolution: { value: [0, 0], type: 'vec2<f32>' },\n    });\n\n    /**\n     * @param renderer - The renderer this sprite batch works for.\n     * @param adaptor\n     */\n    constructor(renderer: Renderer, adaptor: ParticleContainerAdaptor)\n    {\n        this.renderer = renderer;\n\n        this.adaptor = adaptor;\n\n        this.defaultShader = new ParticleShader();\n\n        this.state = State.for2d();\n    }\n\n    public validateRenderable(_renderable: ParticleContainer): boolean\n    {\n        // always fine :D\n        return false;\n    }\n\n    public addRenderable(renderable: ParticleContainer, instructionSet: InstructionSet)\n    {\n        this.renderer.renderPipes.batch.break(instructionSet);\n        instructionSet.add(renderable);\n    }\n\n    public getBuffers(renderable: ParticleContainer): ParticleBuffer\n    {\n        return this._gpuBufferHash[renderable.uid] || this._initBuffer(renderable);\n    }\n\n    private _initBuffer(renderable: ParticleContainer): ParticleBuffer\n    {\n        this._gpuBufferHash[renderable.uid] = new ParticleBuffer({\n            size: renderable.particleChildren.length,\n            properties: renderable._properties,\n        });\n\n        renderable.on('destroyed', this._destroyRenderableBound);\n\n        return this._gpuBufferHash[renderable.uid];\n    }\n\n    public updateRenderable(_renderable: ParticleContainer)\n    {\n        // nothing to be done here!\n\n    }\n\n    public destroyRenderable(renderable: ParticleContainer)\n    {\n        const buffer = this._gpuBufferHash[renderable.uid];\n\n        buffer.destroy();\n\n        this._gpuBufferHash[renderable.uid] = null;\n\n        renderable.off('destroyed', this._destroyRenderableBound);\n    }\n\n    public execute(container: ParticleContainer): void\n    {\n        const children = container.particleChildren;\n\n        if (children.length === 0)\n        {\n            return;\n        }\n\n        const renderer = this.renderer;\n        const buffer = this.getBuffers(container);\n\n        container.texture ||= children[0].texture;\n\n        const state = this.state;\n\n        buffer.update(children, container._childrenDirty);\n        container._childrenDirty = false;\n\n        state.blendMode = getAdjustedBlendModeBlend(container.blendMode, container.texture._source);\n\n        const uniforms = this.localUniforms.uniforms;\n\n        const transformationMatrix = uniforms.uTranslationMatrix;\n\n        container.worldTransform.copyTo(transformationMatrix);\n\n        transformationMatrix.prepend(renderer.globalUniforms.globalUniformData.projectionMatrix);\n\n        uniforms.uResolution = renderer.globalUniforms.globalUniformData.resolution;\n        uniforms.uRound = renderer._roundPixels | container._roundPixels;\n\n        color32BitToUniform(\n            container.groupColorAlpha,\n            uniforms.uColor,\n            0\n        );\n\n        this.adaptor.execute(this, container);\n    }\n\n    /** Destroys the ParticleRenderer. */\n    public destroy(): void\n    {\n        if (this.defaultShader)\n        {\n            this.defaultShader.destroy();\n            this.defaultShader = null;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9350, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9356, "column": 0}, "map": {"version":3,"file":"GlParticleContainerPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/GlParticleContainerPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { GlParticleContainerAdaptor } from '../gl/GlParticleContainerAdaptor';\nimport { ParticleContainerPipe } from './ParticleContainerPipe';\n\nimport type { WebGLRenderer } from '../../../rendering/renderers/gl/WebGLRenderer';\n\nexport class GlParticleContainerPipe extends ParticleContainerPipe\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n        ],\n        name: 'particle',\n    } as const;\n\n    constructor(renderer: WebGLRenderer)\n    {\n        super(renderer, new GlParticleContainerAdaptor());\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAMO,MAAM,2OAAgC,wBAC7C,CAAA;IASI,YAAY,QACZ,CAAA;QACU,KAAA,CAAA,QAAA,EAAU,IAAI,yOAAA,EAA4B,CAAA,CAAA;IAAA,CACpD;AACJ,CAAA;AAAA,YAAA,GAda,uBAAA,CAGK,SAAY,GAAA;IACtB,IAAM,EAAA;0KACF,gBAAc,CAAA,UAAA;KAClB;IACA,IAAM,EAAA,UAAA;AACV,CAAA","ignoreList":[0]}},
    {"offset": {"line": 9379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9385, "column": 0}, "map": {"version":3,"file":"GpuParticleContainerAdaptor.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/gpu/GpuParticleContainerAdaptor.ts"],"sourcesContent":["import type { WebGPURenderer } from '../../../rendering/renderers/gpu/WebGPURenderer';\nimport type { ParticleContainer } from '../shared/ParticleContainer';\nimport type { ParticleContainerAdaptor, ParticleContainerPipe } from '../shared/ParticleContainerPipe';\n\nexport class GpuParticleContainerAdaptor implements ParticleContainerAdaptor\n{\n    public execute(particleContainerPipe: ParticleContainerPipe, container: ParticleContainer)\n    {\n        const renderer = particleContainerPipe.renderer as WebGPURenderer;\n\n        const shader = container.shader || particleContainerPipe.defaultShader;\n\n        shader.groups[0] = renderer.renderPipes.uniformBatch.getUniformBindGroup(particleContainerPipe.localUniforms, true);\n\n        shader.groups[1] = renderer.texture.getTextureBindGroup(container.texture);\n\n        const state = particleContainerPipe.state;\n\n        const buffer = particleContainerPipe.getBuffers(container);\n\n        renderer.encoder.draw({\n            geometry: buffer.geometry,\n            shader: container.shader || particleContainerPipe.defaultShader,\n            state,\n            size: container.particleChildren.length * 6,\n        });\n    }\n}\n"],"names":[],"mappings":";;;;AAIO,MAAM,2BACb,CAAA;IACW,OAAA,CAAQ,qBAAA,EAA8C,SAC7D,EAAA;QACI,MAAM,WAAW,qBAAsB,CAAA,QAAA,CAAA;QAEjC,MAAA,MAAA,GAAS,SAAU,CAAA,MAAA,IAAU,qBAAsB,CAAA,aAAA,CAAA;QAElD,MAAA,CAAA,MAAA,CAAO,CAAC,CAAI,GAAA,QAAA,CAAS,WAAA,CAAY,YAAa,CAAA,mBAAA,CAAoB,qBAAsB,CAAA,aAAA,EAAe,IAAI,CAAA,CAAA;QAElH,MAAA,CAAO,MAAA,CAAO,CAAC,CAAA,GAAI,SAAS,OAAQ,CAAA,mBAAA,CAAoB,UAAU,OAAO,CAAA,CAAA;QAEzE,MAAM,QAAQ,qBAAsB,CAAA,KAAA,CAAA;QAE9B,MAAA,MAAA,GAAS,qBAAsB,CAAA,UAAA,CAAW,SAAS,CAAA,CAAA;QAEzD,QAAA,CAAS,OAAA,CAAQ,IAAK,CAAA;YAClB,UAAU,MAAO,CAAA,QAAA;YACjB,MAAA,EAAQ,SAAU,CAAA,MAAA,IAAU,qBAAsB,CAAA,aAAA;YAClD,KAAA;YACA,IAAA,EAAM,SAAU,CAAA,gBAAA,CAAiB,MAAS,GAAA,CAAA;QAAA,CAC7C,CAAA,CAAA;IAAA,CACL;AACJ","ignoreList":[0]}},
    {"offset": {"line": 9407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9413, "column": 0}, "map": {"version":3,"file":"GpuParticleContainerPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/shared/GpuParticleContainerPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { GpuParticleContainerAdaptor } from '../gpu/GpuParticleContainerAdaptor';\nimport { ParticleContainerPipe } from './ParticleContainerPipe';\n\nimport type { WebGPURenderer } from '../../../rendering/renderers/gpu/WebGPURenderer';\n\nexport class GpuParticleContainerPipe extends ParticleContainerPipe\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGPUPipes,\n        ],\n        name: 'particle',\n    } as const;\n\n    constructor(renderer: WebGPURenderer)\n    {\n        super(renderer, new GpuParticleContainerAdaptor());\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAMO,MAAM,4OAAiC,wBAC9C,CAAA;IASI,YAAY,QACZ,CAAA;QACU,KAAA,CAAA,QAAA,EAAU,IAAI,4OAAA,EAA6B,CAAA,CAAA;IAAA,CACrD;AACJ,CAAA;AAAA,YAAA,GAda,wBAAA,CAGK,SAAY,GAAA;IACtB,IAAM,EAAA;0KACF,gBAAc,CAAA,WAAA;KAClB;IACA,IAAM,EAAA,UAAA;AACV,CAAA","ignoreList":[0]}},
    {"offset": {"line": 9436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9442, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/particle-container/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { GlParticleContainerPipe } from './shared/GlParticleContainerPipe';\nimport { GpuParticleContainerPipe } from './shared/GpuParticleContainerPipe';\n\n// NOTE: this is the first occurrence of needing both gl and gpu pipes in the same file\n// This could cause some issues with tree shaking in the future.\n// Right now these two files do not import anything specific for a renderer, so is not an issue for now.\nextensions.add(GlParticleContainerPipe);\nextensions.add(GpuParticleContainerPipe);\n"],"names":[],"mappings":";;;;;;;;kKAOA,aAAA,CAAW,GAAA,8MAAI,0BAAuB,CAAA,CAAA;kKACtC,aAAA,CAAW,GAAA,+MAAI,2BAAwB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 9452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9458, "column": 0}, "map": {"version":3,"file":"getPo2TextureFromSource.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/utils/getPo2TextureFromSource.ts"],"sourcesContent":["import { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool';\nimport { Bounds } from '../../container/bounds/Bounds';\n\nimport type { ICanvas } from '../../../environment/canvas/ICanvas';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\n\nconst tempBounds = new Bounds();\n\n/**\n * Takes an image and creates a texture from it, using a power of 2 texture from the texture pool.\n * Remember to return the texture when you don't need it any more!\n * @param image - The image to create a texture from\n * @param width - the frame width of the texture\n * @param height - the frame height of the texture\n * @param resolution - The resolution of the texture\n * @returns - The texture\n */\nexport function getPo2TextureFromSource(\n    image: HTMLImageElement | HTMLCanvasElement | ICanvas,\n    width: number,\n    height: number,\n    resolution: number\n): Texture\n{\n    const bounds = tempBounds;\n\n    bounds.minX = 0;\n    bounds.minY = 0;\n\n    bounds.maxX = (image.width / resolution) | 0;\n    bounds.maxY = (image.height / resolution) | 0;\n\n    const texture = TexturePool.getOptimalTexture(\n        bounds.width,\n        bounds.height,\n        resolution,\n        false\n    );\n\n    texture.source.uploadMethodId = 'image';\n    texture.source.resource = image;\n    texture.source.alphaMode = 'premultiply-alpha-on-upload';\n\n    texture.frame.width = width / resolution;\n    texture.frame.height = height / resolution;\n\n    // We want to update the resource on the GPU,\n    // but we do not want to resize the texture.\n    // calling `texture.source.update` will fit the resource to the texture\n    // causing a resize of the texture on the GPU.\n    // which is not what we want!\n    texture.source.emit('update', texture.source);\n\n    texture.updateUvs();\n\n    return texture;\n}\n"],"names":[],"mappings":";;;;;;;;AAMA,MAAM,UAAA,GAAa,oLAAI,SAAO,EAAA,CAAA;AAWvB,SAAS,uBACZ,CAAA,KAAA,EACA,KACA,EAAA,MAAA,EACA,UAEJ,EAAA;IACI,MAAM,MAAS,GAAA,UAAA,CAAA;IAEf,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;IACd,MAAA,CAAO,IAAO,GAAA,CAAA,CAAA;IAEP,MAAA,CAAA,IAAA,GAAQ,KAAM,CAAA,KAAA,GAAQ,UAAc,GAAA,CAAA,CAAA;IACpC,MAAA,CAAA,IAAA,GAAQ,KAAM,CAAA,MAAA,GAAS,UAAc,GAAA,CAAA,CAAA;IAE5C,MAAM,8MAAU,cAAY,CAAA,iBAAA,CACxB,MAAO,CAAA,KAAA,EACP,MAAO,CAAA,MAAA,EACP,UAAA,EACA,KAAA;IAGJ,OAAA,CAAQ,MAAA,CAAO,cAAiB,GAAA,OAAA,CAAA;IAChC,OAAA,CAAQ,MAAA,CAAO,QAAW,GAAA,KAAA,CAAA;IAC1B,OAAA,CAAQ,MAAA,CAAO,SAAY,GAAA,6BAAA,CAAA;IAEnB,OAAA,CAAA,KAAA,CAAM,KAAA,GAAQ,KAAQ,GAAA,UAAA,CAAA;IACtB,OAAA,CAAA,KAAA,CAAM,MAAA,GAAS,MAAS,GAAA,UAAA,CAAA;IAOhC,OAAA,CAAQ,MAAO,CAAA,IAAA,CAAK,QAAU,EAAA,OAAA,CAAQ,MAAM,CAAA,CAAA;IAE5C,OAAA,CAAQ,SAAU,EAAA,CAAA;IAEX,OAAA,OAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 9485, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9491, "column": 0}, "map": {"version":3,"file":"getCanvasBoundingBox.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/canvas/getCanvasBoundingBox.ts"],"sourcesContent":["import { Rectangle } from '../../maths/shapes/Rectangle';\n\nimport type { ICanvas } from '../../environment/canvas/ICanvas';\n\nfunction checkRow(data: Uint8ClampedArray, width: number, y: number)\n{\n    for (let x = 0, index = 4 * y * width; x < width; ++x, index += 4)\n    {\n        if (data[index + 3] !== 0) return false;\n    }\n\n    return true;\n}\n\nfunction checkColumn(data: Uint8ClampedArray, width: number, x: number, top: number, bottom: number)\n{\n    const stride = 4 * width;\n\n    for (let y = top, index = (top * stride) + (4 * x); y <= bottom; ++y, index += stride)\n    {\n        if (data[index + 3] !== 0) return false;\n    }\n\n    return true;\n}\n\n/**\n * Measuring the bounds of a canvas' visible (non-transparent) pixels.\n * @param canvas - The canvas to measure.\n * @param resolution - The resolution of the canvas.\n * @returns The bounding box of the canvas' visible pixels.\n * @since 7.1.0\n * @memberof utils\n */\nexport function getCanvasBoundingBox(canvas: ICanvas, resolution = 1): Rectangle\n{\n    // https://gist.github.com/timdown/021d9c8f2aabc7092df564996f5afbbf\n\n    const { width, height } = canvas;\n\n    const context = canvas.getContext('2d', {\n        willReadFrequently: true,\n    });\n\n    if (context === null)\n    {\n        throw new TypeError('Failed to get canvas 2D context');\n    }\n\n    const imageData = context.getImageData(0, 0, width, height);\n    const data = imageData.data;\n\n    let left = 0;\n    let top = 0;\n    let right = width - 1;\n    let bottom = height - 1;\n\n    while (top < height && checkRow(data, width, top)) ++top;\n    if (top === height) return Rectangle.EMPTY;\n    while (checkRow(data, width, bottom)) --bottom;\n    while (checkColumn(data, width, left, top, bottom)) ++left;\n    while (checkColumn(data, width, right, top, bottom)) --right;\n\n    ++right;\n    ++bottom;\n\n    return new Rectangle(left / resolution, top / resolution, (right - left) / resolution, (bottom - top) / resolution);\n}\n"],"names":[],"mappings":";;;;;;AAIA,SAAS,QAAA,CAAS,IAAyB,EAAA,KAAA,EAAe,CAC1D,EAAA;IACa,IAAA,IAAA,CAAA,GAAI,CAAG,EAAA,KAAA,GAAQ,CAAI,GAAA,CAAA,GAAI,KAAO,EAAA,CAAA,GAAI,KAAO,EAAA,EAAE,CAAG,EAAA,KAAA,IAAS,CAChE,CAAA;QACQ,IAAA,IAAA,CAAK,KAAQ,GAAA,CAAC,CAAM,KAAA,CAAA,EAAU,OAAA,KAAA,CAAA;IAAA,CACtC;IAEO,OAAA,IAAA,CAAA;AACX,CAAA;AAEA,SAAS,WAAY,CAAA,IAAA,EAAyB,KAAe,EAAA,CAAA,EAAW,GAAA,EAAa,MACrF,EAAA;IACI,MAAM,SAAS,CAAI,GAAA,KAAA,CAAA;IAEnB,IAAA,IAAS,CAAI,GAAA,GAAA,EAAK,KAAS,GAAA,GAAA,GAAM,MAAW,GAAA,CAAA,GAAI,CAAI,EAAA,CAAA,IAAK,MAAQ,EAAA,EAAE,CAAG,EAAA,KAAA,IAAS,MAC/E,CAAA;QACQ,IAAA,IAAA,CAAK,KAAQ,GAAA,CAAC,CAAM,KAAA,CAAA,EAAU,OAAA,KAAA,CAAA;IAAA,CACtC;IAEO,OAAA,IAAA,CAAA;AACX,CAAA;AAUgB,SAAA,oBAAA,CAAqB,MAAiB,EAAA,UAAA,GAAa,CACnE,EAAA;IAGU,MAAA,EAAE,KAAO,EAAA,MAAA,EAAW,GAAA,MAAA,CAAA;IAEpB,MAAA,OAAA,GAAU,MAAO,CAAA,UAAA,CAAW,IAAM,EAAA;QACpC,kBAAoB,EAAA,IAAA;IAAA,CACvB,CAAA,CAAA;IAED,IAAI,YAAY,IAChB,EAAA;QACU,MAAA,IAAI,UAAU,iCAAiC,CAAA,CAAA;IAAA,CACzD;IAEA,MAAM,YAAY,OAAQ,CAAA,YAAA,CAAa,CAAG,EAAA,CAAA,EAAG,OAAO,MAAM,CAAA,CAAA;IAC1D,MAAM,OAAO,SAAU,CAAA,IAAA,CAAA;IAEvB,IAAI,IAAO,GAAA,CAAA,CAAA;IACX,IAAI,GAAM,GAAA,CAAA,CAAA;IACV,IAAI,QAAQ,KAAQ,GAAA,CAAA,CAAA;IACpB,IAAI,SAAS,MAAS,GAAA,CAAA,CAAA;IAEtB,MAAO,GAAM,GAAA,MAAA,IAAU,QAAS,CAAA,IAAA,EAAM,OAAO,GAAG,CAAA,CAAK,EAAA,GAAA,CAAA;IACrD,IAAI,GAAQ,KAAA,MAAA,EAAQ,6KAAO,YAAU,CAAA,KAAA,CAAA;IAC9B,MAAA,QAAA,CAAS,IAAM,EAAA,KAAA,EAAO,MAAM,CAAA,CAAK,EAAA,MAAA,CAAA;IACxC,MAAO,WAAY,CAAA,IAAA,EAAM,KAAO,EAAA,IAAA,EAAM,KAAK,MAAM,CAAA,CAAK,EAAA,IAAA,CAAA;IACtD,MAAO,WAAY,CAAA,IAAA,EAAM,KAAO,EAAA,KAAA,EAAO,KAAK,MAAM,CAAA,CAAK,EAAA,KAAA,CAAA;IAErD,EAAA,KAAA,CAAA;IACA,EAAA,MAAA,CAAA;IAEK,OAAA,0KAAI,YAAU,CAAA,IAAA,GAAO,UAAY,EAAA,GAAA,GAAM,UAAa,EAAA,CAAA,KAAA,GAAQ,IAAQ,IAAA,UAAA,EAAA,CAAa,MAAS,GAAA,GAAA,IAAO,UAAU,CAAA,CAAA;AACtH","ignoreList":[0]}},
    {"offset": {"line": 9535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9541, "column": 0}, "map": {"version":3,"file":"CanvasTextSystem.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/canvas/CanvasTextSystem.ts"],"sourcesContent":["import { Color } from '../../../color/Color';\nimport { ExtensionType } from '../../../extensions/Extensions';\nimport { nextPow2 } from '../../../maths/misc/pow2';\nimport { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool';\nimport { TexturePool } from '../../../rendering/renderers/shared/texture/TexturePool';\nimport { getCanvasBoundingBox } from '../../../utils/canvas/getCanvasBoundingBox';\nimport { deprecation } from '../../../utils/logging/deprecation';\nimport { TextStyle } from '../TextStyle';\nimport { getPo2TextureFromSource } from '../utils/getPo2TextureFromSource';\nimport { CanvasTextMetrics } from './CanvasTextMetrics';\nimport { fontStringFromTextStyle } from './utils/fontStringFromTextStyle';\nimport { getCanvasFillStyle } from './utils/getCanvasFillStyle';\n\nimport type { ICanvas } from '../../../environment/canvas/ICanvas';\nimport type { ICanvasRenderingContext2D } from '../../../environment/canvas/ICanvasRenderingContext2D';\nimport type { System } from '../../../rendering/renderers/shared/system/System';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { TextOptions } from '../AbstractText';\nimport type { Text } from '../Text';\n\ninterface CanvasAndContext\n{\n    canvas: ICanvas;\n    context: ICanvasRenderingContext2D;\n}\n\n/**\n * System plugin to the renderer to manage canvas text.\n * @memberof rendering\n */\nexport class CanvasTextSystem implements System\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n            ExtensionType.CanvasSystem,\n        ],\n        name: 'canvasText',\n    } as const;\n\n    private _activeTextures: Record<string, {\n        canvasAndContext: CanvasAndContext,\n        texture: Texture,\n        usageCount: number,\n    }> = {};\n\n    private readonly _renderer: Renderer;\n\n    constructor(_renderer: Renderer)\n    {\n        this._renderer = _renderer;\n    }\n\n    public getTextureSize(text: string, resolution: number, style: TextStyle): { width: number, height: number }\n    {\n        const measured = CanvasTextMetrics.measureText(text || ' ', style);\n\n        let width = Math.ceil(Math.ceil((Math.max(1, measured.width) + (style.padding * 2))) * resolution);\n        let height = Math.ceil(Math.ceil((Math.max(1, measured.height) + (style.padding * 2))) * resolution);\n\n        width = Math.ceil((width) - 1e-6);\n        height = Math.ceil((height) - 1e-6);\n        width = nextPow2(width);\n        height = nextPow2(height);\n\n        return { width, height };\n    }\n\n    /**\n     * This is a function that will create a texture from a text string, style and resolution.\n     * Useful if you want to make a texture of your text and use if for various other pixi things!\n     * @param options - The options of the text that will be used to generate the texture.\n     * @param options.text - the text to render\n     * @param options.style - the style of the text\n     * @param options.resolution - the resolution of the texture\n     * @returns the newly created texture\n     */\n    /** @deprecated since 8.0.0 */\n    public getTexture(text: string, resolution: number, style: TextStyle, textKey: string): Texture;\n    public getTexture(options: TextOptions): Texture;\n    public getTexture(options: TextOptions | string, resolution?: number, style?: TextStyle, _textKey?: string): Texture\n    {\n        if (typeof options === 'string')\n        {\n            // #if _DEBUG\n            deprecation('8.0.0', 'CanvasTextSystem.getTexture: Use object TextOptions instead of separate arguments');\n            // #endif\n\n            options = {\n                text: options,\n                style,\n                resolution,\n            };\n        }\n\n        if (!(options.style instanceof TextStyle))\n        {\n            options.style = new TextStyle(options.style);\n        }\n\n        const { texture, canvasAndContext } = this.createTextureAndCanvas(\n            options as {text: string, style: TextStyle, resolution?: number}\n        );\n\n        this._renderer.texture.initSource(texture._source);\n\n        CanvasPool.returnCanvasAndContext(canvasAndContext);\n\n        return texture;\n    }\n\n    public createTextureAndCanvas(options: {text: string, style: TextStyle, resolution?: number})\n    {\n        const { text, style } = options;\n\n        const resolution = options.resolution ?? this._renderer.resolution;\n\n        // create a canvas with the word hello on it\n        const measured = CanvasTextMetrics.measureText(text || ' ', style);\n\n        const width = Math.ceil(Math.ceil((Math.max(1, measured.width) + (style.padding * 2))) * resolution);\n        const height = Math.ceil(Math.ceil((Math.max(1, measured.height) + (style.padding * 2))) * resolution);\n\n        const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(width, height);\n\n        // create a texture from the canvas\n        const { canvas } = canvasAndContext;\n\n        this.renderTextToCanvas(text, style, resolution, canvasAndContext);\n\n        const texture = getPo2TextureFromSource(canvas, width, height, resolution);\n\n        if (style.trim)\n        {\n            const trimmed = getCanvasBoundingBox(canvas, resolution);\n\n            texture.frame.copyFrom(trimmed);\n\n            texture.updateUvs();\n        }\n\n        return { texture, canvasAndContext };\n    }\n\n    public getManagedTexture(text: Text)\n    {\n        text._resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n        const textKey = text._getKey();\n\n        if (this._activeTextures[textKey])\n        {\n            this._increaseReferenceCount(textKey);\n\n            return this._activeTextures[textKey].texture;\n        }\n\n        const { texture, canvasAndContext } = this.createTextureAndCanvas(text);\n\n        this._activeTextures[textKey] = {\n            canvasAndContext,\n            texture,\n            usageCount: 1,\n        };\n\n        return texture;\n    }\n\n    private _increaseReferenceCount(textKey: string)\n    {\n        this._activeTextures[textKey].usageCount++;\n    }\n\n    public decreaseReferenceCount(textKey: string)\n    {\n        const activeTexture = this._activeTextures[textKey];\n\n        activeTexture.usageCount--;\n\n        if (activeTexture.usageCount === 0)\n        {\n            CanvasPool.returnCanvasAndContext(activeTexture.canvasAndContext);\n            TexturePool.returnTexture(activeTexture.texture);\n\n            const source = activeTexture.texture.source;\n\n            source.resource = null;\n            source.uploadMethodId = 'unknown';\n            source.alphaMode = 'no-premultiply-alpha';\n\n            this._activeTextures[textKey] = null;\n        }\n    }\n\n    public getReferenceCount(textKey: string)\n    {\n        return this._activeTextures[textKey].usageCount;\n    }\n\n    /**\n     * Renders text to its canvas, and updates its texture.\n     *\n     * By default this is used internally to ensure the texture is correct before rendering,\n     * but it can be used called externally, for example from this class to 'pre-generate' the texture from a piece of text,\n     * and then shared across multiple Sprites.\n     * @param text\n     * @param style\n     * @param resolution\n     * @param canvasAndContext\n     */\n    public renderTextToCanvas(text: string, style: TextStyle, resolution: number, canvasAndContext: CanvasAndContext): void\n    {\n        const { canvas, context } = canvasAndContext;\n\n        const font = fontStringFromTextStyle(style);\n\n        const measured = CanvasTextMetrics.measureText(text || ' ', style);// , canvas);\n        const lines = measured.lines;\n        const lineHeight = measured.lineHeight;\n        const lineWidths = measured.lineWidths;\n        const maxLineWidth = measured.maxLineWidth;\n        const fontProperties = measured.fontProperties;\n\n        const height = canvas.height;\n\n        context.resetTransform();\n        context.scale(resolution, resolution);\n        context.textBaseline = style.textBaseline;\n\n        // set stroke styles..\n\n        if (style._stroke?.width)\n        {\n            const strokeStyle = style._stroke;\n\n            context.lineWidth = strokeStyle.width;\n\n            context.miterLimit = strokeStyle.miterLimit;\n            context.lineJoin = strokeStyle.join;\n            context.lineCap = strokeStyle.cap;\n        }\n\n        // return;\n        context.font = font;\n\n        let linePositionX: number;\n        let linePositionY: number;\n\n        // require 2 passes if a shadow; the first to draw the drop shadow, the second to draw the text\n        const passesCount = style.dropShadow ? 2 : 1;\n\n        // For v4, we drew text at the colours of the drop shadow underneath the normal text. This gave the correct zIndex,\n        // but features such as alpha and shadowblur did not look right at all, since we were using actual text as a shadow.\n        //\n        // For v5.0.0, we moved over to just use the canvas API for drop shadows, which made them look much nicer and more\n        // visually please, but now because the stroke is drawn and then the fill, drop shadows would appear on both the fill\n        // and the stroke; and fill drop shadows would appear over the top of the stroke.\n        //\n        // For v5.1.1, the new route is to revert to v4 style of drawing text first to get the drop shadows underneath normal\n        // text, but instead drawing text in the correct location, we'll draw it off screen (-paddingY), and then adjust the\n        // drop shadow so only that appears on screen (+paddingY). Now we'll have the correct draw order of the shadow\n        // beneath the text, whilst also having the proper text shadow styling.\n        for (let i = 0; i < passesCount; ++i)\n        {\n            const isShadowPass = style.dropShadow && i === 0;\n            // we only want the drop shadow, so put text way off-screen\n            const dsOffsetText = isShadowPass ? Math.ceil(Math.max(1, height) + (style.padding * 2)) : 0;\n            const dsOffsetShadow = dsOffsetText * resolution;\n\n            if (isShadowPass)\n            {\n                // On Safari, text with gradient and drop shadows together do not position correctly\n                // if the scale of the canvas is not 1: https://bugs.webkit.org/show_bug.cgi?id=197689\n                // Therefore we'll set the styles to be a plain black whilst generating this drop shadow\n                context.fillStyle = 'black';\n                context.strokeStyle = 'black';\n\n                const shadowOptions = style.dropShadow;\n\n                const dropShadowColor = shadowOptions.color;\n                const dropShadowAlpha = shadowOptions.alpha;\n\n                context.shadowColor = Color.shared\n                    .setValue(dropShadowColor)\n                    .setAlpha(dropShadowAlpha)\n                    .toRgbaString();\n\n                const dropShadowBlur = shadowOptions.blur * resolution;\n                const dropShadowDistance = shadowOptions.distance * resolution;\n\n                context.shadowBlur = dropShadowBlur;\n                context.shadowOffsetX = Math.cos(shadowOptions.angle) * dropShadowDistance;\n                context.shadowOffsetY = (Math.sin(shadowOptions.angle) * dropShadowDistance) + dsOffsetShadow;\n            }\n            else\n            {\n                context.fillStyle = style._fill ? getCanvasFillStyle(style._fill, context) : null;\n\n                if (style._stroke?.width)\n                {\n                    context.strokeStyle = getCanvasFillStyle(style._stroke, context);\n                }\n\n                context.shadowColor = 'black';\n            }\n\n            let linePositionYShift = (lineHeight - fontProperties.fontSize) / 2;\n\n            if (lineHeight - fontProperties.fontSize < 0)\n            {\n                linePositionYShift = 0;\n            }\n\n            const strokeWidth = style._stroke?.width ?? 0;\n\n            // draw lines line by line\n            for (let i = 0; i < lines.length; i++)\n            {\n                linePositionX = strokeWidth / 2;\n                linePositionY = ((strokeWidth / 2) + (i * lineHeight)) + fontProperties.ascent + linePositionYShift;\n\n                if (style.align === 'right')\n                {\n                    linePositionX += maxLineWidth - lineWidths[i];\n                }\n                else if (style.align === 'center')\n                {\n                    linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n                }\n\n                if (style._stroke?.width)\n                {\n                    this._drawLetterSpacing(\n                        lines[i],\n                        style,\n                        canvasAndContext,\n                        linePositionX + style.padding,\n                        linePositionY + style.padding - dsOffsetText,\n                        true\n                    );\n                }\n\n                if (style._fill !== undefined)\n                {\n                    this._drawLetterSpacing(\n                        lines[i],\n                        style,\n                        canvasAndContext,\n                        linePositionX + style.padding,\n                        linePositionY + style.padding - dsOffsetText\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Render the text with letter-spacing.\n     * @param text - The text to draw\n     * @param style\n     * @param canvasAndContext\n     * @param x - Horizontal position to draw the text\n     * @param y - Vertical position to draw the text\n     * @param isStroke - Is this drawing for the outside stroke of the\n     *  text? If not, it's for the inside fill\n     */\n    private _drawLetterSpacing(\n        text: string,\n        style: TextStyle,\n        canvasAndContext: CanvasAndContext,\n        x: number, y: number,\n        isStroke = false\n    ): void\n    {\n        const { context } = canvasAndContext;\n\n        // letterSpacing of 0 means normal\n        const letterSpacing = style.letterSpacing;\n\n        let useExperimentalLetterSpacing = false;\n\n        if (CanvasTextMetrics.experimentalLetterSpacingSupported)\n        {\n            if (CanvasTextMetrics.experimentalLetterSpacing)\n            {\n                context.letterSpacing = `${letterSpacing}px`;\n                context.textLetterSpacing = `${letterSpacing}px`;\n                useExperimentalLetterSpacing = true;\n            }\n            else\n            {\n                context.letterSpacing = '0px';\n                context.textLetterSpacing = '0px';\n            }\n        }\n\n        if (letterSpacing === 0 || useExperimentalLetterSpacing)\n        {\n            if (isStroke)\n            {\n                context.strokeText(text, x, y);\n            }\n            else\n            {\n                context.fillText(text, x, y);\n            }\n\n            return;\n        }\n\n        let currentPosition = x;\n\n        const stringArray = CanvasTextMetrics.graphemeSegmenter(text);\n        let previousWidth = context.measureText(text).width;\n        let currentWidth = 0;\n\n        for (let i = 0; i < stringArray.length; ++i)\n        {\n            const currentChar = stringArray[i];\n\n            if (isStroke)\n            {\n                context.strokeText(currentChar, currentPosition, y);\n            }\n            else\n            {\n                context.fillText(currentChar, currentPosition, y);\n            }\n            let textStr = '';\n\n            for (let j = i + 1; j < stringArray.length; ++j)\n            {\n                textStr += stringArray[j];\n            }\n            currentWidth = context.measureText(textStr).width;\n            currentPosition += previousWidth - currentWidth + letterSpacing;\n            previousWidth = currentWidth;\n        }\n    }\n\n    public destroy(): void\n    {\n        this._activeTextures = null;\n    }\n}\n"],"names":["i"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9808, "column": 0}, "map": {"version":3,"file":"BatchableSprite.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite/BatchableSprite.ts"],"sourcesContent":["import type { Matrix } from '../../maths/matrix/Matrix';\nimport type { Batch, Batcher } from '../../rendering/batcher/shared/Batcher';\nimport type { DefaultBatchableQuadElement } from '../../rendering/batcher/shared/DefaultBatcher';\nimport type { Topology } from '../../rendering/renderers/shared/geometry/const';\nimport type { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport type { BoundsData } from '../container/bounds/Bounds';\nimport type { Container } from '../container/Container';\n\n/**\n * A batchable sprite object.\n * @ignore\n */\nexport class BatchableSprite implements DefaultBatchableQuadElement\n{\n    public batcherName = 'default';\n    public topology: Topology = 'triangle-list';\n\n    // batch specific..\n    public readonly attributeSize = 4;\n    public readonly indexSize = 6;\n    public readonly packAsQuad = true;\n\n    public transform: Matrix;\n\n    public renderable: Container;\n    public texture: Texture;\n    public bounds: BoundsData;\n\n    public roundPixels: 0 | 1 = 0;\n\n    public _indexStart: number;\n    public _textureId: number;\n    public _attributeStart = 0; // location in the buffer\n    public _batcher: Batcher = null;\n    public _batch: Batch = null;\n\n    get blendMode() { return this.renderable.groupBlendMode; }\n    get color() { return this.renderable.groupColorAlpha; }\n\n    public reset()\n    {\n        this.renderable = null;\n        this.texture = null;\n        this._batcher = null;\n        this._batch = null;\n        this.bounds = null;\n    }\n}\n"],"names":[],"mappings":";;;;AAYO,MAAM,eACb,CAAA;IADO,WAAA,EAAA;QAEH,IAAA,CAAO,WAAc,GAAA,SAAA,CAAA;QACrB,IAAA,CAAO,QAAqB,GAAA,eAAA,CAAA;QAG5B,mBAAA;QAAA,IAAA,CAAgB,aAAgB,GAAA,CAAA,CAAA;QAChC,IAAA,CAAgB,SAAY,GAAA,CAAA,CAAA;QAC5B,IAAA,CAAgB,UAAa,GAAA,IAAA,CAAA;QAQ7B,IAAA,CAAO,WAAqB,GAAA,CAAA,CAAA;QAI5B,IAAA,CAAO,eAAkB,GAAA,CAAA,CAAA;QACzB,yBAAA;QAAA,IAAA,CAAO,QAAoB,GAAA,IAAA,CAAA;QAC3B,IAAA,CAAO,MAAgB,GAAA,IAAA,CAAA;IAAA,CAAA;IAEvB,IAAI,SAAY,GAAA;QAAE,OAAO,IAAA,CAAK,UAAW,CAAA,cAAA,CAAA;IAAA,CAAgB;IACzD,IAAI,KAAQ,GAAA;QAAE,OAAO,IAAA,CAAK,UAAW,CAAA,eAAA,CAAA;IAAA,CAAiB;IAE/C,KACP,GAAA;QACI,IAAA,CAAK,UAAa,GAAA,IAAA,CAAA;QAClB,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;QACf,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;QAChB,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;QACd,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;IAAA,CAClB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 9842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9848, "column": 0}, "map": {"version":3,"file":"CanvasTextPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/canvas/CanvasTextPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { updateQuadBounds } from '../../../utils/data/updateQuadBounds';\nimport { BigPool } from '../../../utils/pool/PoolGroup';\nimport { BatchableSprite } from '../../sprite/BatchableSprite';\n\nimport type { InstructionSet } from '../../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { Renderer } from '../../../rendering/renderers/types';\nimport type { Container } from '../../container/Container';\nimport type { Text } from '../Text';\n\nexport class CanvasTextPipe implements RenderPipe<Text>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'text',\n    } as const;\n\n    private _renderer: Renderer;\n\n    private _gpuText: Record<number, {\n        texture: Texture,\n        currentKey: string,\n        batchableSprite: BatchableSprite,\n    }> = Object.create(null);\n\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n        this._renderer.runners.resolutionChange.add(this);\n        this._renderer.renderableGC.addManagedHash(this, '_gpuText');\n    }\n\n    public resolutionChange()\n    {\n        for (const i in this._gpuText)\n        {\n            const gpuText = this._gpuText[i];\n\n            if (!gpuText) continue;\n\n            const text = gpuText.batchableSprite.renderable as Text;\n\n            if (text._autoResolution)\n            {\n                text._resolution = this._renderer.resolution;\n                text.onViewUpdate();\n            }\n        }\n    }\n\n    public validateRenderable(text: Text): boolean\n    {\n        const gpuText = this._getGpuText(text);\n\n        const newKey = text._getKey();\n\n        if (gpuText.currentKey !== newKey)\n        {\n            return true;\n        }\n\n        return false;\n    }\n\n    public addRenderable(text: Text, instructionSet: InstructionSet)\n    {\n        const gpuText = this._getGpuText(text);\n\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (text._didTextUpdate)\n        {\n            this._updateText(text);\n        }\n\n        this._renderer.renderPipes.batch.addToBatch(batchableSprite, instructionSet);\n    }\n\n    public updateRenderable(text: Text)\n    {\n        const gpuText = this._getGpuText(text);\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (text._didTextUpdate)\n        {\n            this._updateText(text);\n        }\n\n        batchableSprite._batcher.updateElement(batchableSprite);\n    }\n\n    public destroyRenderable(text: Text)\n    {\n        text.off('destroyed', this._destroyRenderableBound);\n\n        this._destroyRenderableById(text.uid);\n    }\n\n    private _destroyRenderableById(textUid: number)\n    {\n        const gpuText = this._gpuText[textUid];\n\n        this._renderer.canvasText.decreaseReferenceCount(gpuText.currentKey);\n\n        BigPool.return(gpuText.batchableSprite);\n\n        this._gpuText[textUid] = null;\n    }\n\n    private _updateText(text: Text)\n    {\n        const newKey = text._getKey();\n        const gpuText = this._getGpuText(text);\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (gpuText.currentKey !== newKey)\n        {\n            this._updateGpuText(text);\n        }\n\n        text._didTextUpdate = false;\n\n        const padding = text._style.padding;\n\n        updateQuadBounds(batchableSprite.bounds, text._anchor, batchableSprite.texture, padding);\n    }\n\n    private _updateGpuText(text: Text)\n    {\n        const gpuText = this._getGpuText(text);\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (gpuText.texture)\n        {\n            this._renderer.canvasText.decreaseReferenceCount(gpuText.currentKey);\n        }\n\n        gpuText.texture = batchableSprite.texture = this._renderer.canvasText.getManagedTexture(text);\n        gpuText.currentKey = text._getKey();\n        batchableSprite.texture = gpuText.texture;\n    }\n\n    private _getGpuText(text: Text)\n    {\n        return this._gpuText[text.uid] || this.initGpuText(text);\n    }\n\n    public initGpuText(text: Text)\n    {\n        const gpuTextData: CanvasTextPipe['_gpuText'][number] = {\n            texture: null,\n            currentKey: '--',\n            batchableSprite: BigPool.get(BatchableSprite),\n        };\n\n        gpuTextData.batchableSprite.renderable = text;\n        gpuTextData.batchableSprite.transform = text.groupTransform;\n        gpuTextData.batchableSprite.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n        gpuTextData.batchableSprite.roundPixels = (this._renderer._roundPixels | text._roundPixels) as 0 | 1;\n\n        this._gpuText[text.uid] = gpuTextData;\n\n        text._resolution = text._autoResolution ? this._renderer.resolution : text.resolution;\n        this._updateText(text);\n\n        // TODO perhaps manage this outside this pipe? (a bit like how we update / add)\n        text.on('destroyed', this._destroyRenderableBound);\n\n        return gpuTextData;\n    }\n\n    public destroy()\n    {\n        for (const i in this._gpuText)\n        {\n            this._destroyRenderableById(i as unknown as number);\n        }\n\n        this._gpuText = null;\n        this._renderer = null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9976, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9982, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { CanvasTextPipe } from './canvas/CanvasTextPipe';\nimport { CanvasTextSystem } from './canvas/CanvasTextSystem';\n\nextensions.add(CanvasTextSystem);\nextensions.add(CanvasTextPipe);\n"],"names":[],"mappings":";;;;;;;;kKAIA,aAAA,CAAW,GAAA,sLAAI,mBAAgB,CAAA,CAAA;kKAC/B,aAAA,CAAW,GAAA,oLAAI,iBAAc,CAAA","ignoreList":[0]}},
    {"offset": {"line": 9992, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9998, "column": 0}, "map": {"version":3,"file":"BitmapFontManager.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-bitmap/BitmapFontManager.ts"],"sourcesContent":["import { Cache } from '../../assets/cache/Cache';\nimport { deprecation, v8_0_0 } from '../../utils/logging/deprecation';\nimport { warn } from '../../utils/logging/warn';\nimport { TextStyle } from '../text/TextStyle';\nimport { DynamicBitmapFont } from './DynamicBitmapFont';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout';\nimport { resolveCharacters } from './utils/resolveCharacters';\n\nimport type { TextStyleOptions } from '../text/TextStyle';\nimport type { BitmapFont } from './BitmapFont';\nimport type { BitmapTextLayoutData } from './utils/getBitmapTextLayout';\n\nlet fontCount = 0;\n\n/**\n *\n * The options for installing a new BitmapFont. Once installed the font will be available for use in the BitmapText.\n * It can be accessed by the `fontFamily` property of the TextStyle.\n *\n * Install a new BitmapFont will create the characters provided for the font and store them in the cache.\n * But don't worry, if a character is requested that hasn't been generated yet, it will be created on the fly.\n * @memberof text\n */\nexport interface BitmapFontInstallOptions\n{\n    /** the name of the font, this will be the name you use in the fontFamily of text style to access this font */\n    name?: string;\n    /**\n     * Characters included in the font set. You can also use ranges.\n     * For example, `[['a', 'z'], ['A', 'Z'], \"!@#$%^&*()~{}[] \"]`.\n     * Don't forget to include spaces ' ' in your character set!\n     * @default BitmapFont.ALPHANUMERIC\n     */\n    chars?: string | (string | string[])[];\n    /**\n     * Render resolution for glyphs.\n     * @default 1\n     */\n    resolution?: number;\n    /**\n     * Padding between glyphs on texture atlas. Lower values could mean more visual artifacts\n     * and bleeding from other glyphs, larger values increase the space required on the texture.\n     * @default 4\n     */\n    padding?: number;\n    /**\n     * Skip generation of kerning information for the BitmapFont.\n     * If true, this could potentially increase the performance, but may impact the rendered text appearance.\n     * @default false\n     */\n    skipKerning?: boolean;\n    /** Style options to render with BitmapFont. */\n    style?: TextStyle | TextStyleOptions;\n}\n\n/**\n * The BitmapFontManager is a helper that exists to install and uninstall fonts\n * into the cache for BitmapText objects.\n * @memberof text\n * @name BitmapFontManager\n * @example\n * import { BitmapFontManager, BitmapText } from 'pixi.js';\n *\n * BitmapFontManager.install({\n *   name: 'TitleFont',\n *   style: {}\n * });\n *\n * const title = new BitmapText({ text: 'This is the title', style: { fontFamily: 'TitleFont' }});\n */\nclass BitmapFontManagerClass\n{\n    /**\n     * This character set includes all the letters in the alphabet (both lower- and upper- case).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.ALPHA })\n     */\n    public readonly ALPHA = [['a', 'z'], ['A', 'Z'], ' '];\n\n    /**\n     * This character set includes all decimal digits (from 0 to 9).\n     * @type {string[][]}\n     * @example\n     * BitmapFont.from('ExampleFont', style, { chars: BitmapFont.NUMERIC })\n     */\n    public readonly NUMERIC = [['0', '9']];\n\n    /**\n     * This character set is the union of `BitmapFont.ALPHA` and `BitmapFont.NUMERIC`.\n     * @type {string[][]}\n     */\n    public readonly ALPHANUMERIC = [['a', 'z'], ['A', 'Z'], ['0', '9'], ' '];\n\n    /**\n     * This character set consists of all the ASCII table.\n     * @member {string[][]}\n     * @see http://www.asciitable.com/\n     */\n    public readonly ASCII = [[' ', '~']];\n\n    /** Default options for installing a new BitmapFont. */\n    public defaultOptions: Omit<BitmapFontInstallOptions, 'style'> = {\n        chars: this.ALPHANUMERIC,\n        resolution: 1,\n        padding: 4,\n        skipKerning: false,\n    };\n\n    /**\n     * Get a font for the specified text and style.\n     * @param text - The text to get the font for\n     * @param style - The style to use\n     */\n    public getFont(text: string, style: TextStyle): BitmapFont\n    {\n        let fontFamilyKey = `${style.fontFamily as string}-bitmap`;\n        let overrideFill = true;\n\n        // assuming there is no texture we can use a tint!\n        if (style._fill.fill && !style._stroke)\n        {\n            fontFamilyKey += style._fill.fill.styleKey;\n            overrideFill = false;\n        }\n        else if (style._stroke || style.dropShadow)\n        {\n            // if there is a stoke, we need to use the style key as this the font generated cannot be tinted\n            // due to the fact the font has at least two colors.\n            let key = style.styleKey;\n\n            // remove the font size..\n            key = key.substring(0, key.lastIndexOf('-'));\n\n            fontFamilyKey = `${key}-bitmap`;\n            overrideFill = false;\n        }\n\n        // first get us the the right font...\n        if (!Cache.has(fontFamilyKey))\n        {\n            const fnt = new DynamicBitmapFont({\n                style,\n                overrideFill,\n                overrideSize: true,\n                ...this.defaultOptions,\n            });\n\n            fontCount++;\n\n            // warn users if they have created too many dynamic fonts\n            if (fontCount > 50)\n            {\n                // eslint-disable-next-line max-len\n                warn('BitmapText', `You have dynamically created ${fontCount} bitmap fonts, this can be inefficient. Try pre installing your font styles using \\`BitmapFont.install({name:\"style1\", style})\\``);\n            }\n\n            fnt.once('destroy', () =>\n            {\n                fontCount--;\n                Cache.remove(fontFamilyKey);\n            });\n\n            Cache.set(\n                fontFamilyKey as string,\n                fnt\n            );\n        }\n\n        const dynamicFont = Cache.get(fontFamilyKey);\n\n        (dynamicFont as DynamicBitmapFont).ensureCharacters?.(text);\n\n        return dynamicFont;\n    }\n\n    /**\n     * Get the layout of a text for the specified style.\n     * @param text - The text to get the layout for\n     * @param style - The style to use\n     * @param trimEnd - Whether to ignore whitespaces at the end of each line\n     */\n    public getLayout(text: string, style: TextStyle, trimEnd: boolean = true): BitmapTextLayoutData\n    {\n        const bitmapFont = this.getFont(text, style);\n\n        return getBitmapTextLayout([...text], style, bitmapFont, trimEnd);\n    }\n\n    /**\n     * Measure the text using the specified style.\n     * @param text - The text to measure\n     * @param style - The style to use\n     * @param trimEnd - Whether to ignore whitespaces at the end of each line\n     */\n    public measureText(\n        text: string,\n        style: TextStyle,\n        trimEnd: boolean = true\n    ): { width: number; height: number; scale: number; offsetY: number }\n    {\n        return this.getLayout(text, style, trimEnd);\n    }\n\n    /**\n     * Generates a bitmap-font for the given style and character set\n     * @param options - Setup options for font generation.\n     * @returns Font generated by style options.\n     * @example\n     * import { BitmapFontManager, BitmapText } from 'pixi.js';\n     *\n     * BitmapFontManager.install('TitleFont', {\n     *     fontFamily: 'Arial',\n     *     fontSize: 12,\n     *     strokeThickness: 2,\n     *     fill: 'purple',\n     * });\n     *\n     * const title = new BitmapText({ text: 'This is the title', fontFamily: 'TitleFont' });\n     */\n    public install(options: BitmapFontInstallOptions): BitmapFont;\n    /** @deprecated since 7.0.0 */\n    public install(name: string, style?: TextStyle | TextStyleOptions, options?: BitmapFontInstallOptions): BitmapFont;\n    // eslint-disable-next-line max-len\n    public install(...args: [string | BitmapFontInstallOptions, (TextStyle | TextStyleOptions)?, BitmapFontInstallOptions?]): BitmapFont\n    {\n        let options = args[0] as BitmapFontInstallOptions;\n\n        if (typeof options === 'string')\n        {\n            options = {\n                name: options,\n                style: args[1],\n                chars: args[2]?.chars,\n                resolution: args[2]?.resolution,\n                padding: args[2]?.padding,\n                skipKerning: args[2]?.skipKerning,\n            } as BitmapFontInstallOptions;\n\n            // #if _DEBUG\n            // eslint-disable-next-line max-len\n            deprecation(v8_0_0, 'BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})');\n            // #endif\n        }\n\n        const name = options?.name;\n\n        if (!name)\n        {\n            throw new Error('[BitmapFontManager] Property `name` is required.');\n        }\n\n        options = { ...this.defaultOptions, ...options };\n\n        const textStyle = options.style;\n\n        const style = textStyle instanceof TextStyle ? textStyle : new TextStyle(textStyle);\n        const overrideFill = style._fill.fill !== null && style._fill.fill !== undefined;\n        const font = new DynamicBitmapFont({\n            style,\n            overrideFill,\n            skipKerning: options.skipKerning,\n            padding: options.padding,\n            resolution: options.resolution,\n            overrideSize: false\n        });\n\n        const flatChars = resolveCharacters(options.chars);\n\n        font.ensureCharacters(flatChars.join(''));\n\n        Cache.set(`${name}-bitmap`, font);\n\n        font.once('destroy', () => Cache.remove(`${name}-bitmap`));\n\n        return font;\n    }\n\n    /**\n     * Uninstalls a bitmap font from the cache.\n     * @param {string} name - The name of the bitmap font to uninstall.\n     */\n    public uninstall(name: string)\n    {\n        const cacheKey = `${name}-bitmap`;\n        const font = Cache.get<BitmapFont>(cacheKey);\n\n        if (font)\n        {\n            font.destroy();\n        }\n    }\n}\n\nexport const BitmapFontManager = new BitmapFontManagerClass();\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10196, "column": 0}, "map": {"version":3,"file":"defaultProgramTemplate.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/high-shader/defaultProgramTemplate.ts"],"sourcesContent":["const vertexGPUTemplate = /* wgsl */`\n    @in aPosition: vec2<f32>;\n    @in aUV: vec2<f32>;\n\n    @out @builtin(position) vPosition: vec4<f32>;\n    @out vUV : vec2<f32>;\n    @out vColor : vec4<f32>;\n\n    {{header}}\n\n    struct VSOutput {\n        {{struct}}\n    };\n\n    @vertex\n    fn main( {{in}} ) -> VSOutput {\n\n        var worldTransformMatrix = globalUniforms.uWorldTransformMatrix;\n        var modelMatrix = mat3x3<f32>(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        var position = aPosition;\n        var uv = aUV;\n\n        {{start}}\n        \n        vColor = vec4<f32>(1., 1., 1., 1.);\n\n        {{main}}\n\n        vUV = uv;\n\n        var modelViewProjectionMatrix = globalUniforms.uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        vPosition =  vec4<f32>((modelViewProjectionMatrix *  vec3<f32>(position, 1.0)).xy, 0.0, 1.0);\n       \n        vColor *= globalUniforms.uWorldColorAlpha;\n\n        {{end}}\n\n        {{return}}\n    };\n`;\n\nconst fragmentGPUTemplate = /* wgsl */`\n    @in vUV : vec2<f32>;\n    @in vColor : vec4<f32>;\n   \n    {{header}}\n\n    @fragment\n    fn main(\n        {{in}}\n      ) -> @location(0) vec4<f32> {\n        \n        {{start}}\n\n        var outColor:vec4<f32>;\n      \n        {{main}}\n        \n        var finalColor:vec4<f32> = outColor * vColor;\n\n        {{end}}\n\n        return finalColor;\n      };\n`;\n\nconst vertexGlTemplate = /* glsl */`\n    in vec2 aPosition;\n    in vec2 aUV;\n\n    out vec4 vColor;\n    out vec2 vUV;\n\n    {{header}}\n\n    void main(void){\n\n        mat3 worldTransformMatrix = uWorldTransformMatrix;\n        mat3 modelMatrix = mat3(\n            1.0, 0.0, 0.0,\n            0.0, 1.0, 0.0,\n            0.0, 0.0, 1.0\n          );\n        vec2 position = aPosition;\n        vec2 uv = aUV;\n        \n        {{start}}\n        \n        vColor = vec4(1.);\n        \n        {{main}}\n        \n        vUV = uv;\n        \n        mat3 modelViewProjectionMatrix = uProjectionMatrix * worldTransformMatrix * modelMatrix;\n\n        gl_Position = vec4((modelViewProjectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n\n        vColor *= uWorldColorAlpha;\n\n        {{end}}\n    }\n`;\n\nconst fragmentGlTemplate = /* glsl */`\n   \n    in vec4 vColor;\n    in vec2 vUV;\n\n    out vec4 finalColor;\n\n    {{header}}\n\n    void main(void) {\n        \n        {{start}}\n\n        vec4 outColor;\n      \n        {{main}}\n        \n        finalColor = outColor * vColor;\n        \n        {{end}}\n    }\n`;\n\nexport {\n    fragmentGlTemplate,\n    fragmentGPUTemplate,\n    vertexGlTemplate,\n    vertexGPUTemplate\n};\n"],"names":[],"mappings":";;;;;;;AAAM,MAAA,iBAAA,GAAA,QAAA,GAA8B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA;AA8C9B,MAAA,mBAAA,GAAA,QAAA,GAAgC,CAAA;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA;AAyBhC,MAAA,gBAAA,GAAA,QAAA,GAA6B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA;AAsC7B,MAAA,kBAAA,GAAA,QAAA,GAA+B,CAAA;;;;;;;;;;;;;;;;;;;;;AAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 10333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10339, "column": 0}, "map": {"version":3,"file":"compileHighShaderToProgram.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/high-shader/compileHighShaderToProgram.ts"],"sourcesContent":["import { GlProgram } from '../renderers/gl/shader/GlProgram';\nimport { GpuProgram } from '../renderers/gpu/shader/GpuProgram';\nimport { compileHighShader, compileHighShaderGl } from './compiler/compileHighShader';\nimport { fragmentGlTemplate, fragmentGPUTemplate, vertexGlTemplate, vertexGPUTemplate } from './defaultProgramTemplate';\nimport { globalUniformsBit, globalUniformsBitGl } from './shader-bits/globalUniformsBit';\n\nimport type { HighShaderBit } from './compiler/types';\n\nexport function compileHighShaderGpuProgram({ bits, name }: {bits: HighShaderBit[], name: string}): GpuProgram\n{\n    const source = compileHighShader({\n        template: {\n            fragment: fragmentGPUTemplate,\n            vertex: vertexGPUTemplate,\n        },\n        bits: [\n            globalUniformsBit,\n            ...bits,\n        ]\n    });\n\n    return GpuProgram.from({\n        name,\n        vertex: {\n            source: source.vertex,\n            entryPoint: 'main',\n        },\n        fragment: {\n            source: source.fragment,\n            entryPoint: 'main',\n        },\n    });\n}\n\nexport function compileHighShaderGlProgram({ bits, name }: {bits: HighShaderBit[], name: string}): GlProgram\n{\n    return new GlProgram({\n        name,\n        ...compileHighShaderGl({\n            template: {\n                vertex: vertexGlTemplate,\n                fragment: fragmentGlTemplate,\n            },\n            bits: [\n                globalUniformsBitGl,\n                ...bits,\n            ]\n        })\n    });\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAQO,SAAS,2BAA4B,CAAA,EAAE,IAAM,EAAA,IAAA,EACpD,EAAA;IACI,MAAM,SAAS,8NAAA,AAAkB,EAAA;QAC7B,QAAU,EAAA;YACN,QAAU,iMAAA,sBAAA;YACV,MAAQ,iMAAA,oBAAA;QAAA,CACZ;QACA,IAAM,EAAA;wNACF,oBAAA;eACG,IAAA;SACP;IAAA,CACH,CAAA,CAAA;IAED,sMAAO,aAAA,CAAW,IAAK,CAAA;QACnB,IAAA;QACA,MAAQ,EAAA;YACJ,QAAQ,MAAO,CAAA,MAAA;YACf,UAAY,EAAA,MAAA;QAAA,CAChB;QACA,QAAU,EAAA;YACN,QAAQ,MAAO,CAAA,QAAA;YACf,UAAY,EAAA,MAAA;QAAA,CAChB;IAAA,CACH,CAAA,CAAA;AACL,CAAA;AAEO,SAAS,0BAA2B,CAAA,EAAE,IAAM,EAAA,IAAA,EACnD,EAAA;IACI,OAAO,iMAAI,YAAU,CAAA;QACjB,IAAA;QACA,GAAG,gOAAA,AAAoB,EAAA;YACnB,QAAU,EAAA;gBACN,MAAQ,iMAAA,mBAAA;gBACR,QAAU,iMAAA,qBAAA;YAAA,CACd;YACA,IAAM,EAAA;4NACF,sBAAA;mBACG,IAAA;aACP;QAAA,CACH,CAAA;IAAA,CACJ,CAAA,CAAA;AACL","ignoreList":[0]}},
    {"offset": {"line": 10394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10400, "column": 0}, "map": {"version":3,"file":"colorBit.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/high-shader/shader-bits/colorBit.ts"],"sourcesContent":["export const colorBit = {\n    name: 'color-bit',\n    vertex: {\n        header: /* wgsl */`\n            @in aColor: vec4<f32>;\n        `,\n        main: /* wgsl */`\n            vColor *= vec4<f32>(aColor.rgb * aColor.a, aColor.a);\n        `\n    }\n};\n\nexport const colorBitGl = {\n    name: 'color-bit',\n    vertex: {\n        header: /* glsl */`\n            in vec4 aColor;\n        `,\n        main: /* glsl */`\n            vColor *= vec4(aColor.rgb * aColor.a, aColor.a);\n        `\n    }\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,QAAW,GAAA;IACpB,IAAM,EAAA,WAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;QAAA,CAAA;QAGlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;QAAA,CAAA;IAAA,CAGpB;AACJ,EAAA;AAEO,MAAM,UAAa,GAAA;IACtB,IAAM,EAAA,WAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;QAAA,CAAA;QAGlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;QAAA,CAAA;IAAA,CAGpB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 10429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10435, "column": 0}, "map": {"version":3,"file":"localUniformMSDFBit.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/sdfShader/shader-bits/localUniformMSDFBit.ts"],"sourcesContent":["// TODO eventually we should not use this bit, but instead use the localUniformBit\n// have the MSDF bit be merged in with the localUniformBit\n\nexport const localUniformMSDFBit = {\n    name: 'local-uniform-msdf-bit',\n    vertex: {\n        header: /* wgsl */`\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32,\n                uRound:f32,\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `,\n        main: /* wgsl */`\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `,\n        end: /* wgsl */`\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    },\n    fragment: {\n        header: /* wgsl */`\n            struct LocalUniforms {\n                uColor:vec4<f32>,\n                uTransformMatrix:mat3x3<f32>,\n                uDistance: f32\n            }\n\n            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;\n         `,\n        main: /* wgsl */` \n            outColor = vec4<f32>(calculateMSDFAlpha(outColor, localUniforms.uColor, localUniforms.uDistance));\n        `\n\n    }\n};\n\nexport const localUniformMSDFBitGl = {\n    name: 'local-uniform-msdf-bit',\n    vertex: {\n        header: /* glsl */`\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `,\n        main: /* glsl */`\n            vColor *= uColor;\n            modelMatrix *= uTransformMatrix;\n        `,\n        end: /* glsl */`\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    },\n    fragment: {\n        header: /* glsl */`\n            uniform float uDistance;\n         `,\n        main: /* glsl */` \n            outColor = vec4(calculateMSDFAlpha(outColor, vColor, uDistance));\n        `\n\n    }\n};\n"],"names":[],"mappings":";;;;;AAGO,MAAM,mBAAsB,GAAA;IAC/B,IAAM,EAAA,wBAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;;QAAA,CAAA;QAUlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;QAAA,CAAA;QAIhB,GAAA,EAAA,QAAA,GAAe,CAAA;;;;;QAAA,CAAA;IAAA,CAMnB;IACA,QAAU,EAAA;QACN,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;SAAA,CAAA;QASlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;QAAA,CAAA;IAAA,CAIpB;AACJ,EAAA;AAEO,MAAM,qBAAwB,GAAA;IACjC,IAAM,EAAA,wBAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;QAAA,CAAA;QAKlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;QAAA,CAAA;QAIhB,GAAA,EAAA,QAAA,GAAe,CAAA;;;;;QAAA,CAAA;IAAA,CAMnB;IACA,QAAU,EAAA;QACN,MAAA,EAAA,QAAA,GAAkB,CAAA;;SAAA,CAAA;QAGlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;QAAA,CAAA;IAAA,CAIpB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 10509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10515, "column": 0}, "map": {"version":3,"file":"mSDFBit.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/sdfShader/shader-bits/mSDFBit.ts"],"sourcesContent":["export const mSDFBit = {\n    name: 'msdf-bit',\n    fragment: {\n        header: /* wgsl */`\n            fn calculateMSDFAlpha(msdfColor:vec4<f32>, shapeColor:vec4<f32>, distance:f32) -> f32 {\n                \n                // MSDF\n                var median = msdfColor.r + msdfColor.g + msdfColor.b -\n                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n            \n                // SDF\n                median = min(median, msdfColor.a);\n\n                var screenPxDistance = distance * (median - 0.5);\n                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                var luma: f32 = dot(shapeColor.rgb, vec3<f32>(0.299, 0.587, 0.114));\n                var gamma: f32 = mix(1.0, 1.0 / 2.2, luma);\n                var coverage: f32 = pow(shapeColor.a * alpha, gamma);\n\n                return coverage;\n             \n            }\n        `,\n    }\n\n};\n\nexport const mSDFBitGl = {\n    name: 'msdf-bit',\n    fragment: {\n        header: /* glsl */`\n            float calculateMSDFAlpha(vec4 msdfColor, vec4 shapeColor, float distance) {\n                \n                // MSDF\n                float median = msdfColor.r + msdfColor.g + msdfColor.b -\n                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -\n                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));\n               \n                // SDF\n                median = min(median, msdfColor.a);\n            \n                float screenPxDistance = distance * (median - 0.5);\n                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n           \n                if (median < 0.01) {\n                    alpha = 0.0;\n                } else if (median > 0.99) {\n                    alpha = 1.0;\n                }\n\n                // Gamma correction for coverage-like alpha\n                float luma = dot(shapeColor.rgb, vec3(0.299, 0.587, 0.114));\n                float gamma = mix(1.0, 1.0 / 2.2, luma);\n                float coverage = pow(shapeColor.a * alpha, gamma);  \n              \n                return coverage;\n            }\n        `,\n    }\n\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,OAAU,GAAA;IACnB,IAAM,EAAA,UAAA;IACN,QAAU,EAAA;QACN,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAA,CAAA;IAAA,CA4BtB;AAEJ,EAAA;AAEO,MAAM,SAAY,GAAA;IACrB,IAAM,EAAA,UAAA;IACN,QAAU,EAAA;QACN,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAA,CAAA;IAAA,CA4BtB;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 10588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10594, "column": 0}, "map": {"version":3,"file":"roundPixelsBit.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/high-shader/shader-bits/roundPixelsBit.ts"],"sourcesContent":["export const roundPixelsBit = {\n    name: 'round-pixels-bit',\n    vertex: {\n        header: /* wgsl */`\n            fn roundPixels(position: vec2<f32>, targetSize: vec2<f32>) -> vec2<f32> \n            {\n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    }\n};\n\nexport const roundPixelsBitGl = {\n    name: 'round-pixels-bit',\n    vertex: {\n        header: /* glsl */`   \n            vec2 roundPixels(vec2 position, vec2 targetSize)\n            {       \n                return (floor(((position * 0.5 + 0.5) * targetSize) + 0.5) / targetSize) * 2.0 - 1.0;\n            }\n        `\n    }\n};\n\n"],"names":[],"mappings":";;;;;AAAO,MAAM,cAAiB,GAAA;IAC1B,IAAM,EAAA,kBAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;QAAA,CAAA;IAAA,CAMtB;AACJ,EAAA;AAEO,MAAM,gBAAmB,GAAA;IAC5B,IAAM,EAAA,kBAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;QAAA,CAAA;IAAA,CAMtB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 10623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10629, "column": 0}, "map": {"version":3,"file":"SdfShader.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text/sdfShader/SdfShader.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { getMaxTexturesPerBatch } from '../../../rendering/batcher/gl/utils/maxRecommendedTextures';\nimport {\n    compileHighShaderGlProgram,\n    compileHighShaderGpuProgram\n} from '../../../rendering/high-shader/compileHighShaderToProgram';\nimport { colorBit, colorBitGl } from '../../../rendering/high-shader/shader-bits/colorBit';\nimport {\n    generateTextureBatchBit,\n    generateTextureBatchBitGl\n} from '../../../rendering/high-shader/shader-bits/generateTextureBatchBit';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit';\nimport { getBatchSamplersUniformGroup } from '../../../rendering/renderers/gl/shader/getBatchSamplersUniformGroup';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup';\nimport { localUniformMSDFBit, localUniformMSDFBitGl } from './shader-bits/localUniformMSDFBit';\nimport { mSDFBit, mSDFBitGl } from './shader-bits/mSDFBit';\n\nimport type { GlProgram } from '../../../rendering/renderers/gl/shader/GlProgram';\nimport type { GpuProgram } from '../../../rendering/renderers/gpu/shader/GpuProgram';\n\nlet gpuProgram: GpuProgram;\nlet glProgram: GlProgram;\n\nexport class SdfShader extends Shader\n{\n    constructor()\n    {\n        const uniforms = new UniformGroup({\n            uColor: { value: new Float32Array([1, 1, 1, 1]), type: 'vec4<f32>' },\n            uTransformMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n            uDistance: { value: 4, type: 'f32' },\n            uRound: { value: 0, type: 'f32' },\n        });\n\n        const maxTextures = getMaxTexturesPerBatch();\n\n        gpuProgram ??= compileHighShaderGpuProgram({\n            name: 'sdf-shader',\n            bits: [\n                colorBit,\n                generateTextureBatchBit(maxTextures),\n                localUniformMSDFBit,\n                mSDFBit,\n                roundPixelsBit\n            ]\n        });\n\n        glProgram ??= compileHighShaderGlProgram({\n            name: 'sdf-shader',\n            bits: [\n                colorBitGl,\n                generateTextureBatchBitGl(maxTextures),\n                localUniformMSDFBitGl,\n                mSDFBitGl,\n                roundPixelsBitGl,\n            ]\n        });\n\n        super({\n            glProgram,\n            gpuProgram,\n            resources: {\n                localUniforms: uniforms,\n                batchSamplers: getBatchSamplersUniformGroup(maxTextures),\n            }\n        });\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAI,UAAA,CAAA;AACJ,IAAI,SAAA,CAAA;AAEG,MAAM,gNAAkB,SAC/B,CAAA;IACI,WACA,EAAA;QACU,MAAA,QAAA,GAAW,uMAAI,gBAAa,CAAA;YAC9B,MAAQ,EAAA;gBAAE,KAAO,EAAA,IAAI,YAAa,CAAA;oBAAC,CAAG;oBAAA,CAAA;oBAAG,CAAG;oBAAA,CAAC;iBAAC,CAAA;gBAAG,MAAM,WAAY;YAAA,CAAA;YACnE,kBAAkB;gBAAE,KAAA,EAAO,uKAAI,SAAO,EAAA;gBAAG,MAAM,aAAc;YAAA,CAAA;YAC7D,SAAW,EAAA;gBAAE,KAAO,EAAA,CAAA;gBAAG,MAAM,KAAM;YAAA,CAAA;YACnC,MAAQ,EAAA;gBAAE,KAAO,EAAA,CAAA;gBAAG,MAAM,KAAM;YAAA,CAAA;QAAA,CACnC,CAAA,CAAA;QAED,MAAM,cAAc,oOAAA,AAAuB,EAAA,CAAA;QAE3C,UAAA,IAAA,CAAA,UAAA,0MAAe,8BAAA,AAA4B,EAAA;YACvC,IAAM,EAAA,YAAA;YACN,IAAM,EAAA;mNACF,WAAA;iBACA,+OAAA,EAAwB,WAAW,CAAA;6NACnC,sBAAA;iNACA,UAAA;yNACA,iBAAA;aACJ;QAAA,CACH,CAAA,CAAA,CAAA;QAED,SAAA,IAAA,CAAA,SAAA,IAAc,mOAAA,AAA2B,EAAA;YACrC,IAAM,EAAA,YAAA;YACN,IAAM,EAAA;mNACF,aAAA;sOACA,4BAAA,EAA0B,WAAW,CAAA;gBACrC,qOAAA;iNACA,YAAA;yNACA,mBAAA;aACJ;QAAA,CACH,CAAA,CAAA,CAAA;QAEK,KAAA,CAAA;YACF,SAAA;YACA,UAAA;YACA,SAAW,EAAA;gBACP,aAAe,EAAA,QAAA;gBACf,aAAA,sNAAe,+BAAA,EAA6B,WAAW,CAAA;YAAA,CAC3D;QAAA,CACH,CAAA,CAAA;IAAA,CACL;AACJ","ignoreList":[0]}},
    {"offset": {"line": 10715, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10721, "column": 0}, "map": {"version":3,"file":"ViewContainer.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/view/ViewContainer.ts"],"sourcesContent":["import { Bounds } from '../container/bounds/Bounds';\nimport { Container } from '../container/Container';\n\nimport type { PointData } from '../../maths/point/PointData';\nimport type { View } from '../../rendering/renderers/shared/view/View';\nimport type { DestroyOptions } from '../container/destroyTypes';\n\n/**\n * A ViewContainer is a type of container that represents a view.\n * This view can be a Sprite, a Graphics object, or any other object that can be rendered.\n * This class is abstract and should not be used directly.\n * @memberof scene\n */\nexport abstract class ViewContainer extends Container implements View\n{\n    /** @private */\n    public override readonly renderPipeId: string;\n    /** @private */\n    public readonly canBundle = true;\n    /** @private */\n    public override allowChildren = false;\n\n    /** @private */\n    public _roundPixels: 0 | 1 = 0;\n    /** @private */\n    public _lastUsed = 0;\n    /** @private */\n    public _lastInstructionTick = -1;\n\n    protected _bounds: Bounds = new Bounds(0, 1, 0, 0);\n    protected _boundsDirty = true;\n\n    /**\n     * The local bounds of the view.\n     * @type {rendering.Bounds}\n     */\n    public get bounds()\n    {\n        if (!this._boundsDirty) return this._bounds;\n\n        this.updateBounds();\n\n        this._boundsDirty = false;\n\n        return this._bounds;\n    }\n\n    /** @private */\n    protected abstract updateBounds(): void;\n\n    /**\n     * Whether or not to round the x/y position of the sprite.\n     * @type {boolean}\n     */\n    get roundPixels()\n    {\n        return !!this._roundPixels;\n    }\n\n    set roundPixels(value: boolean)\n    {\n        this._roundPixels = value ? 1 : 0;\n    }\n\n    /**\n     * Checks if the object contains the given point.\n     * @param point - The point to check\n     */\n    public containsPoint(point: PointData)\n    {\n        const bounds = this.bounds;\n        const { x, y } = point;\n\n        return (x >= bounds.minX\n            && x <= bounds.maxX\n            && y >= bounds.minY\n            && y <= bounds.maxY);\n    }\n\n    /** @private */\n    public abstract batched: boolean;\n\n    /** @private */\n    protected onViewUpdate()\n    {\n        this._didViewChangeTick++;\n\n        this._boundsDirty = true;\n\n        if (this.didViewUpdate) return;\n        this.didViewUpdate = true;\n\n        const renderGroup = this.renderGroup || this.parentRenderGroup;\n\n        if (renderGroup)\n        {\n            renderGroup.onChildViewUpdate(this);\n        }\n    }\n\n    public override destroy(options?: DestroyOptions): void\n    {\n        super.destroy(options);\n\n        this._bounds = null;\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAaO,MAAe,+LAAsB,YAC5C,CAAA;IADO,WAAA,EAAA;QAAA,KAAA,CAAA,GAAA,SAAA,CAAA,CAAA;QAKH,aAAA,GAAA,IAAA,CAAgB,SAAY,GAAA,IAAA,CAAA;QAE5B,aAAA,GAAA,IAAA,CAAgB,aAAgB,GAAA,KAAA,CAAA;QAGhC,aAAA,GAAA,IAAA,CAAO,YAAsB,GAAA,CAAA,CAAA;QAE7B,aAAA,GAAA,IAAA,CAAO,SAAY,GAAA,CAAA,CAAA;QAEnB,aAAA,GAAA,IAAA,CAAO,oBAAuB,GAAA,CAAA,CAAA,CAAA;QAE9B,IAAA,CAAU,OAAA,GAAkB,oLAAI,SAAA,CAAO,CAAG,EAAA,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA;QACjD,IAAA,CAAU,YAAe,GAAA,IAAA,CAAA;IAAA,CAAA;IAAA;;;GAAA,GAMzB,IAAW,MACX,GAAA;QACI,IAAI,CAAC,IAAK,CAAA,YAAA,EAAc,OAAO,IAAK,CAAA,OAAA,CAAA;QAEpC,IAAA,CAAK,YAAa,EAAA,CAAA;QAElB,IAAA,CAAK,YAAe,GAAA,KAAA,CAAA;QAEpB,OAAO,IAAK,CAAA,OAAA,CAAA;IAAA,CAChB;IAAA;;;GAAA,GASA,IAAI,WACJ,GAAA;QACW,OAAA,CAAC,CAAC,IAAK,CAAA,YAAA,CAAA;IAAA,CAClB;IAEA,IAAI,YAAY,KAChB,EAAA;QACS,IAAA,CAAA,YAAA,GAAe,QAAQ,CAAI,GAAA,CAAA,CAAA;IAAA,CACpC;IAAA;;;GAAA,GAMO,cAAc,KACrB,EAAA;QACI,MAAM,SAAS,IAAK,CAAA,MAAA,CAAA;QACd,MAAA,EAAE,CAAG,EAAA,CAAA,EAAM,GAAA,KAAA,CAAA;QAET,OAAA,CAAA,IAAK,MAAO,CAAA,IAAA,IACb,CAAK,IAAA,MAAA,CAAO,IAAA,IACZ,CAAK,IAAA,MAAA,CAAO,IACZ,IAAA,CAAA,IAAK,MAAO,CAAA,IAAA,CAAA;IAAA,CACvB;IAAA,aAAA,GAMU,YACV,GAAA;QACS,IAAA,CAAA,kBAAA,EAAA,CAAA;QAEL,IAAA,CAAK,YAAe,GAAA,IAAA,CAAA;QAEpB,IAAI,IAAK,CAAA,aAAA,EAAe,OAAA;QACxB,IAAA,CAAK,aAAgB,GAAA,IAAA,CAAA;QAEf,MAAA,WAAA,GAAc,IAAK,CAAA,WAAA,IAAe,IAAK,CAAA,iBAAA,CAAA;QAE7C,IAAI,WACJ,EAAA;YACI,WAAA,CAAY,iBAAA,CAAkB,IAAI,CAAA,CAAA;QAAA,CACtC;IAAA,CACJ;IAEgB,QAAQ,OACxB,EAAA;QACI,KAAA,CAAM,QAAQ,OAAO,CAAA,CAAA;QAErB,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;IAAA,CACnB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 10783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10789, "column": 0}, "map": {"version":3,"file":"Graphics.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/graphics/shared/Graphics.ts"],"sourcesContent":["import { deprecation, v8_0_0 } from '../../../utils/logging/deprecation';\nimport { ViewContainer } from '../../view/ViewContainer';\nimport { GraphicsContext } from './GraphicsContext';\n\nimport type { ColorSource } from '../../../color/Color';\nimport type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { PointData } from '../../../maths/point/PointData';\nimport type { Instruction } from '../../../rendering/renderers/shared/instructions/Instruction';\nimport type { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport type { Bounds } from '../../container/bounds/Bounds';\nimport type { ContainerOptions } from '../../container/Container';\nimport type { ContextDestroyOptions, DestroyOptions } from '../../container/destroyTypes';\nimport type { FillInput, FillStyle, StrokeStyle } from './FillTypes';\nimport type { GraphicsPath } from './path/GraphicsPath';\nimport type { RoundedPoint } from './path/roundShape';\n\n/**\n * Constructor options used for `Graphics` instances.\n * ```js\n * const graphics = new Graphics({\n *    fillStyle: { color: 0xff0000, alpha: 0.5 },\n *    strokeStyle: { color: 0x00ff00, width: 2 },\n * });\n * ```\n * @see {@link scene.Graphics}\n * @memberof scene\n */\nexport interface GraphicsOptions extends ContainerOptions\n{\n    /** The GraphicsContext to use, useful for reuse and optimisation */\n    context?: GraphicsContext;\n    /** Whether or not to round the x/y position. */\n    roundPixels?: boolean;\n}\n\n/**\n * The Graphics class is primarily used to render primitive shapes such as lines, circles and\n * rectangles to the display, and to color and fill them.  However, you can also use a Graphics\n * object to build a list of primitives to use as a mask, or as a complex hitArea.\n * @memberof scene\n * @extends scene.Container\n */\nexport class Graphics extends ViewContainer implements Instruction\n{\n    public override readonly renderPipeId: string = 'graphics';\n    public batched: boolean;\n\n    private _context: GraphicsContext;\n    private readonly _ownedContext: GraphicsContext;\n\n    /**\n     * @param options - Options for the Graphics.\n     */\n    constructor(options?: GraphicsOptions | GraphicsContext)\n    {\n        if (options instanceof GraphicsContext)\n        {\n            options = { context: options };\n        }\n\n        const { context, roundPixels, ...rest } = options || {};\n\n        super({\n            label: 'Graphics',\n            ...rest\n        });\n\n        if (!context)\n        {\n            this._context = this._ownedContext = new GraphicsContext();\n        }\n        else\n        {\n            this._context = context;\n        }\n\n        this._context.on('update', this.onViewUpdate, this);\n\n        this.allowChildren = false;\n        this.roundPixels = roundPixels ?? false;\n    }\n\n    set context(context: GraphicsContext)\n    {\n        if (context === this._context) return;\n\n        this._context.off('update', this.onViewUpdate, this);\n\n        this._context = context;\n\n        // TODO store this bound function somewhere else..\n        this._context.on('update', this.onViewUpdate, this);\n\n        this.onViewUpdate();\n    }\n\n    get context(): GraphicsContext\n    {\n        return this._context;\n    }\n\n    /**\n     * The local bounds of the graphic.\n     * @type {rendering.Bounds}\n     */\n    override get bounds(): Bounds\n    {\n        return this._context.bounds;\n    }\n\n    /**\n     * Graphics objects do not need to update their bounds as the context handles this.\n     * @private\n     */\n    protected updateBounds(): void { /** */ }\n\n    /**\n     * Checks if the object contains the given point.\n     * @param point - The point to check\n     */\n    public override containsPoint(point: PointData)\n    {\n        return this._context.containsPoint(point);\n    }\n\n    /**\n     * Destroys this graphics renderable and optionally its context.\n     * @param options - Options parameter. A boolean will act as if all options\n     *\n     * If the context was created by this graphics and `destroy(false)` or `destroy()` is called\n     * then the context will still be destroyed.\n     *\n     * If you want to explicitly not destroy this context that this graphics created,\n     * then you should pass destroy({ context: false })\n     *\n     * If the context was passed in as an argument to the constructor then it will not be destroyed\n     * @param {boolean} [options.texture=false] - Should destroy the texture of the graphics context\n     * @param {boolean} [options.textureSource=false] - Should destroy the texture source of the graphics context\n     * @param {boolean} [options.context=false] - Should destroy the context\n     */\n    public override destroy(options?: DestroyOptions): void\n    {\n        if (this._ownedContext && !options)\n        {\n            this._ownedContext.destroy(options);\n        }\n        else if (options === true || (options as ContextDestroyOptions)?.context === true)\n        {\n            this._context.destroy(options);\n        }\n\n        (this._ownedContext as null) = null;\n        this._context = null;\n\n        super.destroy(options);\n    }\n\n    private _callContextMethod(method: keyof GraphicsContext, args: any[]): this\n    {\n        (this.context as any)[method](...args);\n\n        return this;\n    }\n\n    // --------------------------------------- GraphicsContext methods ---------------------------------------\n    /**\n     * Sets the current fill style of the graphics context. The fill style can be a color, gradient,\n     * pattern, or a more complex style defined by a FillStyle object.\n     * @param {FillInput} args - The fill style to apply. This can be a simple color, a gradient or\n     * pattern object, or a FillStyle or ConvertedFillStyle object.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setFillStyle(...args: Parameters<GraphicsContext['setFillStyle']>): this\n    {\n        return this._callContextMethod('setFillStyle', args);\n    }\n\n    /**\n     * Sets the current stroke style of the graphics context. Similar to fill styles, stroke styles can\n     * encompass colors, gradients, patterns, or more detailed configurations via a StrokeStyle object.\n     * @param {StrokeInput} args - The stroke style to apply. Can be defined as a color, a gradient or pattern,\n     * or a StrokeStyle or ConvertedStrokeStyle object.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setStrokeStyle(...args: Parameters<GraphicsContext['setStrokeStyle']>): this\n    {\n        return this._callContextMethod('setStrokeStyle', args);\n    }\n\n    /**\n     * Fills the current or given path with the current fill style. This method can optionally take\n     * a color and alpha for a simple fill, or a more complex FillStyle object for advanced fills.\n     * @param {FillInput} style - (Optional) The style to fill the path with. Can be a color, gradient, pattern, or a\n     * complex style object. If omitted, uses the current fill style.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public fill(style?: FillInput): this;\n    /** @deprecated 8.0.0 */\n    public fill(color: ColorSource, alpha?: number): this;\n    public fill(...args: [FillStyle | ColorSource, number?]): this\n    {\n        return this._callContextMethod('fill', args);\n    }\n    /**\n     * Strokes the current path with the current stroke style. This method can take an optional\n     * FillStyle parameter to define the stroke's appearance, including its color, width, and other properties.\n     * @param {FillStyle} args - (Optional) The stroke style to apply. Can be defined as a simple color or a more\n     * complex style object. If omitted, uses the current stroke style.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public stroke(...args: Parameters<GraphicsContext['stroke']>): this\n    {\n        return this._callContextMethod('stroke', args);\n    }\n    /**\n     * Adds a texture to the graphics context. This method supports multiple overloads for specifying the texture,\n     * tint, and dimensions. If only a texture is provided, it uses the texture's width and height for drawing.\n     * Additional parameters allow for specifying a tint color, and custom dimensions for the texture drawing area.\n     * @param texture - The Texture object to use.\n     * @param tint - (Optional) A ColorSource to tint the texture. If not provided, defaults to white (0xFFFFFF).\n     * @param dx - (Optional) The x-coordinate in the destination canvas at which to place the top-left corner of\n     * the source image.\n     * @param dy - (Optional) The y-coordinate in the destination canvas at which to place the top-left corner of\n     * the source image.\n     * @param dw - (Optional) The width of the rectangle within the source image to draw onto the destination canvas.\n     * If not provided, uses the texture's frame width.\n     * @param dh - (Optional) The height of the rectangle within the source image to draw onto the destination canvas.\n     * If not provided, uses the texture's frame height.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public texture(texture: Texture, tint?: ColorSource, dx?: number, dy?: number, dw?: number, dh?: number): this;\n    public texture(texture: Texture): this;\n    public texture(...args: [Texture, number?, number?, number?, number?, number?]): this\n    {\n        return this._callContextMethod('texture', args);\n    }\n    /**\n     * Resets the current path. Any previous path and its commands are discarded and a new path is\n     * started. This is typically called before beginning a new shape or series of drawing commands.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public beginPath(): this\n    {\n        return this._callContextMethod('beginPath', []);\n    }\n    /**\n     * Applies a cutout to the last drawn shape. This is used to create holes or complex shapes by\n     * subtracting a path from the previously drawn path. If a hole is not completely in a shape, it will\n     * fail to cut correctly!\n     */\n    public cut(): this\n    {\n        return this._callContextMethod('cut', []);\n    }\n    /**\n     * Adds an arc to the current path, which is centered at (x, y) with the specified radius,\n     * starting and ending angles, and direction.\n     * @param x - The x-coordinate of the arc's center.\n     * @param y - The y-coordinate of the arc's center.\n     * @param radius - The arc's radius.\n     * @param startAngle - The starting angle, in radians.\n     * @param endAngle - The ending angle, in radians.\n     * @param counterclockwise - (Optional) Specifies whether the arc is drawn counterclockwise (true) or clockwise\n     * (false). Defaults to false.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): this;\n    public arc(...args: Parameters<GraphicsContext['arc']>): this\n    {\n        return this._callContextMethod('arc', args);\n    }\n    /**\n     * Adds an arc to the current path with the given control points and radius, connected to the previous point\n     * by a straight line if necessary.\n     * @param x1 - The x-coordinate of the first control point.\n     * @param y1 - The y-coordinate of the first control point.\n     * @param x2 - The x-coordinate of the second control point.\n     * @param y2 - The y-coordinate of the second control point.\n     * @param radius - The arc's radius.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): this;\n    public arcTo(...args: Parameters<GraphicsContext['arcTo']>): this\n    {\n        return this._callContextMethod('arcTo', args);\n    }\n    /**\n     * Adds an SVG-style arc to the path, allowing for elliptical arcs based on the SVG spec.\n     * @param rx - The x-radius of the ellipse.\n     * @param ry - The y-radius of the ellipse.\n     * @param xAxisRotation - The rotation of the ellipse's x-axis relative\n     * to the x-axis of the coordinate system, in degrees.\n     * @param largeArcFlag - Determines if the arc should be greater than or less than 180 degrees.\n     * @param sweepFlag - Determines if the arc should be swept in a positive angle direction.\n     * @param x - The x-coordinate of the arc's end point.\n     * @param y - The y-coordinate of the arc's end point.\n     * @returns The instance of the current object for chaining.\n     */\n    public arcToSvg(\n        rx: number, ry: number, xAxisRotation: number, largeArcFlag: number, sweepFlag: number, x: number, y: number\n    ): this;\n    public arcToSvg(...args: Parameters<GraphicsContext['arcToSvg']>): this\n    {\n        return this._callContextMethod('arcToSvg', args);\n    }\n    /**\n     * Adds a cubic Bezier curve to the path.\n     * It requires three points: the first two are control points and the third one is the end point.\n     * The starting point is the last point in the current path.\n     * @param cp1x - The x-coordinate of the first control point.\n     * @param cp1y - The y-coordinate of the first control point.\n     * @param cp2x - The x-coordinate of the second control point.\n     * @param cp2y - The y-coordinate of the second control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public bezierCurveTo(\n        cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number, smoothness?: number\n    ): this;\n    public bezierCurveTo(...args: Parameters<GraphicsContext['bezierCurveTo']>): this\n    {\n        return this._callContextMethod('bezierCurveTo', args);\n    }\n    /**\n     * Closes the current path by drawing a straight line back to the start.\n     * If the shape is already closed or there are no points in the path, this method does nothing.\n     * @returns The instance of the current object for chaining.\n     */\n    public closePath(): this\n    {\n        return this._callContextMethod('closePath', []);\n    }\n    /**\n     * Draws an ellipse at the specified location and with the given x and y radii.\n     * An optional transformation can be applied, allowing for rotation, scaling, and translation.\n     * @param x - The x-coordinate of the center of the ellipse.\n     * @param y - The y-coordinate of the center of the ellipse.\n     * @param radiusX - The horizontal radius of the ellipse.\n     * @param radiusY - The vertical radius of the ellipse.\n     * @returns The instance of the current object for chaining.\n     */\n    public ellipse(x: number, y: number, radiusX: number, radiusY: number): this;\n    public ellipse(...args: Parameters<GraphicsContext['ellipse']>): this\n    {\n        return this._callContextMethod('ellipse', args);\n    }\n    /**\n     * Draws a circle shape. This method adds a new circle path to the current drawing.\n     * @param x - The x-coordinate of the center of the circle.\n     * @param y - The y-coordinate of the center of the circle.\n     * @param radius - The radius of the circle.\n     * @returns The instance of the current object for chaining.\n     */\n    public circle(x: number, y: number, radius: number): this;\n    public circle(...args: Parameters<GraphicsContext['circle']>): this\n    {\n        return this._callContextMethod('circle', args);\n    }\n    /**\n     * Adds another `GraphicsPath` to this path, optionally applying a transformation.\n     * @param path - The `GraphicsPath` to add.\n     * @returns The instance of the current object for chaining.\n     */\n    public path(path: GraphicsPath): this;\n    public path(...args: Parameters<GraphicsContext['path']>): this\n    {\n        return this._callContextMethod('path', args);\n    }\n    /**\n     * Connects the current point to a new point with a straight line. This method updates the current path.\n     * @param x - The x-coordinate of the new point to connect to.\n     * @param y - The y-coordinate of the new point to connect to.\n     * @returns The instance of the current object for chaining.\n     */\n    public lineTo(x: number, y: number): this;\n    public lineTo(...args: Parameters<GraphicsContext['lineTo']>): this\n    {\n        return this._callContextMethod('lineTo', args);\n    }\n    /**\n     * Sets the starting point for a new sub-path. Any subsequent drawing commands are considered part of this path.\n     * @param x - The x-coordinate for the starting point.\n     * @param y - The y-coordinate for the starting point.\n     * @returns The instance of the current object for chaining.\n     */\n    public moveTo(x: number, y: number): this;\n    public moveTo(...args: Parameters<GraphicsContext['moveTo']>): this\n    {\n        return this._callContextMethod('moveTo', args);\n    }\n    /**\n     * Adds a quadratic curve to the path. It requires two points: the control point and the end point.\n     * The starting point is the last point in the current path.\n     * @param cpx - The x-coordinate of the control point.\n     * @param cpy - The y-coordinate of the control point.\n     * @param x - The x-coordinate of the end point.\n     * @param y - The y-coordinate of the end point.\n     * @param smoothness - Optional parameter to adjust the smoothness of the curve.\n     * @returns The instance of the current object for chaining.\n     */\n    public quadraticCurveTo(cpx: number, cpy: number, x: number, y: number, smoothness?: number): this;\n    public quadraticCurveTo(...args: Parameters<GraphicsContext['quadraticCurveTo']>): this\n    {\n        return this._callContextMethod('quadraticCurveTo', args);\n    }\n    /**\n     * Draws a rectangle shape. This method adds a new rectangle path to the current drawing.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @returns The instance of the current object for chaining.\n     */\n    public rect(x: number, y: number, w: number, h: number): this;\n    public rect(...args: Parameters<GraphicsContext['rect']>): this\n    {\n        return this._callContextMethod('rect', args);\n    }\n    /**\n     * Draws a rectangle with rounded corners.\n     * The corner radius can be specified to determine how rounded the corners should be.\n     * An optional transformation can be applied, which allows for rotation, scaling, and translation of the rectangle.\n     * @param x - The x-coordinate of the top-left corner of the rectangle.\n     * @param y - The y-coordinate of the top-left corner of the rectangle.\n     * @param w - The width of the rectangle.\n     * @param h - The height of the rectangle.\n     * @param radius - The radius of the rectangle's corners. If not specified, corners will be sharp.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundRect(x: number, y: number, w: number, h: number, radius?: number): this;\n    public roundRect(...args: Parameters<GraphicsContext['roundRect']>): this\n    {\n        return this._callContextMethod('roundRect', args);\n    }\n    /**\n     * Draws a polygon shape by specifying a sequence of points. This method allows for the creation of complex polygons,\n     * which can be both open and closed. An optional transformation can be applied, enabling the polygon to be scaled,\n     * rotated, or translated as needed.\n     * @param points - An array of numbers, or an array of PointData objects eg [{x,y}, {x,y}, {x,y}]\n     * representing the x and y coordinates, of the polygon's vertices, in sequence.\n     * @param close - A boolean indicating whether to close the polygon path. True by default.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    public poly(points: number[] | PointData[], close?: boolean): this;\n    public poly(...args: Parameters<GraphicsContext['poly']>): this\n    {\n        return this._callContextMethod('poly', args);\n    }\n    /**\n     * Draws a regular polygon with a specified number of sides. All sides and angles are equal.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @param transform - An optional `Matrix` object to apply a transformation to the polygon.\n     * @returns The instance of the current object for chaining.\n     */\n    public regularPoly(x: number, y: number, radius: number, sides: number, rotation?: number, transform?: Matrix): this;\n    public regularPoly(...args: Parameters<GraphicsContext['regularPoly']>): this\n    {\n        return this._callContextMethod('regularPoly', args);\n    }\n    /**\n     * Draws a polygon with rounded corners.\n     * Similar to `regularPoly` but with the ability to round the corners of the polygon.\n     * @param x - The x-coordinate of the center of the polygon.\n     * @param y - The y-coordinate of the center of the polygon.\n     * @param radius - The radius of the circumscribed circle of the polygon.\n     * @param sides - The number of sides of the polygon. Must be 3 or more.\n     * @param corner - The radius of the rounding of the corners.\n     * @param rotation - The rotation angle of the polygon, in radians. Zero by default.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundPoly(x: number, y: number, radius: number, sides: number, corner: number, rotation?: number): this;\n    public roundPoly(...args: Parameters<GraphicsContext['roundPoly']>): this\n    {\n        return this._callContextMethod('roundPoly', args);\n    }\n    /**\n     * Draws a shape with rounded corners. This function supports custom radius for each corner of the shape.\n     * Optionally, corners can be rounded using a quadratic curve instead of an arc, providing a different aesthetic.\n     * @param points - An array of `RoundedPoint` representing the corners of the shape to draw.\n     * A minimum of 3 points is required.\n     * @param radius - The default radius for the corners.\n     * This radius is applied to all corners unless overridden in `points`.\n     * @param useQuadratic - If set to true, rounded corners are drawn using a quadraticCurve\n     *  method instead of an arc method. Defaults to false.\n     * @param smoothness - Specifies the smoothness of the curve when `useQuadratic` is true.\n     * Higher values make the curve smoother.\n     * @returns The instance of the current object for chaining.\n     */\n    public roundShape(points: RoundedPoint[], radius: number, useQuadratic?: boolean, smoothness?: number): this;\n    public roundShape(...args: Parameters<GraphicsContext['roundShape']>): this\n    {\n        return this._callContextMethod('roundShape', args);\n    }\n    /**\n     * Draw Rectangle with fillet corners. This is much like rounded rectangle\n     * however it support negative numbers as well for the corner radius.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param fillet - accept negative or positive values\n     */\n    public filletRect(x: number, y: number, width: number, height: number, fillet: number): this;\n    public filletRect(...args: Parameters<GraphicsContext['filletRect']>): this\n    {\n        return this._callContextMethod('filletRect', args);\n    }\n    /**\n     * Draw Rectangle with chamfer corners. These are angled corners.\n     * @param x - Upper left corner of rect\n     * @param y - Upper right corner of rect\n     * @param width - Width of rect\n     * @param height - Height of rect\n     * @param chamfer - non-zero real number, size of corner cutout\n     * @param transform\n     */\n    public chamferRect(x: number, y: number, width: number, height: number, chamfer: number, transform?: Matrix): this;\n    public chamferRect(...args: Parameters<GraphicsContext['chamferRect']>): this\n    {\n        return this._callContextMethod('chamferRect', args);\n    }\n    /**\n     * Draws a star shape centered at a specified location. This method allows for the creation\n     *  of stars with a variable number of points, outer radius, optional inner radius, and rotation.\n     * The star is drawn as a closed polygon with alternating outer and inner vertices to create the star's points.\n     * An optional transformation can be applied to scale, rotate, or translate the star as needed.\n     * @param x - The x-coordinate of the center of the star.\n     * @param y - The y-coordinate of the center of the star.\n     * @param points - The number of points of the star.\n     * @param radius - The outer radius of the star (distance from the center to the outer points).\n     * @param innerRadius - Optional. The inner radius of the star\n     * (distance from the center to the inner points between the outer points).\n     * If not provided, defaults to half of the `radius`.\n     * @param rotation - Optional. The rotation of the star in radians, where 0 is aligned with the y-axis.\n     * Defaults to 0, meaning one point is directly upward.\n     * @returns The instance of the current object for chaining further drawing commands.\n     */\n    public star(x: number, y: number, points: number, radius: number, innerRadius?: number, rotation?: number): this;\n    public star(...args: Parameters<GraphicsContext['star']>): this\n    {\n        return this._callContextMethod('star', args);\n    }\n    /**\n     * Parses and renders an SVG string into the graphics context. This allows for complex shapes and paths\n     * defined in SVG format to be drawn within the graphics context.\n     * @param svg - The SVG string to be parsed and rendered.\n     */\n    public svg(svg: string): this;\n    public svg(...args: Parameters<GraphicsContext['svg']>): this\n    {\n        return this._callContextMethod('svg', args);\n    }\n    /**\n     * Restores the most recently saved graphics state by popping the top of the graphics state stack.\n     * This includes transformations, fill styles, and stroke styles.\n     */\n    public restore(): this;\n    public restore(...args: Parameters<GraphicsContext['restore']>): this\n    {\n        return this._callContextMethod('restore', args);\n    }\n    /** Saves the current graphics state, including transformations, fill styles, and stroke styles, onto a stack. */\n    public save(): this\n    {\n        return this._callContextMethod('save', []);\n    }\n    /**\n     * Returns the current transformation matrix of the graphics context.\n     * @returns The current transformation matrix.\n     */\n    public getTransform(): Matrix\n    {\n        return this.context.getTransform();\n    }\n    /**\n     * Resets the current transformation matrix to the identity matrix, effectively removing\n     * any transformations (rotation, scaling, translation) previously applied.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public resetTransform(): this\n    {\n        return this._callContextMethod('resetTransform', []);\n    }\n    /**\n     * Applies a rotation transformation to the graphics context around the current origin.\n     * @param angle - The angle of rotation in radians.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public rotateTransform(angle: number): this;\n    public rotateTransform(...args: Parameters<GraphicsContext['rotate']>): this\n    {\n        return this._callContextMethod('rotate', args);\n    }\n    /**\n     * Applies a scaling transformation to the graphics context, scaling drawings by x horizontally and by y vertically.\n     * @param x - The scale factor in the horizontal direction.\n     * @param y - (Optional) The scale factor in the vertical direction.\n     * If not specified, the x value is used for both directions.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public scaleTransform(x: number, y?: number): this;\n    public scaleTransform(...args: Parameters<GraphicsContext['scale']>): this\n    {\n        return this._callContextMethod('scale', args);\n    }\n    /**\n     * Sets the current transformation matrix of the graphics context to the specified matrix or values.\n     * This replaces the current transformation matrix.\n     * @param a - The value for the a property of the matrix, or a Matrix object to use directly.\n     * @param b - The value for the b property of the matrix.\n     * @param c - The value for the c property of the matrix.\n     * @param d - The value for the d property of the matrix.\n     * @param dx - The value for the tx (translate x) property of the matrix.\n     * @param dy - The value for the ty (translate y) property of the matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public setTransform(transform: Matrix): this;\n    public setTransform(a: number, b: number, c: number, d: number, dx: number, dy: number): this;\n    public setTransform(a: number | Matrix, b?: number, c?: number, d?: number, dx?: number, dy?: number): this;\n    public setTransform(...args: [Matrix] | [number, number, number, number, number, number]): this\n    {\n        return this._callContextMethod('setTransform', args);\n    }\n    /**\n     * Applies the specified transformation matrix to the current graphics context by multiplying\n     * the current matrix with the specified matrix.\n     * @param a - The value for the a property of the matrix, or a Matrix object to use directly.\n     * @param b - The value for the b property of the matrix.\n     * @param c - The value for the c property of the matrix.\n     * @param d - The value for the d property of the matrix.\n     * @param dx - The value for the tx (translate x) property of the matrix.\n     * @param dy - The value for the ty (translate y) property of the matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public transform(transform: Matrix): this;\n    public transform(a: number, b: number, c: number, d: number, dx: number, dy: number): this;\n    public transform(a: number | Matrix, b?: number, c?: number, d?: number, dx?: number, dy?: number): this;\n    public transform(...args: [Matrix] | [number, number, number, number, number, number]): this\n    {\n        return this._callContextMethod('transform', args);\n    }\n    /**\n     * Applies a translation transformation to the graphics context, moving the origin by the specified amounts.\n     * @param x - The amount to translate in the horizontal direction.\n     * @param y - (Optional) The amount to translate in the vertical direction. If not specified,\n     * the x value is used for both directions.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public translateTransform(x: number, y?: number): this;\n    public translateTransform(...args: Parameters<GraphicsContext['translate']>): this\n    {\n        return this._callContextMethod('translate', args);\n    }\n    /**\n     * Clears all drawing commands from the graphics context, effectively resetting it. This includes clearing the path,\n     * and optionally resetting transformations to the identity matrix.\n     * @returns The instance of the current GraphicsContext for method chaining.\n     */\n    public clear(): this\n    {\n        return this._callContextMethod('clear', []);\n    }\n    /**\n     * The fill style to use.\n     * @type {ConvertedFillStyle}\n     */\n    get fillStyle(): GraphicsContext['fillStyle']\n    {\n        return this._context.fillStyle;\n    }\n    set fillStyle(value: FillInput)\n    {\n        this._context.fillStyle = value;\n    }\n    /**\n     * The stroke style to use.\n     * @type {ConvertedStrokeStyle}\n     */\n    get strokeStyle(): GraphicsContext['strokeStyle']\n    {\n        return this._context.strokeStyle;\n    }\n    set strokeStyle(value: StrokeStyle)\n    {\n        this._context.strokeStyle = value;\n    }\n\n    /**\n     * Creates a new Graphics object.\n     * Note that only the context of the object is cloned, not its transform (position,scale,etc)\n     * @param deep - Whether to create a deep clone of the graphics object. If false, the context\n     * will be shared between the two objects (default false). If true, the context will be\n     * cloned (recommended if you need to modify the context in any way).\n     * @returns - A clone of the graphics object\n     */\n    public clone(deep = false): Graphics\n    {\n        if (deep)\n        {\n            return new Graphics(this._context.clone());\n        }\n\n        (this._ownedContext as null) = null;\n        const clone = new Graphics(this._context);\n\n        return clone;\n    }\n\n    // -------- v7 deprecations ---------\n\n    /**\n     * @param width\n     * @param color\n     * @param alpha\n     * @deprecated since 8.0.0 Use {@link Graphics#setStrokeStyle} instead\n     */\n    public lineStyle(width?: number, color?: ColorSource, alpha?: number): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#lineStyle is no longer needed. Use Graphics#setStrokeStyle to set the stroke style.');\n        // #endif\n\n        const strokeStyle: Partial<StrokeStyle> = {};\n\n        // avoid undefined assignment\n        width && (strokeStyle.width = width);\n        color && (strokeStyle.color = color);\n        alpha && (strokeStyle.alpha = alpha);\n\n        this.context.strokeStyle = strokeStyle;\n\n        return this;\n    }\n\n    /**\n     * @param color\n     * @param alpha\n     * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n     */\n    public beginFill(color: ColorSource, alpha?: number)\n    {\n        // #if _DEBUG\n        // eslint-disable-next-line max-len\n        deprecation(v8_0_0, 'Graphics#beginFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.');\n        // #endif\n\n        const fillStyle: Partial<FillStyle> = {};\n\n        // avoid undefined assignment\n        if (color !== undefined) fillStyle.color = color;\n        if (alpha !== undefined) fillStyle.alpha = alpha;\n\n        this.context.fillStyle = fillStyle;\n\n        return this;\n    }\n\n    /**\n     * @deprecated since 8.0.0 Use {@link Graphics#fill} instead\n     */\n    public endFill()\n    {\n        // #if _DEBUG\n        // eslint-disable-next-line max-len\n        deprecation(v8_0_0, 'Graphics#endFill is no longer needed. Use Graphics#fill to fill the shape with the desired style.');\n        // #endif\n\n        this.context.fill();\n        const strokeStyle = this.context.strokeStyle;\n\n        if (strokeStyle.width !== GraphicsContext.defaultStrokeStyle.width\n            || strokeStyle.color !== GraphicsContext.defaultStrokeStyle.color\n            || strokeStyle.alpha !== GraphicsContext.defaultStrokeStyle.alpha)\n        {\n            this.context.stroke();\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#circle} instead\n     */\n    public drawCircle(...args: Parameters<GraphicsContext['circle']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawCircle has been renamed to Graphics#circle');\n        // #endif\n\n        return this._callContextMethod('circle', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#ellipse} instead\n     */\n    public drawEllipse(...args: Parameters<GraphicsContext['ellipse']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawEllipse has been renamed to Graphics#ellipse');\n        // #endif\n\n        return this._callContextMethod('ellipse', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#poly} instead\n     */\n    public drawPolygon(...args: Parameters<GraphicsContext['poly']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawPolygon has been renamed to Graphics#poly');\n        // #endif\n\n        return this._callContextMethod('poly', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#rect} instead\n     */\n    public drawRect(...args: Parameters<GraphicsContext['rect']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawRect has been renamed to Graphics#rect');\n        // #endif\n\n        return this._callContextMethod('rect', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#roundRect} instead\n     */\n    public drawRoundedRect(...args: Parameters<GraphicsContext['roundRect']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawRoundedRect has been renamed to Graphics#roundRect');\n        // #endif\n\n        return this._callContextMethod('roundRect', args);\n    }\n\n    /**\n     * @param {...any} args\n     * @deprecated since 8.0.0 Use {@link Graphics#star} instead\n     */\n    public drawStar(...args: Parameters<GraphicsContext['star']>): this\n    {\n        // #if _DEBUG\n        deprecation(v8_0_0, 'Graphics#drawStar has been renamed to Graphics#star');\n        // #endif\n\n        return this._callContextMethod('star', args);\n    }\n}\n"],"names":[],"mappings":";;;;;;;;;;AA0CO,MAAM,wLAAiB,iBAC9B,CAAA;IAAA;;GAAA,GAUI,YAAY,OACZ,CAAA;QACI,IAAI,2MAAmB,kBACvB,EAAA;YACc,OAAA,GAAA;gBAAE,SAAS,OAAQ;YAAA,CAAA,CAAA;QAAA,CACjC;QAEA,MAAM,EAAE,OAAS,EAAA,WAAA,EAAa,GAAG,IAAK,EAAA,GAAI,WAAW,CAAA,CAAC,CAAA;QAEhD,KAAA,CAAA;YACF,KAAO,EAAA,UAAA;YACP,GAAG,IAAA;QAAA,CACN,CAAA,CAAA;QArBL,IAAA,CAAyB,YAAuB,GAAA,UAAA,CAAA;QAuB5C,IAAI,CAAC,OACL,EAAA;YACI,IAAA,CAAK,QAAW,GAAA,IAAA,CAAK,aAAgB,GAAA,4LAAI,kBAAgB,EAAA,CAAA;QAAA,CAG7D,MAAA;YACI,IAAA,CAAK,QAAW,GAAA,OAAA,CAAA;QAAA,CACpB;QAEA,IAAA,CAAK,QAAS,CAAA,EAAA,CAAG,QAAU,EAAA,IAAA,CAAK,YAAA,EAAc,IAAI,CAAA,CAAA;QAElD,IAAA,CAAK,aAAgB,GAAA,KAAA,CAAA;QACrB,IAAA,CAAK,WAAA,GAAc,WAAe,IAAA,KAAA,CAAA;IAAA,CACtC;IAEA,IAAI,QAAQ,OACZ,EAAA;QACI,IAAI,YAAY,IAAK,CAAA,QAAA,EAAU,OAAA;QAE/B,IAAA,CAAK,QAAS,CAAA,GAAA,CAAI,QAAU,EAAA,IAAA,CAAK,YAAA,EAAc,IAAI,CAAA,CAAA;QAEnD,IAAA,CAAK,QAAW,GAAA,OAAA,CAAA;QAGhB,IAAA,CAAK,QAAS,CAAA,EAAA,CAAG,QAAU,EAAA,IAAA,CAAK,YAAA,EAAc,IAAI,CAAA,CAAA;QAElD,IAAA,CAAK,YAAa,EAAA,CAAA;IAAA,CACtB;IAEA,IAAI,OACJ,GAAA;QACI,OAAO,IAAK,CAAA,QAAA,CAAA;IAAA,CAChB;IAAA;;;GAAA,GAMA,IAAa,MACb,GAAA;QACI,OAAO,IAAA,CAAK,QAAS,CAAA,MAAA,CAAA;IAAA,CACzB;IAAA;;;GAAA,GAMU,YAAqB,GAAA,CAAA,CAAS;IAAA;;;GAAA,GAMxB,cAAc,KAC9B,EAAA;QACW,OAAA,IAAA,CAAK,QAAS,CAAA,aAAA,CAAc,KAAK,CAAA,CAAA;IAAA,CAC5C;IAAA;;;;;;;;;;;;;;GAAA,GAiBgB,QAAQ,OACxB,EAAA;QACQ,IAAA,IAAA,CAAK,aAAiB,IAAA,CAAC,OAC3B,EAAA;YACS,IAAA,CAAA,aAAA,CAAc,OAAA,CAAQ,OAAO,CAAA,CAAA;QAAA,CAE7B,MAAA,IAAA,OAAA,KAAY,IAAS,IAAA,OAAA,EAAmC,YAAY,IAC7E,EAAA;YACS,IAAA,CAAA,QAAA,CAAS,OAAA,CAAQ,OAAO,CAAA,CAAA;QAAA,CACjC;QAEC,IAAA,CAAK,aAAyB,GAAA,IAAA,CAAA;QAC/B,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;QAEhB,KAAA,CAAM,QAAQ,OAAO,CAAA,CAAA;IAAA,CACzB;IAEQ,kBAAA,CAAmB,MAAA,EAA+B,IAC1D,EAAA;QACK,IAAK,CAAA,OAAA,CAAgB,MAAM,CAAA,CAAE,GAAG,IAAI,CAAA,CAAA;QAE9B,OAAA,IAAA,CAAA;IAAA,CACX;IAAA,0GAAA;IAAA;;;;;;GAAA,GAUO,aAAA,GAAgB,IACvB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,cAAA,EAAgB,IAAI,CAAA,CAAA;IAAA,CACvD;IAAA;;;;;;GAAA,GASO,eAAA,GAAkB,IACzB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,gBAAA,EAAkB,IAAI,CAAA,CAAA;IAAA,CACzD;IAYO,KAAA,GAAQ,IACf,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAAA;;;;;;GAAA,GAQO,OAAA,GAAU,IACjB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;IAAA,CACjD;IAmBO,QAAA,GAAW,IAClB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,SAAA,EAAW,IAAI,CAAA,CAAA;IAAA,CAClD;IAAA;;;;GAAA,GAMO,SACP,GAAA;QACI,OAAO,IAAK,CAAA,kBAAA,CAAmB,WAAa,EAAA,EAAE,CAAA,CAAA;IAAA,CAClD;IAAA;;;;GAAA,GAMO,GACP,GAAA;QACI,OAAO,IAAK,CAAA,kBAAA,CAAmB,KAAO,EAAA,EAAE,CAAA,CAAA;IAAA,CAC5C;IAcO,IAAA,GAAO,IACd,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,KAAA,EAAO,IAAI,CAAA,CAAA;IAAA,CAC9C;IAYO,MAAA,GAAS,IAChB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,OAAA,EAAS,IAAI,CAAA,CAAA;IAAA,CAChD;IAgBO,SAAA,GAAY,IACnB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,UAAA,EAAY,IAAI,CAAA,CAAA;IAAA,CACnD;IAiBO,cAAA,GAAiB,IACxB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,eAAA,EAAiB,IAAI,CAAA,CAAA;IAAA,CACxD;IAAA;;;;GAAA,GAMO,SACP,GAAA;QACI,OAAO,IAAK,CAAA,kBAAA,CAAmB,WAAa,EAAA,EAAE,CAAA,CAAA;IAAA,CAClD;IAWO,QAAA,GAAW,IAClB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,SAAA,EAAW,IAAI,CAAA,CAAA;IAAA,CAClD;IASO,OAAA,GAAU,IACjB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;IAAA,CACjD;IAOO,KAAA,GAAQ,IACf,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAQO,OAAA,GAAU,IACjB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;IAAA,CACjD;IAQO,OAAA,GAAU,IACjB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;IAAA,CACjD;IAYO,iBAAA,GAAoB,IAC3B,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,kBAAA,EAAoB,IAAI,CAAA,CAAA;IAAA,CAC3D;IAUO,KAAA,GAAQ,IACf,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAaO,UAAA,GAAa,IACpB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,WAAA,EAAa,IAAI,CAAA,CAAA;IAAA,CACpD;IAWO,KAAA,GAAQ,IACf,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAYO,YAAA,GAAe,IACtB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,aAAA,EAAe,IAAI,CAAA,CAAA;IAAA,CACtD;IAaO,UAAA,GAAa,IACpB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,WAAA,EAAa,IAAI,CAAA,CAAA;IAAA,CACpD;IAeO,WAAA,GAAc,IACrB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,YAAA,EAAc,IAAI,CAAA,CAAA;IAAA,CACrD;IAWO,WAAA,GAAc,IACrB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,YAAA,EAAc,IAAI,CAAA,CAAA;IAAA,CACrD;IAWO,YAAA,GAAe,IACtB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,aAAA,EAAe,IAAI,CAAA,CAAA;IAAA,CACtD;IAkBO,KAAA,GAAQ,IACf,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAOO,IAAA,GAAO,IACd,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,KAAA,EAAO,IAAI,CAAA,CAAA;IAAA,CAC9C;IAMO,QAAA,GAAW,IAClB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,SAAA,EAAW,IAAI,CAAA,CAAA;IAAA,CAClD;IAAA,+GAAA,GAEO,IACP,GAAA;QACI,OAAO,IAAK,CAAA,kBAAA,CAAmB,MAAQ,EAAA,EAAE,CAAA,CAAA;IAAA,CAC7C;IAAA;;;GAAA,GAKO,YACP,GAAA;QACW,OAAA,IAAA,CAAK,OAAA,CAAQ,YAAa,EAAA,CAAA;IAAA,CACrC;IAAA;;;;GAAA,GAMO,cACP,GAAA;QACI,OAAO,IAAK,CAAA,kBAAA,CAAmB,gBAAkB,EAAA,EAAE,CAAA,CAAA;IAAA,CACvD;IAOO,gBAAA,GAAmB,IAC1B,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;IAAA,CACjD;IASO,eAAA,GAAkB,IACzB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,OAAA,EAAS,IAAI,CAAA,CAAA;IAAA,CAChD;IAeO,aAAA,GAAgB,IACvB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,cAAA,EAAgB,IAAI,CAAA,CAAA;IAAA,CACvD;IAeO,UAAA,GAAa,IACpB,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,WAAA,EAAa,IAAI,CAAA,CAAA;IAAA,CACpD;IASO,mBAAA,GAAsB,IAC7B,EAAA;QACW,OAAA,IAAA,CAAK,kBAAmB,CAAA,WAAA,EAAa,IAAI,CAAA,CAAA;IAAA,CACpD;IAAA;;;;GAAA,GAMO,KACP,GAAA;QACI,OAAO,IAAK,CAAA,kBAAA,CAAmB,OAAS,EAAA,EAAE,CAAA,CAAA;IAAA,CAC9C;IAAA;;;GAAA,GAKA,IAAI,SACJ,GAAA;QACI,OAAO,IAAA,CAAK,QAAS,CAAA,SAAA,CAAA;IAAA,CACzB;IACA,IAAI,UAAU,KACd,EAAA;QACI,IAAA,CAAK,QAAA,CAAS,SAAY,GAAA,KAAA,CAAA;IAAA,CAC9B;IAAA;;;GAAA,GAKA,IAAI,WACJ,GAAA;QACI,OAAO,IAAA,CAAK,QAAS,CAAA,WAAA,CAAA;IAAA,CACzB;IACA,IAAI,YAAY,KAChB,EAAA;QACI,IAAA,CAAK,QAAA,CAAS,WAAc,GAAA,KAAA,CAAA;IAAA,CAChC;IAAA;;;;;;;GAAA,GAUO,KAAA,CAAM,OAAO,KACpB,EAAA;QACI,IAAI,IACJ,EAAA;YACI,OAAO,IAAI,QAAA,CAAS,IAAK,CAAA,QAAA,CAAS,KAAA,EAAO,CAAA,CAAA;QAAA,CAC7C;QAEC,IAAA,CAAK,aAAyB,GAAA,IAAA,CAAA;QAC/B,MAAM,KAAQ,GAAA,IAAI,QAAS,CAAA,IAAA,CAAK,QAAQ,CAAA,CAAA;QAEjC,OAAA,KAAA,CAAA;IAAA,CACX;IAAA,qCAAA;IAAA;;;;;GAAA,GAUO,SAAA,CAAU,KAAgB,EAAA,KAAA,EAAqB,KACtD,EAAA;oLAEI,eAAA,2KAAY,SAAA,EAAQ,8FAA8F,CAAA,CAAA;QAGlH,MAAM,cAAoC,CAAA,CAAC,CAAA;QAG3C,KAAA,IAAA,CAAU,YAAY,KAAQ,GAAA,KAAA,CAAA,CAAA;QAC9B,KAAA,IAAA,CAAU,YAAY,KAAQ,GAAA,KAAA,CAAA,CAAA;QAC9B,KAAA,IAAA,CAAU,YAAY,KAAQ,GAAA,KAAA,CAAA,CAAA;QAE9B,IAAA,CAAK,OAAA,CAAQ,WAAc,GAAA,WAAA,CAAA;QAEpB,OAAA,IAAA,CAAA;IAAA,CACX;IAAA;;;;GAAA,GAOO,SAAA,CAAU,KAAA,EAAoB,KACrC,EAAA;qLAGI,cAAA,2KAAY,SAAA,EAAQ,qGAAqG,CAAA,CAAA;QAGzH,MAAM,YAAgC,CAAA,CAAC,CAAA;QAGvC,IAAI,KAAU,KAAA,KAAA,CAAA,EAAW,SAAA,CAAU,KAAQ,GAAA,KAAA,CAAA;QAC3C,IAAI,KAAU,KAAA,KAAA,CAAA,EAAW,SAAA,CAAU,KAAQ,GAAA,KAAA,CAAA;QAE3C,IAAA,CAAK,OAAA,CAAQ,SAAY,GAAA,SAAA,CAAA;QAElB,OAAA,IAAA,CAAA;IAAA,CACX;IAAA;;GAAA,GAKO,OACP,GAAA;qLAGI,cAAA,0KAAY,UAAA,EAAQ,mGAAmG,CAAA,CAAA;QAGvH,IAAA,CAAK,OAAA,CAAQ,IAAK,EAAA,CAAA;QACZ,MAAA,WAAA,GAAc,IAAA,CAAK,OAAQ,CAAA,WAAA,CAAA;QAEjC,IAAI,WAAY,CAAA,KAAA,KAAU,0MAAgB,CAAA,kBAAA,CAAmB,KAAA,IACtD,WAAY,CAAA,KAAA,6LAAU,kBAAgB,CAAA,kBAAA,CAAmB,KACzD,IAAA,WAAA,CAAY,KAAU,6LAAA,kBAAA,CAAgB,kBAAA,CAAmB,KAChE,EAAA;YACI,IAAA,CAAK,OAAA,CAAQ,MAAO,EAAA,CAAA;QAAA,CACxB;QAEO,OAAA,IAAA,CAAA;IAAA,CACX;IAAA;;;GAAA,GAMO,WAAA,GAAc,IACrB,EAAA;qLAEI,cAAA,2KAAY,SAAA,EAAQ,yDAAyD,CAAA,CAAA;QAGtE,OAAA,IAAA,CAAK,kBAAmB,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;IAAA,CACjD;IAAA;;;GAAA,GAMO,YAAA,GAAe,IACtB,EAAA;qLAEI,cAAA,2KAAY,SAAA,EAAQ,2DAA2D,CAAA,CAAA;QAGxE,OAAA,IAAA,CAAK,kBAAmB,CAAA,SAAA,EAAW,IAAI,CAAA,CAAA;IAAA,CAClD;IAAA;;;GAAA,GAMO,YAAA,GAAe,IACtB,EAAA;QAEI,2LAAA,2KAAY,SAAA,EAAQ,wDAAwD,CAAA,CAAA;QAGrE,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAAA;;;GAAA,GAMO,SAAA,GAAY,IACnB,EAAA;qLAEI,cAAA,2KAAY,SAAA,EAAQ,qDAAqD,CAAA,CAAA;QAGlE,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;IAAA;;;GAAA,GAMO,gBAAA,GAAmB,IAC1B,EAAA;SAEI,0LAAA,2KAAY,SAAA,EAAQ,iEAAiE,CAAA,CAAA;QAG9E,OAAA,IAAA,CAAK,kBAAmB,CAAA,WAAA,EAAa,IAAI,CAAA,CAAA;IAAA,CACpD;IAAA;;;GAAA,GAMO,SAAA,GAAY,IACnB,EAAA;qLAEI,cAAA,2KAAY,SAAA,EAAQ,qDAAqD,CAAA,CAAA;QAGlE,OAAA,IAAA,CAAK,kBAAmB,CAAA,MAAA,EAAQ,IAAI,CAAA,CAAA;IAAA,CAC/C;AACJ","ignoreList":[0]}},
    {"offset": {"line": 11149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11155, "column": 0}, "map": {"version":3,"file":"BitmapTextPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-bitmap/BitmapTextPipe.ts"],"sourcesContent":["import { Cache } from '../../assets/cache/Cache';\nimport { ExtensionType } from '../../extensions/Extensions';\nimport { BigPool } from '../../utils/pool/PoolGroup';\nimport { Graphics } from '../graphics/shared/Graphics';\nimport { SdfShader } from '../text/sdfShader/SdfShader';\nimport { BitmapFontManager } from './BitmapFontManager';\nimport { getBitmapTextLayout } from './utils/getBitmapTextLayout';\n\nimport type { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Renderable } from '../../rendering/renderers/shared/Renderable';\nimport type { Renderer } from '../../rendering/renderers/types';\nimport type { PoolItem } from '../../utils/pool/Pool';\nimport type { Container } from '../container/Container';\nimport type { BitmapText } from './BitmapText';\n\nexport class BitmapTextPipe implements RenderPipe<BitmapText>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'bitmapText',\n    } as const;\n\n    private _renderer: Renderer;\n    private _gpuBitmapText: Record<number, Graphics> = {};\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n        this._renderer.renderableGC.addManagedHash(this, '_gpuBitmapText');\n    }\n\n    public validateRenderable(bitmapText: BitmapText): boolean\n    {\n        const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n\n        if (bitmapText._didTextUpdate)\n        {\n            bitmapText._didTextUpdate = false;\n\n            this._updateContext(bitmapText, graphicsRenderable);\n        }\n\n        return this._renderer.renderPipes.graphics.validateRenderable(graphicsRenderable);\n\n        // TODO - need to shift all the verts in the graphicsData to the new anchor\n\n        // update the anchor...\n    }\n\n    public addRenderable(bitmapText: BitmapText, instructionSet: InstructionSet)\n    {\n        const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n\n        // sync..\n        syncWithProxy(bitmapText, graphicsRenderable);\n\n        if (bitmapText._didTextUpdate)\n        {\n            bitmapText._didTextUpdate = false;\n\n            this._updateContext(bitmapText, graphicsRenderable);\n        }\n\n        this._renderer.renderPipes.graphics.addRenderable(graphicsRenderable, instructionSet);\n\n        if (graphicsRenderable.context.customShader)\n        {\n            this._updateDistanceField(bitmapText);\n        }\n    }\n\n    public destroyRenderable(bitmapText: BitmapText)\n    {\n        bitmapText.off('destroyed', this._destroyRenderableBound);\n\n        this._destroyRenderableByUid(bitmapText.uid);\n    }\n\n    private _destroyRenderableByUid(renderableUid: number)\n    {\n        const context = this._gpuBitmapText[renderableUid].context;\n\n        if (context.customShader)\n        {\n            BigPool.return(context.customShader as PoolItem);\n\n            context.customShader = null;\n        }\n\n        BigPool.return(this._gpuBitmapText[renderableUid] as PoolItem);\n        this._gpuBitmapText[renderableUid] = null;\n    }\n\n    public updateRenderable(bitmapText: BitmapText)\n    {\n        const graphicsRenderable = this._getGpuBitmapText(bitmapText);\n\n        // sync..\n        syncWithProxy(bitmapText, graphicsRenderable);\n\n        this._renderer.renderPipes.graphics.updateRenderable(graphicsRenderable);\n\n        if (graphicsRenderable.context.customShader)\n        {\n            this._updateDistanceField(bitmapText);\n        }\n    }\n\n    private _updateContext(bitmapText: BitmapText, proxyGraphics: Graphics)\n    {\n        const { context } = proxyGraphics;\n\n        const bitmapFont = BitmapFontManager.getFont(bitmapText.text, bitmapText._style);\n\n        context.clear();\n\n        if (bitmapFont.distanceField.type !== 'none')\n        {\n            if (!context.customShader)\n            {\n                context.customShader = BigPool.get(SdfShader);\n            }\n        }\n\n        const chars = Array.from(bitmapText.text);\n        const style = bitmapText._style;\n\n        let currentY = bitmapFont.baseLineOffset;\n\n        // measure our text...\n        const bitmapTextLayout = getBitmapTextLayout(chars, style, bitmapFont, true);\n\n        let index = 0;\n\n        const padding = style.padding;\n        const scale = bitmapTextLayout.scale;\n\n        let tx = bitmapTextLayout.width;\n        let ty = bitmapTextLayout.height + bitmapTextLayout.offsetY;\n\n        if (style._stroke)\n        {\n            tx += style._stroke.width / scale;\n            ty += style._stroke.width / scale;\n        }\n\n        context\n            .translate((-bitmapText._anchor._x * tx) - padding, (-bitmapText._anchor._y * ty) - padding)\n            .scale(scale, scale);\n\n        const tint = bitmapFont.applyFillAsTint ? style._fill.color : 0xFFFFFF;\n\n        for (let i = 0; i < bitmapTextLayout.lines.length; i++)\n        {\n            const line = bitmapTextLayout.lines[i];\n\n            for (let j = 0; j < line.charPositions.length; j++)\n            {\n                const char = chars[index++];\n\n                const charData = bitmapFont.chars[char];\n\n                if (charData?.texture)\n                {\n                    context.texture(\n                        charData.texture,\n                        tint ? tint : 'black',\n                        Math.round(line.charPositions[j] + charData.xOffset),\n                        Math.round(currentY + charData.yOffset),\n                    );\n                }\n            }\n\n            currentY += bitmapFont.lineHeight;\n        }\n    }\n\n    private _getGpuBitmapText(bitmapText: BitmapText)\n    {\n        return this._gpuBitmapText[bitmapText.uid] || this.initGpuText(bitmapText);\n    }\n\n    public initGpuText(bitmapText: BitmapText)\n    {\n        // TODO we could keep a bunch of contexts around and reuse one that has the same style!\n        const proxyRenderable = BigPool.get(Graphics);\n\n        this._gpuBitmapText[bitmapText.uid] = proxyRenderable;\n\n        this._updateContext(bitmapText, proxyRenderable);\n\n        bitmapText.on('destroyed', this._destroyRenderableBound);\n\n        return this._gpuBitmapText[bitmapText.uid];\n    }\n\n    private _updateDistanceField(bitmapText: BitmapText)\n    {\n        const context = this._getGpuBitmapText(bitmapText).context;\n\n        const fontFamily = bitmapText._style.fontFamily as string;\n        const dynamicFont = Cache.get(`${fontFamily as string}-bitmap`);\n\n        // Inject the shader code with the correct value\n        const { a, b, c, d } = bitmapText.groupTransform;\n\n        const dx = Math.sqrt((a * a) + (b * b));\n        const dy = Math.sqrt((c * c) + (d * d));\n        const worldScale = (Math.abs(dx) + Math.abs(dy)) / 2;\n\n        const fontScale = dynamicFont.baseRenderedFontSize / bitmapText._style.fontSize;\n\n        const distance = worldScale * dynamicFont.distanceField.range * (1 / fontScale);\n\n        context.customShader.resources.localUniforms.uniforms.uDistance = distance;\n    }\n\n    public destroy()\n    {\n        for (const uid in this._gpuBitmapText)\n        {\n            this._destroyRenderableByUid(uid as unknown as number);\n        }\n\n        this._gpuBitmapText = null;\n\n        this._renderer = null;\n    }\n}\n\nfunction syncWithProxy(container: Renderable, proxy: Renderable)\n{\n    proxy.groupTransform = container.groupTransform;\n    proxy.groupColorAlpha = container.groupColorAlpha;\n    proxy.groupColor = container.groupColor;\n    proxy.groupBlendMode = container.groupBlendMode;\n    proxy.globalDisplayStatus = container.globalDisplayStatus;\n    proxy.groupTransform = container.groupTransform;\n    proxy.localDisplayStatus = container.localDisplayStatus;\n    proxy.groupAlpha = container.groupAlpha;\n    proxy._roundPixels = container._roundPixels;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11314, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-bitmap/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { BitmapTextPipe } from './BitmapTextPipe';\n\nextensions.add(BitmapTextPipe);\n"],"names":[],"mappings":";;;;;;kKAGA,aAAA,CAAW,GAAA,oLAAI,iBAAc,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11327, "column": 0}, "map": {"version":3,"file":"HTMLTextRenderData.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/HTMLTextRenderData.ts"],"sourcesContent":["import type { CanvasAndContext } from '../../rendering/renderers/shared/texture/CanvasPool';\n\nexport const nssvg = 'http://www.w3.org/2000/svg';\nexport const nsxhtml = 'http://www.w3.org/1999/xhtml';\n\nexport class HTMLTextRenderData\n{\n    public svgRoot = document.createElementNS(nssvg, 'svg');\n    public foreignObject = document.createElementNS(nssvg, 'foreignObject');\n    public domElement = document.createElementNS(nsxhtml, 'div');\n    public styleElement = document.createElementNS(nsxhtml, 'style');\n    public image = new Image();\n    public canvasAndContext?: CanvasAndContext;\n\n    constructor()\n    {\n        const { foreignObject, svgRoot, styleElement, domElement } = this;\n        // Arbitrary max size\n\n        foreignObject.setAttribute('width', '10000');\n        foreignObject.setAttribute('height', '10000');\n        foreignObject.style.overflow = 'hidden';\n\n        svgRoot.appendChild(foreignObject);\n\n        foreignObject.appendChild(styleElement);\n        foreignObject.appendChild(domElement);\n    }\n}\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,KAAQ,GAAA,6BAAA;AACd,MAAM,OAAU,GAAA,+BAAA;AAEhB,MAAM,kBACb,CAAA;IAQI,WACA,EAAA;QARA,IAAA,CAAO,OAAU,GAAA,QAAA,CAAS,eAAgB,CAAA,KAAA,EAAO,KAAK,CAAA,CAAA;QACtD,IAAA,CAAO,aAAgB,GAAA,QAAA,CAAS,eAAgB,CAAA,KAAA,EAAO,eAAe,CAAA,CAAA;QACtE,IAAA,CAAO,UAAa,GAAA,QAAA,CAAS,eAAgB,CAAA,OAAA,EAAS,KAAK,CAAA,CAAA;QAC3D,IAAA,CAAO,YAAe,GAAA,QAAA,CAAS,eAAgB,CAAA,OAAA,EAAS,OAAO,CAAA,CAAA;QACxD,IAAA,CAAA,KAAA,GAAQ,IAAI,KAAM,EAAA,CAAA;QAKrB,MAAM,EAAE,aAAA,EAAe,OAAS,EAAA,YAAA,EAAc,UAAA,EAAe,GAAA,IAAA,CAAA;QAG/C,aAAA,CAAA,YAAA,CAAa,SAAS,OAAO,CAAA,CAAA;QAC7B,aAAA,CAAA,YAAA,CAAa,UAAU,OAAO,CAAA,CAAA;QAC5C,aAAA,CAAc,KAAA,CAAM,QAAW,GAAA,QAAA,CAAA;QAE/B,OAAA,CAAQ,WAAA,CAAY,aAAa,CAAA,CAAA;QAEjC,aAAA,CAAc,WAAA,CAAY,YAAY,CAAA,CAAA;QACtC,aAAA,CAAc,WAAA,CAAY,UAAU,CAAA,CAAA;IAAA,CACxC;AACJ","ignoreList":[0]}},
    {"offset": {"line": 11353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11359, "column": 0}, "map": {"version":3,"file":"extractFontFamilies.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/extractFontFamilies.ts"],"sourcesContent":["import type { HTMLTextStyle } from '../HTMLTextStyle';\n\n/**\n * Extracts font families from text. It will extract font families from the style, tagStyles and any font families\n * embedded in the text. It should also strip out duplicates as it goes.\n * @param  text - The text to extract font families from\n * @param style - The style to extract font families from\n * @returns {string[]} - The font families as an array of strings\n */\nexport function extractFontFamilies(text: string, style: HTMLTextStyle): string[]\n{\n    const fontFamily = style.fontFamily;\n    const fontFamilies: string[] = [];\n    const dedupe: Record<string, boolean> = {};\n\n    // first ensure fonts are loaded inline..\n    // find any font..\n    const regex = /font-family:([^;\"\\s]+)/g;\n\n    const matches = text.match(regex);\n\n    function addFontFamily(fontFamily: string)\n    {\n        if (!dedupe[fontFamily])\n        {\n            fontFamilies.push(fontFamily);\n\n            dedupe[fontFamily] = true;\n        }\n    }\n\n    if (Array.isArray(fontFamily))\n    {\n        for (let i = 0; i < fontFamily.length; i++)\n        {\n            addFontFamily(fontFamily[i]);\n        }\n    }\n    else\n    {\n        addFontFamily(fontFamily);\n    }\n\n    if (matches)\n    {\n        matches.forEach((match) =>\n        {\n            const fontFamily = match.split(':')[1].trim();\n\n            addFontFamily(fontFamily);\n        });\n    }\n\n    for (const i in style.tagStyles)\n    {\n        const fontFamily = style.tagStyles[i].fontFamily;\n\n        addFontFamily(fontFamily as string);\n    }\n\n    return fontFamilies;\n}\n"],"names":["fontFamily"],"mappings":";;;;AASgB,SAAA,mBAAA,CAAoB,IAAA,EAAc,KAClD,EAAA;IACI,MAAM,aAAa,KAAM,CAAA,UAAA,CAAA;IACzB,MAAM,eAAyB,EAAC,CAAA;IAChC,MAAM,SAAkC,CAAA,CAAC,CAAA;IAIzC,MAAM,KAAQ,GAAA,yBAAA,CAAA;IAER,MAAA,OAAA,GAAU,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;IAEhC,SAAS,cAAcA,WACvB,EAAA;QACQ,IAAA,CAAC,MAAOA,CAAAA,WAAU,CACtB,EAAA;YACI,YAAA,CAAa,IAAA,CAAKA,WAAU,CAAA,CAAA;YAE5B,MAAA,CAAOA,WAAU,CAAI,GAAA,IAAA,CAAA;QAAA,CACzB;IAAA,CACJ;IAEI,IAAA,KAAA,CAAM,OAAQ,CAAA,UAAU,CAC5B,EAAA;QACI,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,UAAA,CAAW,MAAA,EAAQ,CACvC,EAAA,CAAA;YACkB,aAAA,CAAA,UAAA,CAAW,CAAC,CAAC,CAAA,CAAA;QAAA,CAC/B;IAAA,CAGJ,MAAA;QACI,aAAA,CAAc,UAAU,CAAA,CAAA;IAAA,CAC5B;IAEA,IAAI,OACJ,EAAA;QACY,OAAA,CAAA,OAAA,CAAQ,CAAC,KACjB,KAAA;YACI,MAAMA,cAAa,KAAM,CAAA,KAAA,CAAM,GAAG,CAAE,CAAA,CAAC,CAAA,CAAE,IAAK,EAAA,CAAA;YAE5C,aAAA,CAAcA,WAAU,CAAA,CAAA;QAAA,CAC3B,CAAA,CAAA;IAAA,CACL;IAEW,IAAA,MAAA,CAAA,IAAK,MAAM,SACtB,CAAA;QACI,MAAMA,WAAa,GAAA,KAAA,CAAM,SAAU,CAAA,CAAC,CAAE,CAAA,UAAA,CAAA;QAEtC,aAAA,CAAcA,WAAoB,CAAA,CAAA;IAAA,CACtC;IAEO,OAAA,YAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 11396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11402, "column": 0}, "map": {"version":3,"file":"loadFontAsBase64.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/loadFontAsBase64.ts"],"sourcesContent":["import { DOMAdapter } from '../../../environment/adapter';\n\n/**\n * Resolves a font url to a base64 string\n * @param url - The url to load the font from\n * @returns - The font as a base64 string\n */\nexport async function loadFontAsBase64(url: string): Promise<string>\n{\n    const response = await DOMAdapter.get().fetch(url);\n\n    const blob = await response.blob();\n\n    const reader = new FileReader();\n\n    const dataSrc: string = await new Promise((resolve, reject) =>\n    {\n        reader.onloadend = () => resolve(reader.result as string);\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n\n    return dataSrc;\n}\n"],"names":[],"mappings":";;;;;;AAOA,eAAsB,iBAAiB,GACvC,EAAA;IACI,MAAM,WAAW,sKAAM,aAAA,CAAW,GAAI,EAAA,CAAE,KAAA,CAAM,GAAG,CAAA,CAAA;IAE3C,MAAA,IAAA,GAAO,MAAM,QAAA,CAAS,IAAK,EAAA,CAAA;IAE3B,MAAA,MAAA,GAAS,IAAI,UAAW,EAAA,CAAA;IAE9B,MAAM,UAAkB,MAAM,IAAI,OAAQ,CAAA,CAAC,SAAS,MACpD,KAAA;QACI,MAAA,CAAO,SAAY,GAAA,IAAM,OAAQ,CAAA,MAAA,CAAO,MAAgB,CAAA,CAAA;QACxD,MAAA,CAAO,OAAU,GAAA,MAAA,CAAA;QACjB,MAAA,CAAO,aAAA,CAAc,IAAI,CAAA,CAAA;IAAA,CAC5B,CAAA,CAAA;IAEM,OAAA,OAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 11421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11427, "column": 0}, "map": {"version":3,"file":"loadFontCSS.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/loadFontCSS.ts"],"sourcesContent":["import { loadFontAsBase64 } from './loadFontAsBase64';\n\nexport interface FontCSSStyleOptions\n{\n    fontFamily: string | string[]\n    fontWeight: string\n    fontStyle: string\n}\n\n/**\n * This will take a font url and a style and return a css string that can be injected into a style tag\n * This will contain inlined base64 font and the font family information\n * @param style - the style to generate the css for\n * @param url - The url to load the font from\n * @returns - The css string\n */\nexport async function loadFontCSS(style: FontCSSStyleOptions, url: string): Promise<string>\n{\n    const dataSrc = await loadFontAsBase64(url);\n\n    return `@font-face {\n        font-family: \"${style.fontFamily}\";\n        src: url('${dataSrc}');\n        font-weight: ${style.fontWeight};\n        font-style: ${style.fontStyle};\n    }`;\n}\n"],"names":[],"mappings":";;;;;;AAgBsB,eAAA,WAAA,CAAY,KAAA,EAA4B,GAC9D,EAAA;IACU,MAAA,OAAA,GAAU,sMAAM,mBAAA,EAAiB,GAAG,CAAA,CAAA;IAEnC,OAAA,CAAA;sBAAA,EACa,MAAM,UAAU,CAAA;kBAAA,EACpB,OAAO,CAAA;qBAAA,EACJ,MAAM,UAAU,CAAA;oBAAA,EACjB,MAAM,SAAS,CAAA;KAAA,CAAA,CAAA;AAErC","ignoreList":[0]}},
    {"offset": {"line": 11444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11450, "column": 0}, "map": {"version":3,"file":"getFontCss.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/getFontCss.ts"],"sourcesContent":["import { Cache } from '../../../assets/cache/Cache';\nimport { loadFontCSS } from './loadFontCSS';\n\nimport type { FontCSSStyleOptions } from './loadFontCSS';\n\nexport const FontStylePromiseCache = new Map<string, Promise<string>>();\n\n/**\n * takes the font families and returns a css string that can be injected into a style tag\n * It will contain the font families and the font urls encoded as base64\n * @param fontFamilies - The font families to load\n * @param style - The FontCSSStyleOptions to load the font with (used for the first font family)\n * @param defaultOptions - The default options to load the font with (used for the rest of the font families)\n * @param defaultOptions.fontWeight - The default font weight\n * @param defaultOptions.fontStyle - The default font style\n * @returns - The css string\n */\nexport async function getFontCss(\n    fontFamilies: string[],\n    style: FontCSSStyleOptions,\n    defaultOptions: {fontWeight: string, fontStyle: string}\n)\n{\n    const fontPromises = fontFamilies\n        .filter((fontFamily) => Cache.has(`${fontFamily}-and-url`))\n        .map((fontFamily, i) =>\n        {\n            if (!FontStylePromiseCache.has(fontFamily))\n            {\n                const { url } = Cache.get(`${fontFamily}-and-url`);\n\n                if (i === 0)\n                {\n                    FontStylePromiseCache.set(fontFamily, loadFontCSS({\n                        fontWeight: style.fontWeight,\n                        fontStyle: style.fontStyle,\n                        fontFamily,\n                    }, url));\n                }\n\n                else\n                {\n                    FontStylePromiseCache.set(fontFamily, loadFontCSS({\n                        fontWeight: defaultOptions.fontWeight,\n                        fontStyle: defaultOptions.fontStyle,\n                        fontFamily,\n                    }, url));\n                }\n            }\n\n            return FontStylePromiseCache.get(fontFamily);\n        });\n\n    return (await Promise.all(fontPromises)).join('\\n');\n}\n"],"names":[],"mappings":";;;;;;;;;AAKa,MAAA,qBAAA,GAAA,aAAA,GAAA,IAA4B,GAA6B,GAAA;AAYhD,eAAA,UAAA,CAClB,YACA,EAAA,KAAA,EACA,cAEJ,EAAA;IACI,MAAM,YAAe,GAAA,YAAA,CAChB,MAAO,CAAA,CAAC,aAAe,0KAAM,CAAA,GAAA,CAAI,CAAG,EAAA,UAAU,CAAA,QAAA,CAAU,CAAC,CAAA,CACzD,GAAI,CAAA,CAAC,YAAY,CAClB,KAAA;QACI,IAAI,CAAC,qBAAA,CAAsB,GAAI,CAAA,UAAU,CACzC,EAAA;YACI,MAAM,EAAE,GAAI,EAAA,qKAAI,QAAA,CAAM,GAAI,CAAA,CAAA,EAAG,UAAU,CAAU,QAAA,CAAA,CAAA,CAAA;YAEjD,IAAI,MAAM,CACV,EAAA;gBAC0B,qBAAA,CAAA,GAAA,CAAI,uMAAY,cAAA,AAAY,EAAA;oBAC9C,YAAY,KAAM,CAAA,UAAA;oBAClB,WAAW,KAAM,CAAA,SAAA;oBACjB,UAAA;gBAAA,CACJ,EAAG,GAAG,CAAC,CAAA,CAAA;YAAA,CAIX,MAAA;gBAC0B,qBAAA,CAAA,GAAA,CAAI,uMAAY,cAAA,AAAY,EAAA;oBAC9C,YAAY,cAAe,CAAA,UAAA;oBAC3B,WAAW,cAAe,CAAA,SAAA;oBAC1B,UAAA;gBAAA,CACJ,EAAG,GAAG,CAAC,CAAA,CAAA;YAAA,CACX;QAAA,CACJ;QAEO,OAAA,qBAAA,CAAsB,GAAA,CAAI,UAAU,CAAA,CAAA;IAAA,CAC9C,CAAA,CAAA;IAEL,OAAA,CAAQ,MAAM,OAAQ,CAAA,GAAA,CAAI,YAAY,CAAA,EAAG,IAAA,CAAK,IAAI,CAAA,CAAA;AACtD","ignoreList":[0]}},
    {"offset": {"line": 11484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11490, "column": 0}, "map": {"version":3,"file":"textStyleToCSS.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/textStyleToCSS.ts"],"sourcesContent":["import { Color } from '../../../color/Color';\n\nimport type { ConvertedStrokeStyle } from '../../graphics/shared/FillTypes';\nimport type { TextStyle } from '../../text/TextStyle';\nimport type { HTMLTextStyle, HTMLTextStyleOptions } from '../HTMLTextStyle';\n\n/**\n * Internally converts all of the style properties into CSS equivalents.\n * @param style\n * @returns The CSS style string, for setting `style` property of root HTMLElement.\n */\nexport function textStyleToCSS(style: HTMLTextStyle): string\n{\n    const stroke = style._stroke;\n    const fill = style._fill;\n\n    const cssStyleString = [\n        `color: ${Color.shared.setValue(fill.color).toHex()}`,\n        `font-size: ${(style.fontSize as number)}px`,\n        `font-family: ${style.fontFamily}`,\n        `font-weight: ${style.fontWeight}`,\n        `font-style: ${style.fontStyle}`,\n        `font-variant: ${style.fontVariant}`,\n        `letter-spacing: ${style.letterSpacing}px`,\n        `text-align: ${style.align}`,\n        `padding: ${style.padding}px`,\n        `white-space: ${(style.whiteSpace === 'pre' && style.wordWrap) ? 'pre-wrap' : style.whiteSpace}`,\n        ...style.lineHeight ? [`line-height: ${style.lineHeight}px`] : [],\n        ...style.wordWrap ? [\n            `word-wrap: ${style.breakWords ? 'break-all' : 'break-word'}`,\n            `max-width: ${style.wordWrapWidth}px`\n        ] : [],\n        ...stroke ? [strokeToCSS(stroke)] : [],\n        ...style.dropShadow ? [dropShadowToCSS(style.dropShadow)] : [],\n        ...style.cssOverrides,\n    ].join(';');\n\n    const cssStyles = [`div { ${cssStyleString} }`];\n\n    tagStyleToCSS(style.tagStyles, cssStyles);\n\n    return cssStyles.join(' ');\n}\n\nfunction dropShadowToCSS(dropShadowStyle: TextStyle['dropShadow']): string\n{\n    const color = Color.shared.setValue(dropShadowStyle.color).setAlpha(dropShadowStyle.alpha).toHexa();\n    const x = Math.round(Math.cos(dropShadowStyle.angle) * dropShadowStyle.distance);\n    const y = Math.round(Math.sin(dropShadowStyle.angle) * dropShadowStyle.distance);\n\n    const position = `${x}px ${y}px`;\n\n    if (dropShadowStyle.blur > 0)\n    {\n        return `text-shadow: ${position} ${dropShadowStyle.blur}px ${color}`;\n    }\n\n    return `text-shadow: ${position} ${color}`;\n}\n\nfunction strokeToCSS(stroke: ConvertedStrokeStyle): string\n{\n    return [\n        `-webkit-text-stroke-width: ${stroke.width}px`,\n        `-webkit-text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n        `text-stroke-width: ${stroke.width}px`,\n        `text-stroke-color: ${Color.shared.setValue(stroke.color).toHex()}`,\n        'paint-order: stroke',\n    ].join(';');\n}\n\n/** Converts the tag styles into CSS. */\nconst templates = {\n    fontSize: `font-size: {{VALUE}}px`,\n    fontFamily: `font-family: {{VALUE}}`,\n    fontWeight: `font-weight: {{VALUE}}`,\n    fontStyle: `font-style: {{VALUE}}`,\n    fontVariant: `font-variant: {{VALUE}}`,\n    letterSpacing: `letter-spacing: {{VALUE}}px`,\n    align: `text-align: {{VALUE}}`,\n    padding: `padding: {{VALUE}}px`,\n    whiteSpace: `white-space: {{VALUE}}`,\n    lineHeight: `line-height: {{VALUE}}px`,\n    wordWrapWidth: `max-width: {{VALUE}}px`,\n};\n\n/** Converts the tag styles into CSS if modifications are required */\nconst transform = {\n    fill: (value: string) => `color: ${Color.shared.setValue(value).toHex()}`,\n    breakWords: (value: string) => `word-wrap: ${value ? 'break-all' : 'break-word'}`,\n    stroke: strokeToCSS,\n    dropShadow: dropShadowToCSS\n};\n\nfunction tagStyleToCSS(tagStyles: Record<string, HTMLTextStyleOptions>, out: string[])\n{\n    for (const i in tagStyles)\n    {\n        const tagStyle = tagStyles[i];\n        const cssTagStyle = [];\n\n        for (const j in tagStyle)\n        {\n            if (transform[j as keyof typeof transform])\n            {\n                cssTagStyle.push(transform[j as keyof typeof transform](tagStyle[j as keyof HTMLTextStyleOptions] as any));\n            }\n            else if (templates[j as keyof typeof templates])\n            {\n                // eslint-disable-next-line max-len\n                cssTagStyle.push(templates[j as keyof typeof templates].replace('{{VALUE}}', tagStyle[j as keyof HTMLTextStyleOptions] as any));\n            }\n        }\n\n        out.push(`${i} { ${cssTagStyle.join(';')} }`);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11591, "column": 0}, "map": {"version":3,"file":"HTMLTextStyle.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/HTMLTextStyle.ts"],"sourcesContent":["/* eslint-disable accessor-pairs */\nimport { warn } from '../../utils/logging/warn';\nimport { TextStyle } from '../text/TextStyle';\nimport { generateTextStyleKey } from '../text/utils/generateTextStyleKey';\nimport { textStyleToCSS } from './utils/textStyleToCSS';\n\nimport type { FillInput, StrokeInput } from '../graphics/shared/FillTypes';\nimport type { TextStyleOptions } from '../text/TextStyle';\n\n/**\n * Options for HTML text style, extends {@link TextStyle}.\n * @memberof text\n * @extends text.TextStyleOptions\n * @property {string[]} [cssOverrides] - CSS style(s) to add.\n * @property {Record<string, text.HTMLTextStyleOptions>} [tagStyles] - Tag styles.\n */\nexport interface HTMLTextStyleOptions extends Omit<TextStyleOptions, 'leading' | 'textBaseline' | 'trim' >\n{\n    cssOverrides?: string[];\n    tagStyles?: Record<string, HTMLTextStyleOptions>;\n}\n\n/**\n * A TextStyle object rendered by the HTMLTextSystem.\n * @memberof text\n */\nexport class HTMLTextStyle extends TextStyle\n{\n    private _cssOverrides: string[] = [];\n    private _cssStyle: string;\n    /**\n     * List of styles per tag.\n     * @example\n     * new HTMLText({\n     *   text:'<red>Red</red>,<blue>Blue</blue>,<green>Green</green>',\n     *   style:{\n     *       fontFamily: 'DM Sans',\n     *       fill: 'white',\n     *       fontSize:100,\n     *       tagStyles:{\n     *           red:{\n     *               fill:'red',\n     *           },\n     *           blue:{\n     *               fill:'blue',\n     *           },\n     *           green:{\n     *               fill:'green',\n     *           }\n     *       }\n     *   }\n     * );\n     */\n    public tagStyles: Record<string, HTMLTextStyleOptions>;\n\n    constructor(options: HTMLTextStyleOptions = {})\n    {\n        super(options);\n\n        this.cssOverrides ??= options.cssOverrides;\n        this.tagStyles = options.tagStyles ?? {};\n    }\n\n    /** List of style overrides that will be applied to the HTML text. */\n    set cssOverrides(value: string | string[])\n    {\n        this._cssOverrides = value instanceof Array ? value : [value];\n        this.update();\n    }\n\n    get cssOverrides(): string[]\n    {\n        return this._cssOverrides;\n    }\n\n    protected override _generateKey(): string\n    {\n        this._styleKey = generateTextStyleKey(this) + this._cssOverrides.join('-');\n\n        return this._styleKey;\n    }\n\n    public update()\n    {\n        this._cssStyle = null;\n        super.update();\n    }\n\n    /**\n     * Creates a new HTMLTextStyle object with the same values as this one.\n     * @returns New cloned HTMLTextStyle object\n     */\n    public clone(): HTMLTextStyle\n    {\n        return new HTMLTextStyle({\n            align: this.align,\n            breakWords: this.breakWords,\n            dropShadow: this.dropShadow ? { ...this.dropShadow } : null,\n            fill: this._fill,\n            fontFamily: this.fontFamily,\n            fontSize: this.fontSize,\n            fontStyle: this.fontStyle,\n            fontVariant: this.fontVariant,\n            fontWeight: this.fontWeight,\n            letterSpacing: this.letterSpacing,\n            lineHeight: this.lineHeight,\n            padding: this.padding,\n            stroke: this._stroke,\n            whiteSpace: this.whiteSpace,\n            wordWrap: this.wordWrap,\n            wordWrapWidth: this.wordWrapWidth,\n            cssOverrides: this.cssOverrides,\n        });\n    }\n\n    get cssStyle(): string\n    {\n        if (!this._cssStyle)\n        {\n            this._cssStyle = textStyleToCSS(this);\n        }\n\n        return this._cssStyle;\n    }\n\n    /**\n     * Add a style override, this can be any CSS property\n     * it will override any built-in style. This is the\n     * property and the value as a string (e.g., `color: red`).\n     * This will override any other internal style.\n     * @param {string} value - CSS style(s) to add.\n     * @example\n     * style.addOverride('background-color: red');\n     */\n    public addOverride(...value: string[]): void\n    {\n        const toAdd = value.filter((v) => !this.cssOverrides.includes(v));\n\n        if (toAdd.length > 0)\n        {\n            this.cssOverrides.push(...toAdd);\n            this.update();\n        }\n    }\n\n    /**\n     * Remove any overrides that match the value.\n     * @param {string} value - CSS style to remove.\n     * @example\n     * style.removeOverride('background-color: red');\n     */\n    public removeOverride(...value: string[]): void\n    {\n        const toRemove = value.filter((v) => this.cssOverrides.includes(v));\n\n        if (toRemove.length > 0)\n        {\n            this.cssOverrides = this.cssOverrides.filter((v) => !toRemove.includes(v));\n            this.update();\n        }\n    }\n\n    override set fill(value: FillInput)\n    {\n        // if its not a string or a number, then its a texture!\n        if (typeof value !== 'string' && typeof value !== 'number')\n        {\n            // #if _DEBUG\n            warn('[HTMLTextStyle] only color fill is not supported by HTMLText');\n            // #endif\n        }\n\n        super.fill = value;\n    }\n\n    override set stroke(value: StrokeInput)\n    {\n        // if its not a string or a number, then its a texture!\n        if (value && typeof value !== 'string' && typeof value !== 'number')\n        {\n            // #if _DEBUG\n            warn('[HTMLTextStyle] only color stroke is not supported by HTMLText');\n            // #endif\n        }\n\n        super.stroke = value;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11701, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11707, "column": 0}, "map": {"version":3,"file":"measureHtmlText.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/measureHtmlText.ts"],"sourcesContent":["import { HTMLTextRenderData } from '../HTMLTextRenderData';\n\nimport type { Size } from '../../../maths/misc/Size';\nimport type { HTMLTextStyle } from '../HTMLTextStyle';\n\nlet tempHTMLTextRenderData: HTMLTextRenderData;\n\n/**\n * Measures the HTML text without actually generating an image.\n * This is used to calculate the size of the text.\n * @param text - The text to measure\n * @param style - The style to use\n * @param fontStyleCSS - The font css to use\n * @param htmlTextRenderData - The HTMLTextRenderData to write the SVG to\n * @returns - The size of the text\n */\nexport function measureHtmlText(\n    text: string,\n    style: HTMLTextStyle,\n    fontStyleCSS?: string,\n    htmlTextRenderData?: HTMLTextRenderData\n): Size\n{\n    htmlTextRenderData ||= tempHTMLTextRenderData || (tempHTMLTextRenderData = new HTMLTextRenderData());\n\n    const { domElement, styleElement, svgRoot } = htmlTextRenderData;\n\n    domElement.innerHTML = `<style>${style.cssStyle};</style><div style='padding:0'>${text}</div>`;\n\n    domElement.setAttribute('style', 'transform-origin: top left; display: inline-block');\n\n    if (fontStyleCSS)\n    {\n        styleElement.textContent = fontStyleCSS;\n    }\n\n    // Measure the contents using the shadow DOM\n    document.body.appendChild(svgRoot);\n\n    const contentBounds = domElement.getBoundingClientRect();\n\n    svgRoot.remove();\n\n    // padding is included in the CSS calculation, so we need to remove it here\n    const doublePadding = style.padding * 2;\n\n    return {\n        width: contentBounds.width - doublePadding,\n        height: contentBounds.height - doublePadding,\n    };\n}\n"],"names":[],"mappings":";;;;;;AAKA,IAAI,sBAAA,CAAA;AAWG,SAAS,eACZ,CAAA,IAAA,EACA,KACA,EAAA,YAAA,EACA,kBAEJ,EAAA;IAC2B,kBAAA,IAAA,CAAA,kBAAA,GAAA,sBAAA,IAAA,CAA2B,sBAAyB,GAAA,yLAAI,qBAAmB,EAAA,CAAA,CAAA,CAAA;IAElG,MAAM,EAAE,UAAA,EAAY,YAAc,EAAA,OAAA,EAAY,GAAA,kBAAA,CAAA;IAE9C,UAAA,CAAW,SAAY,GAAA,CAAA,OAAA,EAAU,KAAM,CAAA,QAAQ,CAAA,gCAAA,EAAmC,IAAI,CAAA,MAAA,CAAA,CAAA;IAE3E,UAAA,CAAA,YAAA,CAAa,SAAS,mDAAmD,CAAA,CAAA;IAEpF,IAAI,YACJ,EAAA;QACI,YAAA,CAAa,WAAc,GAAA,YAAA,CAAA;IAAA,CAC/B;IAGS,QAAA,CAAA,IAAA,CAAK,WAAA,CAAY,OAAO,CAAA,CAAA;IAE3B,MAAA,aAAA,GAAgB,WAAW,qBAAsB,EAAA,CAAA;IAEvD,OAAA,CAAQ,MAAO,EAAA,CAAA;IAGT,MAAA,aAAA,GAAgB,MAAM,OAAU,GAAA,CAAA,CAAA;IAE/B,OAAA;QACH,KAAA,EAAO,cAAc,KAAQ,GAAA,aAAA;QAC7B,MAAA,EAAQ,cAAc,MAAS,GAAA,aAAA;IAAA,CACnC,CAAA;AACJ","ignoreList":[0]}},
    {"offset": {"line": 11733, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11739, "column": 0}, "map": {"version":3,"file":"getSVGUrl.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/getSVGUrl.ts"],"sourcesContent":["import type { HTMLTextRenderData } from '../HTMLTextRenderData';\nimport type { HTMLTextStyle } from '../HTMLTextStyle';\n\n/**\n * takes all the data and returns a svg url string can be loaded by an image element\n * @param text - The text to measure\n * @param style - The style to use\n * @param resolution - The resolution to use\n * @param fontCSS - The font css to use\n * @param htmlTextData - The HTMLTextRenderData to write the SVG to\n * @returns - The SVG as a url string\n */\nexport function getSVGUrl(\n    text: string,\n    style: HTMLTextStyle,\n    resolution: number,\n    fontCSS: string,\n    htmlTextData: HTMLTextRenderData\n)\n{\n    const { domElement, styleElement, svgRoot } = htmlTextData;\n\n    domElement.innerHTML = `<style>${style.cssStyle}</style><div style='padding:0;'>${text}</div>`;\n    domElement.setAttribute('style', `transform: scale(${resolution});transform-origin: top left; display: inline-block`);\n    styleElement.textContent = fontCSS;\n\n    const { width, height } = htmlTextData.image;\n\n    svgRoot.setAttribute('width', width.toString());\n    svgRoot.setAttribute('height', height.toString());\n\n    return new XMLSerializer().serializeToString(svgRoot);\n}\n"],"names":[],"mappings":";;;;AAYO,SAAS,SACZ,CAAA,IAAA,EACA,KACA,EAAA,UAAA,EACA,OAAA,EACA,YAEJ,EAAA;IACI,MAAM,EAAE,UAAA,EAAY,YAAc,EAAA,OAAA,EAAY,GAAA,YAAA,CAAA;IAE9C,UAAA,CAAW,SAAY,GAAA,CAAA,OAAA,EAAU,KAAM,CAAA,QAAQ,CAAA,gCAAA,EAAmC,IAAI,CAAA,MAAA,CAAA,CAAA;IACtF,UAAA,CAAW,YAAa,CAAA,OAAA,EAAS,CAAoB,iBAAA,EAAA,UAAU,CAAqD,mDAAA,CAAA,CAAA,CAAA;IACpH,YAAA,CAAa,WAAc,GAAA,OAAA,CAAA;IAE3B,MAAM,EAAE,KAAA,EAAO,MAAO,EAAA,GAAI,YAAa,CAAA,KAAA,CAAA;IAEvC,OAAA,CAAQ,YAAa,CAAA,OAAA,EAAS,KAAM,CAAA,QAAA,EAAU,CAAA,CAAA;IAC9C,OAAA,CAAQ,YAAa,CAAA,QAAA,EAAU,MAAO,CAAA,QAAA,EAAU,CAAA,CAAA;IAEhD,OAAO,IAAI,aAAA,EAAgB,CAAA,iBAAA,CAAkB,OAAO,CAAA,CAAA;AACxD","ignoreList":[0]}},
    {"offset": {"line": 11755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11761, "column": 0}, "map": {"version":3,"file":"loadSVGImage.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/loadSVGImage.ts"],"sourcesContent":["/**\n * This function loads an SVG image into an HTMLImageElement.\n * The image can then be uploaded as texture to the GPU.\n * iOS has a bug where embedded fonts are not available immediately after the image loads,\n * so we wait an arbitrary amount of time before resolving the promise.\n * @param image - The image to load the SVG into\n * @param url - The url to load the SVG from\n * @param delay - Whether to delay the load\n * @returns - A promise that resolves when the image has loaded\n */\nexport function loadSVGImage(image: HTMLImageElement, url: string, delay: boolean)\n{\n    return new Promise<void>(async (resolve) =>\n    {\n        // Safari has a known bug where embedded fonts are not available\n        // immediately after the image loads, to compensate we wait an\n        // arbitrary amount of time\n        // @see https://bugs.webkit.org/show_bug.cgi?id=219770\n        if (delay)\n        {\n            await new Promise<void>((resolve) => setTimeout(resolve, 100));\n        }\n\n        image.onload = () =>\n        {\n            resolve();\n        };\n\n        image.src = `data:image/svg+xml;charset=utf8,${encodeURIComponent(url)}`;\n        image.crossOrigin = 'anonymous';\n    });\n}\n"],"names":["resolve"],"mappings":";;;;AAUgB,SAAA,YAAA,CAAa,KAAyB,EAAA,GAAA,EAAa,KACnE,EAAA;IACW,OAAA,IAAI,OAAc,CAAA,OAAO,OAChC,KAAA;QAKI,IAAI,KACJ,EAAA;YACI,MAAM,IAAI,OAAc,CAAA,CAACA,WAAY,UAAWA,CAAAA,QAAAA,EAAS,GAAG,CAAC,CAAA,CAAA;QAAA,CACjE;QAEA,KAAA,CAAM,MAAA,GAAS,MACf;YACY,OAAA,EAAA,CAAA;QAAA,CACZ,CAAA;QAEA,KAAA,CAAM,GAAM,GAAA,CAAA,gCAAA,EAAmC,kBAAmB,CAAA,GAAG,CAAC,CAAA,CAAA,CAAA;QACtE,KAAA,CAAM,WAAc,GAAA,WAAA,CAAA;IAAA,CACvB,CAAA,CAAA;AACL","ignoreList":[0]}},
    {"offset": {"line": 11779, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11785, "column": 0}, "map": {"version":3,"file":"isSafari.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/utils/browser/isSafari.ts"],"sourcesContent":["import { DOMAdapter } from '../../environment/adapter';\n\nexport function isSafari(): boolean\n{\n    const { userAgent } = DOMAdapter.get().getNavigator();\n\n    return (/^((?!chrome|android).)*safari/i).test(userAgent);\n}\n"],"names":[],"mappings":";;;;;;AAEO,SAAS,QAChB,GAAA;IACI,MAAM,EAAE,SAAU,EAAA,mKAAI,aAAW,CAAA,GAAA,GAAM,YAAa,EAAA,CAAA;IAE5C,OAAA,gCAAA,CAAkC,IAAA,CAAK,SAAS,CAAA,CAAA;AAC5D","ignoreList":[0]}},
    {"offset": {"line": 11797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11803, "column": 0}, "map": {"version":3,"file":"getTemporaryCanvasFromImage.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/utils/getTemporaryCanvasFromImage.ts"],"sourcesContent":["import { CanvasPool } from '../../../rendering/renderers/shared/texture/CanvasPool';\n\nimport type { CanvasAndContext } from '../../../rendering/renderers/shared/texture/CanvasPool';\n\n/**\n * This function converts an image to a canvas, and returns the canvas.\n * It is used to convert images to canvases to work around a CORS issue where WebGPU cannot\n * upload an SVGImage to a texture.\n *\n * It uses the CanvasPool to get an optimal canvas and context, and then draws the image onto it.\n * Remember to return this canvas is immediately to the CanvasPool for reuse when you are done with it.\n * (eg upload it to the GPU!)\n * @param image - The image to convert to a canvas.\n * @param resolution - The resolution of the canvas.\n */\nexport function getTemporaryCanvasFromImage(image: HTMLImageElement, resolution: number): CanvasAndContext\n{\n    // Get an optimal canvas and context from the CanvasPool, based on the\n    // dimensions of the image and the desired resolution.\n    const canvasAndContext = CanvasPool.getOptimalCanvasAndContext(\n        image.width,\n        image.height,\n        resolution\n    );\n\n    // Clear the context of the canvas, and draw the image onto it.\n    const { context } = canvasAndContext;\n\n    context.clearRect(0, 0, image.width, image.height);\n    context.drawImage(image, 0, 0);\n\n    // Return the canvas.\n    return canvasAndContext;\n}\n\n"],"names":[],"mappings":";;;;;;AAegB,SAAA,2BAAA,CAA4B,KAAA,EAAyB,UACrE,EAAA;IAGI,MAAM,sNAAmB,aAAW,CAAA,0BAAA,CAChC,KAAM,CAAA,KAAA,EACN,KAAM,CAAA,MAAA,EACN,UAAA;IAIE,MAAA,EAAE,OAAA,EAAY,GAAA,gBAAA,CAAA;IAEpB,OAAA,CAAQ,SAAA,CAAU,CAAG,EAAA,CAAA,EAAG,KAAM,CAAA,KAAA,EAAO,MAAM,MAAM,CAAA,CAAA;IACzC,OAAA,CAAA,SAAA,CAAU,KAAO,EAAA,CAAA,EAAG,CAAC,CAAA,CAAA;IAGtB,OAAA,gBAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 11818, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11824, "column": 0}, "map": {"version":3,"file":"HTMLTextSystem.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/HTMLTextSystem.ts"],"sourcesContent":["import { ExtensionType } from '../../extensions/Extensions';\nimport { type CanvasAndContext, CanvasPool } from '../../rendering/renderers/shared/texture/CanvasPool';\nimport { TexturePool } from '../../rendering/renderers/shared/texture/TexturePool';\nimport { type Renderer, RendererType } from '../../rendering/renderers/types';\nimport { isSafari } from '../../utils/browser/isSafari';\nimport { warn } from '../../utils/logging/warn';\nimport { BigPool } from '../../utils/pool/PoolGroup';\nimport { getPo2TextureFromSource } from '../text/utils/getPo2TextureFromSource';\nimport { HTMLTextRenderData } from './HTMLTextRenderData';\nimport { HTMLTextStyle } from './HTMLTextStyle';\nimport { extractFontFamilies } from './utils/extractFontFamilies';\nimport { getFontCss } from './utils/getFontCss';\nimport { getSVGUrl } from './utils/getSVGUrl';\nimport { getTemporaryCanvasFromImage } from './utils/getTemporaryCanvasFromImage';\nimport { loadSVGImage } from './utils/loadSVGImage';\nimport { measureHtmlText } from './utils/measureHtmlText';\n\nimport type { System } from '../../rendering/renderers/shared/system/System';\nimport type { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport type { PoolItem } from '../../utils/pool/Pool';\nimport type { HTMLTextOptions } from './HTMLText';\nimport type { FontCSSStyleOptions } from './utils/loadFontCSS';\n\ninterface HTMLTextTexture\n{\n    texture: Texture,\n    usageCount: number,\n    promise: Promise<Texture>,\n}\n\n/**\n * System plugin to the renderer to manage HTMLText\n * @memberof rendering\n */\nexport class HTMLTextSystem implements System\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n            ExtensionType.CanvasSystem,\n        ],\n        name: 'htmlText',\n    } as const;\n\n    public static defaultFontOptions: FontCSSStyleOptions = {\n        fontFamily: 'Arial',\n        fontStyle: 'normal',\n        fontWeight: 'normal',\n    };\n\n    private _activeTextures: Record<string, HTMLTextTexture> = {};\n\n    /**\n     * WebGPU has a cors issue when uploading an image that is an SVGImage\n     * To get around this we need to create a canvas draw the image to it and upload that instead.\n     * Bit of a shame.. but no other work around just yet!\n     */\n    private readonly _createCanvas: boolean;\n    private readonly _renderer: Renderer;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n        this._createCanvas = renderer.type === RendererType.WEBGPU;\n    }\n\n    public getTexture(options: HTMLTextOptions): Promise<Texture>\n    {\n        return this._buildTexturePromise(\n            options.text as string,\n            options.resolution,\n            options.style as HTMLTextStyle\n        );\n    }\n\n    public getManagedTexture(\n        text: string,\n        resolution: number,\n        style: HTMLTextStyle,\n        textKey: string\n    ): Promise<Texture>\n    {\n        if (this._activeTextures[textKey])\n        {\n            this._increaseReferenceCount(textKey);\n\n            return this._activeTextures[textKey].promise;\n        }\n\n        const promise = this._buildTexturePromise(text, resolution, style)\n            .then((texture) =>\n            {\n                this._activeTextures[textKey].texture = texture;\n\n                return texture;\n            });\n\n        this._activeTextures[textKey] = {\n            texture: null,\n            promise,\n            usageCount: 1,\n        };\n\n        return promise;\n    }\n\n    private async _buildTexturePromise(\n        text: string,\n        resolution: number,\n        style: HTMLTextStyle,\n    )\n    {\n        const htmlTextData = BigPool.get(HTMLTextRenderData);\n        const fontFamilies = extractFontFamilies(text, style);\n        const fontCSS = await getFontCss(\n            fontFamilies,\n            style,\n            HTMLTextStyle.defaultTextStyle as {fontWeight: string, fontStyle: string}\n        );\n        const measured = measureHtmlText(text, style, fontCSS, htmlTextData);\n\n        const width = Math.ceil(Math.ceil((Math.max(1, measured.width) + (style.padding * 2))) * resolution);\n        const height = Math.ceil(Math.ceil((Math.max(1, measured.height) + (style.padding * 2))) * resolution);\n\n        const image = htmlTextData.image;\n\n        // this off set will ensure we don't get any UV bleeding!\n        const uvSafeOffset = 2;\n\n        image.width = (width | 0) + uvSafeOffset;\n        image.height = (height | 0) + uvSafeOffset;\n\n        const svgURL = getSVGUrl(text, style, resolution, fontCSS, htmlTextData);\n\n        await loadSVGImage(image, svgURL, isSafari() && fontFamilies.length > 0);\n\n        const resource: HTMLImageElement | HTMLCanvasElement = image;\n        let canvasAndContext: CanvasAndContext;\n\n        if (this._createCanvas)\n        {\n            // silly webGPU workaround..\n            canvasAndContext = getTemporaryCanvasFromImage(image, resolution);\n        }\n\n        const texture = getPo2TextureFromSource(canvasAndContext ? canvasAndContext.canvas : resource,\n            image.width - uvSafeOffset,\n            image.height - uvSafeOffset,\n            resolution\n        );\n\n        if (this._createCanvas)\n        {\n            this._renderer.texture.initSource(texture.source);\n            CanvasPool.returnCanvasAndContext(canvasAndContext);\n        }\n\n        BigPool.return(htmlTextData as PoolItem);\n\n        return texture;\n    }\n\n    private _increaseReferenceCount(textKey: string)\n    {\n        this._activeTextures[textKey].usageCount++;\n    }\n\n    public decreaseReferenceCount(textKey: string)\n    {\n        const activeTexture = this._activeTextures[textKey];\n\n        // TODO SHOULD NOT BE NEEDED\n        if (!activeTexture) return;\n\n        activeTexture.usageCount--;\n\n        if (activeTexture.usageCount === 0)\n        {\n            if (activeTexture.texture)\n            {\n                this._cleanUp(activeTexture);\n            }\n            else\n            {\n                // we did not resolve...\n                activeTexture.promise.then((texture) =>\n                {\n                    activeTexture.texture = texture;\n\n                    this._cleanUp(activeTexture);\n                }).catch(() =>\n                {\n                    // #if _DEBUG\n                    warn('HTMLTextSystem: Failed to clean texture');\n                    // #endif\n                });\n            }\n\n            this._activeTextures[textKey] = null;\n        }\n    }\n\n    private _cleanUp(activeTexture: HTMLTextTexture)\n    {\n        TexturePool.returnTexture(activeTexture.texture);\n        activeTexture.texture.source.resource = null;\n        activeTexture.texture.source.uploadMethodId = 'unknown';\n    }\n\n    public getReferenceCount(textKey: string)\n    {\n        return this._activeTextures[textKey].usageCount;\n    }\n\n    public destroy(): void\n    {\n        this._activeTextures = null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11965, "column": 0}, "map": {"version":3,"file":"HTMLTextPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/HTMLTextPipe.ts"],"sourcesContent":["import { ExtensionType } from '../../extensions/Extensions';\nimport { Texture } from '../../rendering/renderers/shared/texture/Texture';\nimport { updateQuadBounds } from '../../utils/data/updateQuadBounds';\nimport { BigPool } from '../../utils/pool/PoolGroup';\nimport { BatchableSprite } from '../sprite/BatchableSprite';\n\nimport type { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Renderer } from '../../rendering/renderers/types';\nimport type { Container } from '../container/Container';\nimport type { HTMLText } from './HTMLText';\nimport type { HTMLTextStyle } from './HTMLTextStyle';\n\nexport class HTMLTextPipe implements RenderPipe<HTMLText>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'htmlText',\n    } as const;\n\n    private _renderer: Renderer;\n\n    private _gpuText: Record<number, {\n        textureNeedsUploading: boolean;\n        generatingTexture: boolean;\n        texture: Texture,\n        currentKey: string,\n        batchableSprite: BatchableSprite,\n    }> = Object.create(null);\n\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n        this._renderer.runners.resolutionChange.add(this);\n        this._renderer.renderableGC.addManagedHash(this, '_gpuText');\n    }\n\n    public resolutionChange()\n    {\n        for (const i in this._gpuText)\n        {\n            const gpuText = this._gpuText[i];\n\n            if (!gpuText) continue;\n\n            const text = gpuText.batchableSprite.renderable as HTMLText;\n\n            if (text._autoResolution)\n            {\n                text._resolution = this._renderer.resolution;\n                text.onViewUpdate();\n            }\n        }\n    }\n\n    public validateRenderable(htmlText: HTMLText): boolean\n    {\n        const gpuText = this._getGpuText(htmlText);\n\n        const newKey = htmlText._getKey();\n\n        if (gpuText.textureNeedsUploading)\n        {\n            gpuText.textureNeedsUploading = false;\n\n            return true;\n        }\n\n        if (gpuText.currentKey !== newKey)\n        {\n            // TODO - could look into optimising this a tad!\n            // if its a single texture, then we could just swap it?\n            // same for CanvasText..\n            return true;\n        }\n\n        return false;\n    }\n\n    public addRenderable(htmlText: HTMLText, instructionSet: InstructionSet)\n    {\n        const gpuText = this._getGpuText(htmlText);\n\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (htmlText._didTextUpdate)\n        {\n            this._updateText(htmlText);\n        }\n\n        this._renderer.renderPipes.batch.addToBatch(batchableSprite, instructionSet);\n    }\n\n    public updateRenderable(htmlText: HTMLText)\n    {\n        const gpuText = this._getGpuText(htmlText);\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (htmlText._didTextUpdate)\n        {\n            this._updateText(htmlText);\n        }\n\n        batchableSprite._batcher.updateElement(batchableSprite);\n    }\n\n    public destroyRenderable(htmlText: HTMLText)\n    {\n        htmlText.off('destroyed', this._destroyRenderableBound);\n        this._destroyRenderableById(htmlText.uid);\n    }\n\n    private _destroyRenderableById(htmlTextUid: number)\n    {\n        const gpuText = this._gpuText[htmlTextUid];\n\n        this._renderer.htmlText.decreaseReferenceCount(gpuText.currentKey);\n\n        BigPool.return(gpuText.batchableSprite);\n\n        this._gpuText[htmlTextUid] = null;\n    }\n\n    private _updateText(htmlText: HTMLText)\n    {\n        const newKey = htmlText._getKey();\n        const gpuText = this._getGpuText(htmlText);\n        const batchableSprite = gpuText.batchableSprite;\n\n        if (gpuText.currentKey !== newKey)\n        {\n            this._updateGpuText(htmlText).catch((e) =>\n            {\n                console.error(e);\n            });\n        }\n\n        htmlText._didTextUpdate = false;\n\n        const padding = htmlText._style.padding;\n\n        updateQuadBounds(batchableSprite.bounds, htmlText._anchor, batchableSprite.texture, padding);\n    }\n\n    private async _updateGpuText(htmlText: HTMLText)\n    {\n        htmlText._didTextUpdate = false;\n\n        const gpuText = this._getGpuText(htmlText);\n\n        if (gpuText.generatingTexture) return;\n\n        const newKey = htmlText._getKey();\n\n        this._renderer.htmlText.decreaseReferenceCount(gpuText.currentKey);\n\n        gpuText.generatingTexture = true;\n\n        gpuText.currentKey = newKey;\n\n        const resolution = htmlText.resolution ?? this._renderer.resolution;\n\n        const texture = await this._renderer.htmlText.getManagedTexture(\n            htmlText.text,\n            resolution,\n            htmlText._style as HTMLTextStyle,\n            htmlText._getKey()\n        );\n\n        const batchableSprite = gpuText.batchableSprite;\n\n        batchableSprite.texture = gpuText.texture = texture;\n\n        gpuText.generatingTexture = false;\n\n        gpuText.textureNeedsUploading = true;\n        htmlText.onViewUpdate();\n\n        const padding = htmlText._style.padding;\n\n        updateQuadBounds(batchableSprite.bounds, htmlText._anchor, batchableSprite.texture, padding);\n    }\n\n    private _getGpuText(htmlText: HTMLText)\n    {\n        return this._gpuText[htmlText.uid] || this.initGpuText(htmlText);\n    }\n\n    public initGpuText(htmlText: HTMLText)\n    {\n        const gpuTextData: HTMLTextPipe['_gpuText'][number] = {\n            texture: Texture.EMPTY,\n            currentKey: '--',\n            batchableSprite: BigPool.get(BatchableSprite),\n            textureNeedsUploading: false,\n            generatingTexture: false,\n        };\n\n        const batchableSprite = gpuTextData.batchableSprite;\n\n        batchableSprite.renderable = htmlText;\n        batchableSprite.transform = htmlText.groupTransform;\n        batchableSprite.texture = Texture.EMPTY;\n        batchableSprite.bounds = { minX: 0, maxX: 1, minY: 0, maxY: 0 };\n        batchableSprite.roundPixels = (this._renderer._roundPixels | htmlText._roundPixels) as 0 | 1;\n\n        htmlText._resolution = htmlText._autoResolution ? this._renderer.resolution : htmlText.resolution;\n        this._gpuText[htmlText.uid] = gpuTextData;\n        // TODO perhaps manage this outside this pipe? (a bit like how we update / add)\n        htmlText.on('destroyed', this._destroyRenderableBound);\n\n        return gpuTextData;\n    }\n\n    public destroy()\n    {\n        for (const i in this._gpuText)\n        {\n            this._destroyRenderableById(i as unknown as number);\n        }\n\n        this._gpuText = null;\n        this._renderer = null;\n    }\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12118, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/text-html/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { HTMLTextPipe } from './HTMLTextPipe';\nimport { HTMLTextSystem } from './HTMLTextSystem';\n\nextensions.add(HTMLTextSystem);\nextensions.add(HTMLTextPipe);\n"],"names":[],"mappings":";;;;;;;;kKAIA,aAAA,CAAW,GAAA,kLAAI,iBAAc,CAAA,CAAA;kKAC7B,aAAA,CAAW,GAAA,gLAAI,eAAY,CAAA","ignoreList":[0]}},
    {"offset": {"line": 12128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12134, "column": 0}, "map": {"version":3,"file":"MeshGeometry.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/mesh/shared/MeshGeometry.ts"],"sourcesContent":["import { Buffer } from '../../../rendering/renderers/shared/buffer/Buffer';\nimport { BufferUsage } from '../../../rendering/renderers/shared/buffer/const';\nimport { Geometry } from '../../../rendering/renderers/shared/geometry/Geometry';\nimport { deprecation, v8_0_0 } from '../../../utils/logging/deprecation';\n\nimport type { Topology } from '../../../rendering/renderers/shared/geometry/const';\nimport type { BatchMode } from '../../graphics/shared/GraphicsContext';\n\n/**\n * Options for the mesh geometry.\n * @memberof scene\n */\nexport interface MeshGeometryOptions\n{\n    /** The positions of the mesh. */\n    positions?: Float32Array;\n    /** The UVs of the mesh. */\n    uvs?: Float32Array;\n    /** The indices of the mesh. */\n    indices?: Uint32Array;\n    /** The topology of the mesh. */\n    topology?: Topology;\n    /** Whether to shrink the buffers to fit the data. */\n    shrinkBuffersToFit?: boolean;\n}\n\n/**\n * A geometry used to batch multiple meshes with the same texture.\n * @memberof scene\n */\nexport class MeshGeometry extends Geometry\n{\n    public static defaultOptions: MeshGeometryOptions = {\n        topology: 'triangle-list',\n        shrinkBuffersToFit: false,\n    };\n\n    public batchMode: BatchMode = 'auto';\n\n    /**\n     * @param {scene.MeshGeometryOptions} options - The options of the mesh geometry.\n     */\n    constructor(options: MeshGeometryOptions);\n    /** @deprecated since 8.0.0 */\n    constructor(positions: Float32Array, uvs: Float32Array, indices: Uint32Array);\n    constructor(...args: [MeshGeometryOptions] | [Float32Array, Float32Array, Uint32Array])\n    {\n        let options = args[0] ?? {};\n\n        if (options instanceof Float32Array)\n        {\n            // #if _DEBUG\n            deprecation(v8_0_0, 'use new MeshGeometry({ positions, uvs, indices }) instead');\n            // #endif\n\n            options = {\n                positions: options,\n                uvs: args[1],\n                indices: args[2],\n            };\n        }\n\n        options = { ...MeshGeometry.defaultOptions, ...options };\n\n        const positions = options.positions || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n        const uvs = options.uvs || new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]);\n        const indices = options.indices || new Uint32Array([0, 1, 2, 0, 2, 3]);\n\n        const shrinkToFit = options.shrinkBuffersToFit;\n\n        const positionBuffer = new Buffer({\n            data: positions,\n            label: 'attribute-mesh-positions',\n            shrinkToFit,\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n        });\n\n        const uvBuffer = new Buffer({\n            data: uvs,\n            label: 'attribute-mesh-uvs',\n            shrinkToFit,\n            usage: BufferUsage.VERTEX | BufferUsage.COPY_DST,\n        });\n\n        const indexBuffer = new Buffer({\n            data: indices,\n            label: 'index-mesh-buffer',\n            shrinkToFit,\n            usage: BufferUsage.INDEX | BufferUsage.COPY_DST,\n        });\n\n        super({\n            attributes: {\n                aPosition: {\n                    buffer: positionBuffer,\n                    format: 'float32x2',\n                    stride: 2 * 4,\n                    offset: 0,\n                },\n                aUV: {\n                    buffer: uvBuffer,\n                    format: 'float32x2',\n                    stride: 2 * 4,\n                    offset: 0,\n                },\n            },\n            indexBuffer,\n            topology: options.topology,\n        });\n    }\n\n    /** The positions of the mesh. */\n    get positions(): Float32Array\n    {\n        return this.attributes.aPosition.buffer.data as Float32Array;\n    }\n\n    set positions(value: Float32Array)\n    {\n        this.attributes.aPosition.buffer.data = value;\n    }\n\n    /** The UVs of the mesh. */\n    get uvs(): Float32Array\n    {\n        return this.attributes.aUV.buffer.data as Float32Array;\n    }\n\n    set uvs(value: Float32Array)\n    {\n        this.attributes.aUV.buffer.data = value;\n    }\n\n    /** The indices of the mesh. */\n    get indices(): Uint32Array\n    {\n        return this.indexBuffer.data as Uint32Array;\n    }\n\n    set indices(value: Uint32Array)\n    {\n        this.indexBuffer.data = value;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12260, "column": 0}, "map": {"version":3,"file":"QuadGeometry.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/utils/QuadGeometry.ts"],"sourcesContent":["import { MeshGeometry } from '../../mesh/shared/MeshGeometry';\n\nexport class QuadGeometry extends MeshGeometry\n{\n    constructor()\n    {\n        super({\n            positions: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n            uvs: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n            indices: new Uint32Array([0, 1, 2, 0, 2, 3]),\n        });\n    }\n}\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,sMAAqB,eAClC,CAAA;IACI,WACA,EAAA;QACU,KAAA,CAAA;YACF,SAAW,EAAA,IAAI,YAAa,CAAA;gBAAC,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAC;aAAC,CAAA;YACpD,GAAK,EAAA,IAAI,YAAa,CAAA;gBAAC,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAC;aAAC,CAAA;YAC9C,OAAA,EAAS,IAAI,WAAA,CAAY;gBAAC,CAAA;gBAAG;gBAAG,CAAG;gBAAA,CAAA;gBAAG,CAAG;gBAAA,CAAC;aAAC,CAAA;QAAA,CAC9C,CAAA,CAAA;IAAA,CACL;AACJ","ignoreList":[0]}},
    {"offset": {"line": 12302, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12308, "column": 0}, "map": {"version":3,"file":"localUniformBit.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/high-shader/shader-bits/localUniformBit.ts"],"sourcesContent":["export const localUniformBit = {\n    name: 'local-uniform-bit',\n    vertex: {\n        header: /* wgsl */`\n\n            struct LocalUniforms {\n                uTransformMatrix:mat3x3<f32>,\n                uColor:vec4<f32>,\n                uRound:f32,\n            }\n\n            @group(1) @binding(0) var<uniform> localUniforms : LocalUniforms;\n        `,\n        main: /* wgsl */`\n            vColor *= localUniforms.uColor;\n            modelMatrix *= localUniforms.uTransformMatrix;\n        `,\n        end: /* wgsl */`\n            if(localUniforms.uRound == 1)\n            {\n                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);\n            }\n        `\n    },\n};\n\n// TODO this works, but i think down the road it will be better to manage groups automatically if there are clashes\nexport const localUniformBitGroup2 = {\n    ...localUniformBit,\n    vertex: {\n        ...localUniformBit.vertex,\n        // replace the group!\n        header: localUniformBit.vertex.header.replace('group(1)', 'group(2)'),\n    }\n};\n\nexport const localUniformBitGl = {\n    name: 'local-uniform-bit',\n    vertex: {\n        header: /* glsl */`\n\n            uniform mat3 uTransformMatrix;\n            uniform vec4 uColor;\n            uniform float uRound;\n        `,\n        main: /* glsl */`\n            vColor *= uColor;\n            modelMatrix = uTransformMatrix;\n        `,\n        end: /* glsl */`\n            if(uRound == 1.)\n            {\n                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);\n            }\n        `\n    },\n};\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,eAAkB,GAAA;IAC3B,IAAM,EAAA,mBAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;;QAAA,CAAA;QAUlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;QAAA,CAAA;QAIhB,GAAA,EAAA,QAAA,GAAe,CAAA;;;;;QAAA,CAAA;IAAA,CAMnB;AACJ,EAAA;AAGO,MAAM,qBAAwB,GAAA;IACjC,GAAG,eAAA;IACH,MAAQ,EAAA;QACJ,GAAG,eAAgB,CAAA,MAAA;QAAA,qBAAA;QAEnB,QAAQ,eAAgB,CAAA,MAAA,CAAO,MAAO,CAAA,OAAA,CAAQ,YAAY,UAAU,CAAA;IAAA,CACxE;AACJ,EAAA;AAEO,MAAM,iBAAoB,GAAA;IAC7B,IAAM,EAAA,mBAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;QAAA,CAAA;QAMlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;QAAA,CAAA;QAIhB,GAAA,EAAA,QAAA,GAAe,CAAA;;;;;QAAA,CAAA;IAAA,CAMnB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 12370, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12376, "column": 0}, "map": {"version":3,"file":"tilingBit.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/shader/tilingBit.ts"],"sourcesContent":["export const tilingBit = {\n    name: 'tiling-bit',\n    vertex: {\n        header: /* wgsl */`\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `,\n        main: /* wgsl */`\n            uv = (tilingUniforms.uTextureTransform * vec3(uv, 1.0)).xy;\n\n            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;\n        `\n\n    },\n    fragment: {\n        header: /* wgsl */`\n            struct TilingUniforms {\n                uMapCoord:mat3x3<f32>,\n                uClampFrame:vec4<f32>,\n                uClampOffset:vec2<f32>,\n                uTextureTransform:mat3x3<f32>,\n                uSizeAnchor:vec4<f32>\n            };\n\n            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;\n            @group(2) @binding(1) var uTexture: texture_2d<f32>;\n            @group(2) @binding(2) var uSampler: sampler;\n        `,\n        main: /* wgsl */`\n\n            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);\n            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;\n            var unclamped = coord;\n            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);\n\n            var bias = 0.;\n\n            if(unclamped.x == coord.x && unclamped.y == coord.y)\n            {\n                bias = -32.;\n            } \n\n            outColor = textureSampleBias(uTexture, uSampler, coord, bias);\n        `\n    }\n\n};\n\nexport const tilingBitGl = {\n    name: 'tiling-bit',\n    vertex: {\n        header: /* glsl */`\n            uniform mat3 uTextureTransform;\n            uniform vec4 uSizeAnchor;\n        \n        `,\n        main: /* glsl */`\n            uv = (uTextureTransform * vec3(aUV, 1.0)).xy;\n\n            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;\n        `\n\n    },\n    fragment: {\n        header: /* glsl */`\n            uniform sampler2D uTexture;\n            uniform mat3 uMapCoord;\n            uniform vec4 uClampFrame;\n            uniform vec2 uClampOffset;\n        `,\n        main: /* glsl */`\n\n        vec2 coord = vUV + ceil(uClampOffset - vUV);\n        coord = (uMapCoord * vec3(coord, 1.0)).xy;\n        vec2 unclamped = coord;\n        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);\n        \n        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0\n    \n        `\n    }\n\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,SAAY,GAAA;IACrB,IAAM,EAAA,YAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;;;;;QAAA,CAAA;QAalB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;;QAAA,CAAA;IAAA,CAMpB;IACA,QAAU,EAAA;QACN,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;;;;;;;;QAAA,CAAA;QAalB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;;;;;;;;;;;;;QAAA,CAAA;IAAA,CAgBpB;AAEJ,EAAA;AAEO,MAAM,WAAc,GAAA;IACvB,IAAM,EAAA,YAAA;IACN,MAAQ,EAAA;QACJ,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;QAAA,CAAA;QAKlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;;QAAA,CAAA;IAAA,CAMpB;IACA,QAAU,EAAA;QACN,MAAA,EAAA,QAAA,GAAkB,CAAA;;;;;QAAA,CAAA;QAMlB,IAAA,EAAA,QAAA,GAAgB,CAAA;;;;;;;;;QAAA,CAAA;IAAA,CAUpB;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 12470, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12476, "column": 0}, "map": {"version":3,"file":"TilingSpriteShader.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/shader/TilingSpriteShader.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport {\n    compileHighShaderGlProgram,\n    compileHighShaderGpuProgram\n} from '../../../rendering/high-shader/compileHighShaderToProgram';\nimport { localUniformBit, localUniformBitGl } from '../../../rendering/high-shader/shader-bits/localUniformBit';\nimport { roundPixelsBit, roundPixelsBitGl } from '../../../rendering/high-shader/shader-bits/roundPixelsBit';\nimport { Shader } from '../../../rendering/renderers/shared/shader/Shader';\nimport { UniformGroup } from '../../../rendering/renderers/shared/shader/UniformGroup';\nimport { Texture } from '../../../rendering/renderers/shared/texture/Texture';\nimport { tilingBit, tilingBitGl } from './tilingBit';\n\nimport type { GlProgram } from '../../../rendering/renderers/gl/shader/GlProgram';\nimport type { GpuProgram } from '../../../rendering/renderers/gpu/shader/GpuProgram';\n\nlet gpuProgram: GpuProgram;\nlet glProgram: GlProgram;\n\nexport class TilingSpriteShader extends Shader\n{\n    constructor()\n    {\n        gpuProgram ??= compileHighShaderGpuProgram({\n            name: 'tiling-sprite-shader',\n            bits: [\n                localUniformBit,\n                tilingBit,\n                roundPixelsBit,\n            ],\n        });\n\n        glProgram ??= compileHighShaderGlProgram({\n            name: 'tiling-sprite-shader',\n            bits: [\n                localUniformBitGl,\n                tilingBitGl,\n                roundPixelsBitGl,\n            ]\n        });\n\n        const tilingUniforms = new UniformGroup({\n            uMapCoord: { value: new Matrix(), type: 'mat3x3<f32>' },\n            uClampFrame: { value: new Float32Array([0, 0, 1, 1]), type: 'vec4<f32>' },\n            uClampOffset: { value: new Float32Array([0, 0]), type: 'vec2<f32>' },\n            uTextureTransform: { value: new Matrix(), type: 'mat3x3<f32>' },\n            uSizeAnchor: { value: new Float32Array([100, 100, 0.5, 0.5]), type: 'vec4<f32>' },\n        });\n\n        super({\n            glProgram,\n            gpuProgram,\n            resources: {\n                localUniforms: new UniformGroup({\n                    uTransformMatrix: { value: new Matrix(), type: 'mat3x3<f32>' },\n                    uColor: { value: new Float32Array([1, 1, 1, 1]), type: 'vec4<f32>' },\n                    uRound: { value: 0, type: 'f32' },\n                }),\n                tilingUniforms,\n                uTexture: Texture.EMPTY.source,\n                uSampler: Texture.EMPTY.source.style,\n            }\n        });\n    }\n\n    public updateUniforms(\n        width: number, height: number,\n        matrix: Matrix,\n        anchorX: number, anchorY: number,\n        texture: Texture\n    ): void\n    {\n        const tilingUniforms = this.resources.tilingUniforms;\n\n        const textureWidth = texture.width;\n        const textureHeight = texture.height;\n        const textureMatrix = texture.textureMatrix;\n\n        const uTextureTransform = tilingUniforms.uniforms.uTextureTransform;\n\n        uTextureTransform.set(\n            matrix.a * textureWidth / width,\n            matrix.b * textureWidth / height,\n            matrix.c * textureHeight / width,\n            matrix.d * textureHeight / height,\n            matrix.tx / width,\n            matrix.ty / height);\n\n        uTextureTransform.invert();\n\n        tilingUniforms.uniforms.uMapCoord = textureMatrix.mapCoord;\n        tilingUniforms.uniforms.uClampFrame = textureMatrix.uClampFrame;\n        tilingUniforms.uniforms.uClampOffset = textureMatrix.uClampOffset;\n        tilingUniforms.uniforms.uTextureTransform = uTextureTransform;\n        tilingUniforms.uniforms.uSizeAnchor[0] = width;\n        tilingUniforms.uniforms.uSizeAnchor[1] = height;\n        tilingUniforms.uniforms.uSizeAnchor[2] = anchorX;\n        tilingUniforms.uniforms.uSizeAnchor[3] = anchorY;\n\n        if (texture)\n        {\n            this.resources.uTexture = texture.source;\n            this.resources.uSampler = texture.source.style;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12610, "column": 0}, "map": {"version":3,"file":"applyMatrix.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/utils/applyMatrix.ts"],"sourcesContent":["import type { Matrix } from '../../../maths/matrix/Matrix';\nimport type { TypedArray } from '../../../rendering/renderers/shared/buffer/Buffer';\n\nexport function applyMatrix(array: TypedArray, stride: number, offset: number, matrix: Matrix)\n{\n    let index = 0;\n    const size = array.length / (stride || 2);\n\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n\n    offset *= stride;\n\n    while (index < size)\n    {\n        const x = array[offset];\n        const y = array[offset + 1];\n\n        array[offset] = (a * x) + (c * y) + tx;\n        array[offset + 1] = (b * x) + (d * y) + ty;\n\n        offset += stride;\n\n        index++;\n    }\n}\n"],"names":[],"mappings":";;;;AAGO,SAAS,WAAY,CAAA,KAAA,EAAmB,MAAgB,EAAA,MAAA,EAAgB,MAC/E,EAAA;IACI,IAAI,KAAQ,GAAA,CAAA,CAAA;IACN,MAAA,IAAA,GAAO,KAAM,CAAA,MAAA,GAAA,CAAU,MAAU,IAAA,CAAA,CAAA,CAAA;IAEvC,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,IAAI,MAAO,CAAA,CAAA,CAAA;IACjB,MAAM,KAAK,MAAO,CAAA,EAAA,CAAA;IAClB,MAAM,KAAK,MAAO,CAAA,EAAA,CAAA;IAER,MAAA,IAAA,MAAA,CAAA;IAEV,MAAO,QAAQ,IACf,CAAA;QACU,MAAA,CAAA,GAAI,KAAA,CAAM,MAAM,CAAA,CAAA;QAChB,MAAA,CAAA,GAAI,KAAM,CAAA,MAAA,GAAS,CAAC,CAAA,CAAA;QAE1B,KAAA,CAAM,MAAM,CAAA,GAAK,CAAI,GAAA,CAAA,GAAM,IAAI,CAAK,GAAA,EAAA,CAAA;QACpC,KAAA,CAAM,SAAS,CAAC,CAAA,GAAK,CAAI,GAAA,CAAA,GAAM,IAAI,CAAK,GAAA,EAAA,CAAA;QAE9B,MAAA,IAAA,MAAA,CAAA;QAEV,KAAA,EAAA,CAAA;IAAA,CACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 12635, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12641, "column": 0}, "map": {"version":3,"file":"setUvs.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/utils/setUvs.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { applyMatrix } from './applyMatrix';\n\nimport type { TilingSprite } from '../TilingSprite';\n\nexport function setUvs(tilingSprite: TilingSprite, uvs: Float32Array)\n{\n    const texture = tilingSprite.texture;\n\n    const width = texture.frame.width;\n    const height = texture.frame.height;\n\n    let anchorX = 0;\n    let anchorY = 0;\n\n    if (tilingSprite.applyAnchorToTexture)\n    {\n        anchorX = tilingSprite.anchor.x;\n        anchorY = tilingSprite.anchor.y;\n    }\n\n    uvs[0] = uvs[6] = -anchorX;\n    uvs[2] = uvs[4] = 1 - anchorX;\n    uvs[1] = uvs[3] = -anchorY;\n    uvs[5] = uvs[7] = 1 - anchorY;\n\n    const textureMatrix = Matrix.shared;\n\n    textureMatrix.copyFrom(tilingSprite._tileTransform.matrix);\n\n    textureMatrix.tx /= tilingSprite.width;\n    textureMatrix.ty /= tilingSprite.height;\n\n    textureMatrix.invert();\n\n    textureMatrix.scale(tilingSprite.width / width, tilingSprite.height / height);\n\n    applyMatrix(uvs, 2, 0, textureMatrix);\n}\n"],"names":[],"mappings":";;;;;;;;AAKgB,SAAA,MAAA,CAAO,YAAA,EAA4B,GACnD,EAAA;IACI,MAAM,UAAU,YAAa,CAAA,OAAA,CAAA;IAEvB,MAAA,KAAA,GAAQ,QAAQ,KAAM,CAAA,KAAA,CAAA;IACtB,MAAA,MAAA,GAAS,QAAQ,KAAM,CAAA,MAAA,CAAA;IAE7B,IAAI,OAAU,GAAA,CAAA,CAAA;IACd,IAAI,OAAU,GAAA,CAAA,CAAA;IAEd,IAAI,aAAa,oBACjB,EAAA;QACI,OAAA,GAAU,aAAa,MAAO,CAAA,CAAA,CAAA;QAC9B,OAAA,GAAU,aAAa,MAAO,CAAA,CAAA,CAAA;IAAA,CAClC;IAEA,GAAA,CAAI,CAAC,CAAA,GAAI,GAAI,CAAA,CAAC,CAAA,GAAI,CAAC,OAAA,CAAA;IACnB,GAAA,CAAI,CAAC,CAAA,GAAI,GAAI,CAAA,CAAC,CAAA,GAAI,CAAI,GAAA,OAAA,CAAA;IACtB,GAAA,CAAI,CAAC,CAAA,GAAI,GAAI,CAAA,CAAC,CAAA,GAAI,CAAC,OAAA,CAAA;IACnB,GAAA,CAAI,CAAC,CAAA,GAAI,GAAI,CAAA,CAAC,CAAA,GAAI,CAAI,GAAA,OAAA,CAAA;IAEtB,MAAM,mLAAgB,SAAO,CAAA,MAAA,CAAA;IAEf,aAAA,CAAA,QAAA,CAAS,YAAa,CAAA,cAAA,CAAe,MAAM,CAAA,CAAA;IAEzD,aAAA,CAAc,EAAA,IAAM,YAAa,CAAA,KAAA,CAAA;IACjC,aAAA,CAAc,EAAA,IAAM,YAAa,CAAA,MAAA,CAAA;IAEjC,aAAA,CAAc,MAAO,EAAA,CAAA;IAErB,aAAA,CAAc,KAAA,CAAM,YAAa,CAAA,KAAA,GAAQ,KAAO,EAAA,YAAA,CAAa,MAAA,GAAS,MAAM,CAAA,CAAA;mMAEhE,cAAA,EAAA,GAAA,EAAK,CAAG,EAAA,CAAA,EAAG,aAAa,CAAA,CAAA;AACxC","ignoreList":[0]}},
    {"offset": {"line": 12673, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12679, "column": 0}, "map": {"version":3,"file":"setPositions.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/utils/setPositions.ts"],"sourcesContent":["import type { TilingSprite } from '../TilingSprite';\n\nexport function setPositions(tilingSprite: TilingSprite, positions: Float32Array)\n{\n    const anchorX = tilingSprite.anchor.x;\n    const anchorY = tilingSprite.anchor.y;\n\n    positions[0] = -anchorX * tilingSprite.width;\n    positions[1] = -anchorY * tilingSprite.height;\n    positions[2] = (1 - anchorX) * tilingSprite.width;\n    positions[3] = -anchorY * tilingSprite.height;\n    positions[4] = (1 - anchorX) * tilingSprite.width;\n    positions[5] = (1 - anchorY) * tilingSprite.height;\n    positions[6] = -anchorX * tilingSprite.width;\n    positions[7] = (1 - anchorY) * tilingSprite.height;\n}\n"],"names":[],"mappings":";;;;AAEgB,SAAA,YAAA,CAAa,YAAA,EAA4B,SACzD,EAAA;IACU,MAAA,OAAA,GAAU,aAAa,MAAO,CAAA,CAAA,CAAA;IAC9B,MAAA,OAAA,GAAU,aAAa,MAAO,CAAA,CAAA,CAAA;IAEpC,SAAA,CAAU,CAAC,CAAA,GAAI,CAAC,OAAA,GAAU,YAAa,CAAA,KAAA,CAAA;IACvC,SAAA,CAAU,CAAC,CAAA,GAAI,CAAC,OAAA,GAAU,YAAa,CAAA,MAAA,CAAA;IACvC,SAAA,CAAU,CAAC,CAAA,GAAA,CAAK,CAAI,GAAA,OAAA,IAAW,YAAa,CAAA,KAAA,CAAA;IAC5C,SAAA,CAAU,CAAC,CAAA,GAAI,CAAC,OAAA,GAAU,YAAa,CAAA,MAAA,CAAA;IACvC,SAAA,CAAU,CAAC,CAAA,GAAA,CAAK,CAAI,GAAA,OAAA,IAAW,YAAa,CAAA,KAAA,CAAA;IAC5C,SAAA,CAAU,CAAC,CAAA,GAAA,CAAK,CAAI,GAAA,OAAA,IAAW,YAAa,CAAA,MAAA,CAAA;IAC5C,SAAA,CAAU,CAAC,CAAA,GAAI,CAAC,OAAA,GAAU,YAAa,CAAA,KAAA,CAAA;IACvC,SAAA,CAAU,CAAC,CAAA,GAAA,CAAK,CAAI,GAAA,OAAA,IAAW,YAAa,CAAA,MAAA,CAAA;AAChD","ignoreList":[0]}},
    {"offset": {"line": 12697, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12703, "column": 0}, "map": {"version":3,"file":"TilingSpritePipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/TilingSpritePipe.ts"],"sourcesContent":["import { ExtensionType } from '../../extensions/Extensions';\nimport { getAdjustedBlendModeBlend } from '../../rendering/renderers/shared/state/getAdjustedBlendModeBlend';\nimport { State } from '../../rendering/renderers/shared/state/State';\nimport { type Renderer, RendererType } from '../../rendering/renderers/types';\nimport { color32BitToUniform } from '../graphics/gpu/colorToUniform';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry';\nimport { TilingSpriteShader } from './shader/TilingSpriteShader';\nimport { QuadGeometry } from './utils/QuadGeometry';\nimport { setPositions } from './utils/setPositions';\nimport { setUvs } from './utils/setUvs';\n\nimport type { WebGLRenderer } from '../../rendering/renderers/gl/WebGLRenderer';\nimport type { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Container } from '../container/Container';\nimport type { TilingSprite } from './TilingSprite';\n\ninterface RenderableData\n{\n    canBatch: boolean;\n    renderable: TilingSprite\n    batchableMesh?: BatchableMesh;\n    geometry?: MeshGeometry;\n    shader?: TilingSpriteShader;\n}\n\nconst sharedQuad = new QuadGeometry();\n\nexport class TilingSpritePipe implements RenderPipe<TilingSprite>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'tilingSprite',\n    } as const;\n\n    private _renderer: Renderer;\n    private readonly _state: State = State.default2d;\n    private readonly _tilingSpriteDataHash: Record<number, RenderableData> = Object.create(null);\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n        this._renderer.renderableGC.addManagedHash(this, '_tilingSpriteDataHash');\n    }\n\n    public validateRenderable(renderable: TilingSprite): boolean\n    {\n        const tilingSpriteData = this._getTilingSpriteData(renderable);\n\n        const couldBatch = tilingSpriteData.canBatch;\n\n        this._updateCanBatch(renderable);\n\n        const canBatch = tilingSpriteData.canBatch;\n\n        if (canBatch && canBatch === couldBatch)\n        {\n            const { batchableMesh } = tilingSpriteData;\n\n            return !batchableMesh._batcher.checkAndUpdateTexture(\n                batchableMesh,\n                renderable.texture\n            );\n        }\n\n        return (couldBatch !== canBatch);\n\n        // // TODO - only update if required?\n        // // only texture\n        // // only uvs\n        // // only positions?\n    }\n\n    public addRenderable(tilingSprite: TilingSprite, instructionSet: InstructionSet)\n    {\n        const batcher = this._renderer.renderPipes.batch;\n\n        // init\n        this._updateCanBatch(tilingSprite);\n\n        const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n\n        const { geometry, canBatch } = tilingSpriteData;\n\n        if (canBatch)\n        {\n            tilingSpriteData.batchableMesh ||= new BatchableMesh();\n\n            const batchableMesh = tilingSpriteData.batchableMesh;\n\n            if (tilingSprite.didViewUpdate)\n            {\n                this._updateBatchableMesh(tilingSprite);\n\n                batchableMesh.geometry = geometry;\n                batchableMesh.renderable = tilingSprite;\n                batchableMesh.transform = tilingSprite.groupTransform;\n                batchableMesh.texture = tilingSprite._texture;\n            }\n\n            batchableMesh.roundPixels = (this._renderer._roundPixels | tilingSprite._roundPixels) as 0 | 1;\n\n            batcher.addToBatch(batchableMesh, instructionSet);\n        }\n        else\n        {\n            batcher.break(instructionSet);\n\n            tilingSpriteData.shader ||= new TilingSpriteShader();\n\n            this.updateRenderable(tilingSprite);\n\n            instructionSet.add(tilingSprite);\n        }\n    }\n\n    public execute(tilingSprite: TilingSprite)\n    {\n        const { shader } = this._tilingSpriteDataHash[tilingSprite.uid];\n\n        shader.groups[0] = this._renderer.globalUniforms.bindGroup;\n\n        // deal with local uniforms...\n        const localUniforms = shader.resources.localUniforms.uniforms;\n\n        localUniforms.uTransformMatrix = tilingSprite.groupTransform;\n        localUniforms.uRound = this._renderer._roundPixels | tilingSprite._roundPixels;\n\n        color32BitToUniform(\n            tilingSprite.groupColorAlpha,\n            localUniforms.uColor,\n            0\n        );\n\n        this._state.blendMode = getAdjustedBlendModeBlend(tilingSprite.groupBlendMode, tilingSprite.texture._source);\n\n        this._renderer.encoder.draw({\n            geometry: sharedQuad,\n            shader,\n            state: this._state,\n        });\n    }\n\n    public updateRenderable(tilingSprite: TilingSprite)\n    {\n        const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n\n        const { canBatch } = tilingSpriteData;\n\n        if (canBatch)\n        {\n            const { batchableMesh } = tilingSpriteData;\n\n            if (tilingSprite.didViewUpdate) this._updateBatchableMesh(tilingSprite);\n\n            batchableMesh._batcher.updateElement(batchableMesh);\n        }\n        else if (tilingSprite.didViewUpdate)\n        {\n            const { shader } = tilingSpriteData;\n            // now update uniforms...\n\n            shader.updateUniforms(\n                tilingSprite.width,\n                tilingSprite.height,\n                tilingSprite._tileTransform.matrix,\n                tilingSprite.anchor.x,\n                tilingSprite.anchor.y,\n                tilingSprite.texture,\n            );\n        }\n    }\n\n    public destroyRenderable(tilingSprite: TilingSprite)\n    {\n        const tilingSpriteData = this._getTilingSpriteData(tilingSprite);\n\n        tilingSpriteData.batchableMesh = null;\n\n        tilingSpriteData.shader?.destroy();\n\n        this._tilingSpriteDataHash[tilingSprite.uid] = null;\n\n        tilingSprite.off('destroyed', this._destroyRenderableBound);\n    }\n\n    private _getTilingSpriteData(renderable: TilingSprite): RenderableData\n    {\n        return this._tilingSpriteDataHash[renderable.uid] || this._initTilingSpriteData(renderable);\n    }\n\n    private _initTilingSpriteData(tilingSprite: TilingSprite): RenderableData\n    {\n        const geometry = new MeshGeometry({\n            indices: sharedQuad.indices,\n            positions: sharedQuad.positions.slice(),\n            uvs: sharedQuad.uvs.slice(),\n        });\n\n        this._tilingSpriteDataHash[tilingSprite.uid] = {\n            canBatch: true,\n            renderable: tilingSprite,\n            geometry,\n        };\n\n        tilingSprite.on('destroyed', this._destroyRenderableBound);\n\n        return this._tilingSpriteDataHash[tilingSprite.uid];\n    }\n\n    private _updateBatchableMesh(tilingSprite: TilingSprite)\n    {\n        const renderableData = this._getTilingSpriteData(tilingSprite);\n\n        const { geometry } = renderableData;\n\n        const style = tilingSprite.texture.source.style;\n\n        if (style.addressMode !== 'repeat')\n        {\n            style.addressMode = 'repeat';\n            style.update();\n        }\n\n        setUvs(tilingSprite, geometry.uvs);\n        setPositions(tilingSprite, geometry.positions);\n    }\n\n    public destroy()\n    {\n        for (const i in this._tilingSpriteDataHash)\n        {\n            this.destroyRenderable(this._tilingSpriteDataHash[i].renderable);\n        }\n\n        (this._tilingSpriteDataHash as null) = null;\n        this._renderer = null;\n    }\n\n    private _updateCanBatch(tilingSprite: TilingSprite)\n    {\n        const renderableData = this._getTilingSpriteData(tilingSprite);\n        const texture = tilingSprite.texture;\n\n        let _nonPowOf2wrapping = true;\n\n        if (this._renderer.type === RendererType.WEBGL)\n        {\n            _nonPowOf2wrapping = (this._renderer as WebGLRenderer).context.supports.nonPowOf2wrapping;\n        }\n\n        renderableData.canBatch = texture.textureMatrix.isSimple && (_nonPowOf2wrapping || texture.source.isPowerOfTwo);\n\n        return renderableData.canBatch;\n    }\n}\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,MAAM,UAAA,GAAa,gMAAI,eAAa,EAAA,CAAA;AAE7B,MAAM,gBACb,CAAA;IAgBI,YAAY,QACZ,CAAA;QALA,IAAA,CAAiB,MAAA,8LAAgB,SAAM,CAAA,SAAA,CAAA;QACtB,IAAA,CAAA,qBAAA,GAAA,aAAA,GAA+D,MAAA,CAAA,MAAA,CAAO,IAAI,CAAA,CAAA;QAC3F,IAAA,CAAiB,uBAA0B,GAAA,IAAA,CAAK,iBAAkB,CAAA,IAAA,CAAK,IAAI,CAAA,CAAA;QAIvE,IAAA,CAAK,SAAY,GAAA,QAAA,CAAA;QACjB,IAAA,CAAK,SAAU,CAAA,YAAA,CAAa,cAAe,CAAA,IAAA,EAAM,uBAAuB,CAAA,CAAA;IAAA,CAC5E;IAEO,mBAAmB,UAC1B,EAAA;QACU,MAAA,gBAAA,GAAmB,IAAK,CAAA,oBAAA,CAAqB,UAAU,CAAA,CAAA;QAE7D,MAAM,aAAa,gBAAiB,CAAA,QAAA,CAAA;QAEpC,IAAA,CAAK,eAAA,CAAgB,UAAU,CAAA,CAAA;QAE/B,MAAM,WAAW,gBAAiB,CAAA,QAAA,CAAA;QAE9B,IAAA,QAAA,IAAY,aAAa,UAC7B,EAAA;YACU,MAAA,EAAE,aAAA,EAAkB,GAAA,gBAAA,CAAA;YAEnB,OAAA,CAAC,cAAc,QAAS,CAAA,qBAAA,CAC3B,aAAA,EACA,UAAW,CAAA,OAAA;QACf,CACJ;QAEA,OAAQ,UAAe,KAAA,QAAA,CAAA;IAAA,CAM3B;IAEO,aAAA,CAAc,YAAA,EAA4B,cACjD,EAAA;QACU,MAAA,OAAA,GAAU,IAAK,CAAA,SAAA,CAAU,WAAY,CAAA,KAAA,CAAA;QAG3C,IAAA,CAAK,eAAA,CAAgB,YAAY,CAAA,CAAA;QAE3B,MAAA,gBAAA,GAAmB,IAAK,CAAA,oBAAA,CAAqB,YAAY,CAAA,CAAA;QAEzD,MAAA,EAAE,QAAU,EAAA,QAAA,EAAa,GAAA,gBAAA,CAAA;QAE/B,IAAI,QACJ,EAAA;YACI,gBAAA,CAAiB,aAAjB,IAAA,CAAA,gBAAA,CAAiB,aAAkB,GAAA,sLAAI,gBAAc,EAAA,CAAA,CAAA;YAErD,MAAM,gBAAgB,gBAAiB,CAAA,aAAA,CAAA;YAEvC,IAAI,aAAa,aACjB,EAAA;gBACI,IAAA,CAAK,oBAAA,CAAqB,YAAY,CAAA,CAAA;gBAEtC,aAAA,CAAc,QAAW,GAAA,QAAA,CAAA;gBACzB,aAAA,CAAc,UAAa,GAAA,YAAA,CAAA;gBAC3B,aAAA,CAAc,SAAA,GAAY,YAAa,CAAA,cAAA,CAAA;gBACvC,aAAA,CAAc,OAAA,GAAU,YAAa,CAAA,QAAA,CAAA;YAAA,CACzC;YAEA,aAAA,CAAc,WAAe,GAAA,IAAA,CAAK,SAAU,CAAA,YAAA,GAAe,YAAa,CAAA,YAAA,CAAA;YAEhE,OAAA,CAAA,UAAA,CAAW,eAAe,cAAc,CAAA,CAAA;QAAA,CAGpD,MAAA;YACI,OAAA,CAAQ,KAAA,CAAM,cAAc,CAAA,CAAA;YAE5B,gBAAA,CAAiB,MAAjB,IAAA,CAAA,gBAAA,CAAiB,MAAW,GAAA,uMAAI,qBAAmB,EAAA,CAAA,CAAA;YAEnD,IAAA,CAAK,gBAAA,CAAiB,YAAY,CAAA,CAAA;YAElC,cAAA,CAAe,GAAA,CAAI,YAAY,CAAA,CAAA;QAAA,CACnC;IAAA,CACJ;IAEO,QAAQ,YACf,EAAA;QACI,MAAM,EAAE,MAAO,EAAA,GAAI,IAAK,CAAA,qBAAA,CAAsB,aAAa,GAAG,CAAA,CAAA;QAE9D,MAAA,CAAO,MAAO,CAAA,CAAC,CAAI,GAAA,IAAA,CAAK,SAAA,CAAU,cAAe,CAAA,SAAA,CAAA;QAG3C,MAAA,aAAA,GAAgB,MAAO,CAAA,SAAA,CAAU,aAAc,CAAA,QAAA,CAAA;QAErD,aAAA,CAAc,gBAAA,GAAmB,YAAa,CAAA,cAAA,CAAA;QAC9C,aAAA,CAAc,MAAS,GAAA,IAAA,CAAK,SAAU,CAAA,YAAA,GAAe,YAAa,CAAA,YAAA,CAAA;gMAElE,sBAAA,EACI,YAAa,CAAA,eAAA,EACb,aAAc,CAAA,MAAA,EACd,CAAA;QAGJ,IAAA,CAAK,MAAA,CAAO,SAAY,uNAAA,4BAAA,EAA0B,aAAa,cAAgB,EAAA,YAAA,CAAa,OAAA,CAAQ,OAAO,CAAA,CAAA;QAEtG,IAAA,CAAA,SAAA,CAAU,OAAA,CAAQ,IAAK,CAAA;YACxB,QAAU,EAAA,UAAA;YACV,MAAA;YACA,OAAO,IAAK,CAAA,MAAA;QAAA,CACf,CAAA,CAAA;IAAA,CACL;IAEO,iBAAiB,YACxB,EAAA;QACU,MAAA,gBAAA,GAAmB,IAAK,CAAA,oBAAA,CAAqB,YAAY,CAAA,CAAA;QAEzD,MAAA,EAAE,QAAA,EAAa,GAAA,gBAAA,CAAA;QAErB,IAAI,QACJ,EAAA;YACU,MAAA,EAAE,aAAA,EAAkB,GAAA,gBAAA,CAAA;YAE1B,IAAI,YAAa,CAAA,aAAA,EAAe,IAAA,CAAK,oBAAA,CAAqB,YAAY,CAAA,CAAA;YAExD,aAAA,CAAA,QAAA,CAAS,aAAA,CAAc,aAAa,CAAA,CAAA;QAAA,CACtD,MAAA,IACS,aAAa,aACtB,EAAA;YACU,MAAA,EAAE,MAAA,EAAW,GAAA,gBAAA,CAAA;YAGZ,MAAA,CAAA,cAAA,CACH,YAAa,CAAA,KAAA,EACb,YAAa,CAAA,MAAA,EACb,aAAa,cAAe,CAAA,MAAA,EAC5B,aAAa,MAAO,CAAA,CAAA,EACpB,aAAa,MAAO,CAAA,CAAA,EACpB,YAAa,CAAA,OAAA;QACjB,CACJ;IAAA,CACJ;IAEO,kBAAkB,YACzB,EAAA;QACU,MAAA,gBAAA,GAAmB,IAAK,CAAA,oBAAA,CAAqB,YAAY,CAAA,CAAA;QAE/D,gBAAA,CAAiB,aAAgB,GAAA,IAAA,CAAA;QAEjC,gBAAA,CAAiB,MAAA,EAAQ,OAAQ,EAAA,CAAA;QAE5B,IAAA,CAAA,qBAAA,CAAsB,YAAa,CAAA,GAAG,CAAI,GAAA,IAAA,CAAA;QAElC,YAAA,CAAA,GAAA,CAAI,WAAa,EAAA,IAAA,CAAK,uBAAuB,CAAA,CAAA;IAAA,CAC9D;IAEQ,qBAAqB,UAC7B,EAAA;QACI,OAAO,IAAA,CAAK,qBAAsB,CAAA,UAAA,CAAW,GAAG,CAAK,IAAA,IAAA,CAAK,qBAAA,CAAsB,UAAU,CAAA,CAAA;IAAA,CAC9F;IAEQ,sBAAsB,YAC9B,EAAA;QACU,MAAA,QAAA,GAAW,qLAAI,eAAa,CAAA;YAC9B,SAAS,UAAW,CAAA,OAAA;YACpB,SAAA,EAAW,UAAW,CAAA,SAAA,CAAU,KAAM,EAAA;YACtC,GAAA,EAAK,UAAW,CAAA,GAAA,CAAI,KAAM,EAAA;QAAA,CAC7B,CAAA,CAAA;QAEI,IAAA,CAAA,qBAAA,CAAsB,YAAa,CAAA,GAAG,CAAI,GAAA;YAC3C,QAAU,EAAA,IAAA;YACV,UAAY,EAAA,YAAA;YACZ,QAAA;QAAA,CACJ,CAAA;QAEa,YAAA,CAAA,EAAA,CAAG,WAAa,EAAA,IAAA,CAAK,uBAAuB,CAAA,CAAA;QAElD,OAAA,IAAA,CAAK,qBAAsB,CAAA,YAAA,CAAa,GAAG,CAAA,CAAA;IAAA,CACtD;IAEQ,qBAAqB,YAC7B,EAAA;QACU,MAAA,cAAA,GAAiB,IAAK,CAAA,oBAAA,CAAqB,YAAY,CAAA,CAAA;QAEvD,MAAA,EAAE,QAAA,EAAa,GAAA,cAAA,CAAA;QAEf,MAAA,KAAA,GAAQ,YAAa,CAAA,OAAA,CAAQ,MAAO,CAAA,KAAA,CAAA;QAEtC,IAAA,KAAA,CAAM,WAAA,KAAgB,QAC1B,EAAA;YACI,KAAA,CAAM,WAAc,GAAA,QAAA,CAAA;YACpB,KAAA,CAAM,MAAO,EAAA,CAAA;QAAA,CACjB;kMAEO,SAAA,EAAA,YAAA,EAAc,SAAS,GAAG,CAAA,CAAA;QACpB,+MAAA,EAAA,YAAA,EAAc,SAAS,SAAS,CAAA,CAAA;IAAA,CACjD;IAEO,OACP,GAAA;QACe,IAAA,MAAA,CAAA,IAAK,IAAA,CAAK,qBACrB,CAAA;YACI,IAAA,CAAK,iBAAkB,CAAA,IAAA,CAAK,qBAAsB,CAAA,CAAC,CAAA,CAAE,UAAU,CAAA,CAAA;QAAA,CACnE;QAEC,IAAA,CAAK,qBAAiC,GAAA,IAAA,CAAA;QACvC,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;IAAA,CACrB;IAEQ,gBAAgB,YACxB,EAAA;QACU,MAAA,cAAA,GAAiB,IAAK,CAAA,oBAAA,CAAqB,YAAY,CAAA,CAAA;QAC7D,MAAM,UAAU,YAAa,CAAA,OAAA,CAAA;QAE7B,IAAI,kBAAqB,GAAA,IAAA,CAAA;QAEzB,IAAI,IAAK,CAAA,SAAA,CAAU,IAAS,8KAAA,eAAA,CAAa,KACzC,EAAA;YAC0B,kBAAA,GAAA,IAAA,CAAK,SAA4B,CAAA,OAAA,CAAQ,QAAS,CAAA,iBAAA,CAAA;QAAA,CAC5E;QAEA,cAAA,CAAe,QAAA,GAAW,OAAQ,CAAA,aAAA,CAAc,QAAa,IAAA,CAAA,kBAAA,IAAsB,QAAQ,MAAO,CAAA,YAAA,CAAA,CAAA;QAElG,OAAO,cAAe,CAAA,QAAA,CAAA;IAAA,CAC1B;AACJ,CAAA;AAAA,YAAA,GAzOa,gBAAA,CAGK,SAAY,GAAA;IACtB,IAAM,EAAA;0KACF,gBAAc,CAAA,UAAA;0KACd,gBAAc,CAAA,WAAA;0KACd,gBAAc,CAAA,WAAA;KAClB;IACA,IAAM,EAAA,cAAA;AACV,CAAA","ignoreList":[0]}},
    {"offset": {"line": 12862, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12868, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-tiling/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { TilingSpritePipe } from './TilingSpritePipe';\n\nextensions.add(TilingSpritePipe);\n"],"names":[],"mappings":";;;;;;kKAGA,aAAA,CAAW,GAAA,wLAAI,mBAAgB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 12875, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12881, "column": 0}, "map": {"version":3,"file":"PlaneGeometry.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/mesh-plane/PlaneGeometry.ts"],"sourcesContent":["import { deprecation, v8_0_0 } from '../../utils/logging/deprecation';\nimport { MeshGeometry } from '../mesh/shared/MeshGeometry';\n\nimport type { MeshGeometryOptions } from '../mesh/shared/MeshGeometry';\n\n/**\n * Constructor options used for `PlaneGeometry` instances.\n * ```js\n * const planeGeometry = new PlaneGeometry({\n *    width: 100,\n *    height: 100,\n *    verticesX: 10,\n *    verticesY: 10,\n * });\n * ```\n * @see {@link scene.PlaneGeometry}\n * @memberof scene\n */\nexport interface PlaneGeometryOptions\n{\n    /** Width of plane */\n    width?: number;\n    /** Height of plane */\n    height?: number;\n    /** Number of vertices on x-axis */\n    verticesX?: number;\n    /** Number of vertices on y-axis */\n    verticesY?: number;\n}\n\n/**\n * The PlaneGeometry allows you to draw a 2d plane\n * @memberof scene\n */\nexport class PlaneGeometry extends MeshGeometry\n{\n    public static defaultOptions: PlaneGeometryOptions & MeshGeometryOptions = {\n        width: 100,\n        height: 100,\n        verticesX: 10,\n        verticesY: 10,\n    };\n\n    /** The number of vertices on x-axis */\n    public verticesX: number;\n    /** The number of vertices on y-axis */\n    public verticesY: number;\n    /** The width of plane */\n    public width: number;\n    /** The height of plane */\n    public height: number;\n\n    /**\n     * @param {PlaneGeometryOptions} options - Options to be applied to plane geometry\n     */\n    constructor(options: PlaneGeometryOptions);\n    /** @deprecated since 8.0.0 */\n    constructor(width?: number, height?: number, verticesX?: number, verticesY?: number);\n    constructor(...args: [PlaneGeometryOptions?] | [number?, number?, number?, number?])\n    {\n        super({});\n\n        let options = args[0] ?? {};\n\n        if (typeof options === 'number')\n        {\n            // #if _DEBUG\n            // eslint-disable-next-line max-len\n            deprecation(v8_0_0, 'PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead');\n            // #endif\n\n            options = {\n                width: options,\n                height: args[1],\n                verticesX: args[2],\n                verticesY: args[3],\n            };\n        }\n\n        this.build(options);\n    }\n\n    /**\n     * Refreshes plane coordinates\n     * @param options - Options to be applied to plane geometry\n     */\n    public build(options: PlaneGeometryOptions): void\n    {\n        options = { ...PlaneGeometry.defaultOptions, ...options };\n\n        this.verticesX = this.verticesX ?? options.verticesX;\n        this.verticesY = this.verticesY ?? options.verticesY;\n\n        this.width = this.width ?? options.width;\n        this.height = this.height ?? options.height;\n\n        const total = this.verticesX * this.verticesY;\n        const verts = [];\n        const uvs = [];\n        const indices = [];\n\n        const verticesX = this.verticesX - 1;\n        const verticesY = this.verticesY - 1;\n\n        const sizeX = (this.width) / verticesX;\n        const sizeY = (this.height) / verticesY;\n\n        for (let i = 0; i < total; i++)\n        {\n            const x = (i % this.verticesX);\n            const y = ((i / this.verticesX) | 0);\n\n            verts.push(x * sizeX, y * sizeY);\n            uvs.push(x / verticesX, y / verticesY);\n        }\n\n        const totalSub = verticesX * verticesY;\n\n        for (let i = 0; i < totalSub; i++)\n        {\n            const xpos = i % verticesX;\n            const ypos = (i / verticesX) | 0;\n\n            const value = (ypos * this.verticesX) + xpos;\n            const value2 = (ypos * this.verticesX) + xpos + 1;\n            const value3 = ((ypos + 1) * this.verticesX) + xpos;\n            const value4 = ((ypos + 1) * this.verticesX) + xpos + 1;\n\n            indices.push(value, value2, value3,\n                value2, value4, value3);\n        }\n\n        this.buffers[0].data = new Float32Array(verts);\n        this.buffers[1].data = new Float32Array(uvs);\n        this.indexBuffer.data = new Uint32Array(indices);\n\n        // ensure that the changes are uploaded\n        this.buffers[0].update();\n        this.buffers[1].update();\n        this.indexBuffer.update();\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 12957, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12963, "column": 0}, "map": {"version":3,"file":"NineSliceGeometry.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-nine-slice/NineSliceGeometry.ts"],"sourcesContent":["import { PlaneGeometry } from '../mesh-plane/PlaneGeometry';\n\n/**\n * Options for the NineSliceGeometry.\n * @memberof scene\n */\nexport interface NineSliceGeometryOptions\n{\n\n    /** The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n    width?: number\n    /** The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n    height?: number\n    /** The original width of the texture */\n    originalWidth?: number\n    /** The original height of the texture */\n    originalHeight?: number\n    /** The width of the left column. */\n    leftWidth?: number\n    /** The height of the top row. */\n    topHeight?: number\n    /** The width of the right column. */\n    rightWidth?: number\n    /** The height of the bottom row. */\n    bottomHeight?: number\n}\n\n/**\n * The NineSliceGeometry class allows you to create a NineSlicePlane object.\n * @memberof scene\n */\nexport class NineSliceGeometry extends PlaneGeometry\n{\n    /** The default options for the NineSliceGeometry. */\n    public static defaultOptions: NineSliceGeometryOptions = {\n        /** The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n        width: 100,\n        /** The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane. */\n        height: 100,\n        /** The width of the left column. */\n        leftWidth: 10,\n        /** The height of the top row. */\n        topHeight: 10,\n        /** The width of the right column. */\n        rightWidth: 10,\n        /** The height of the bottom row. */\n        bottomHeight: 10,\n\n        /** The original width of the texture */\n        originalWidth: 100,\n        /** The original height of the texture */\n        originalHeight: 100,\n    };\n\n    public _leftWidth: number;\n    public _rightWidth: number;\n    public _topHeight: number;\n    public _bottomHeight: number;\n\n    private _originalWidth: number;\n    private _originalHeight: number;\n\n    constructor(options: NineSliceGeometryOptions = {})\n    {\n        options = { ...NineSliceGeometry.defaultOptions, ...options };\n\n        super({\n            width: options.width,\n            height: options.height,\n            verticesX: 4,\n            verticesY: 4,\n        });\n\n        this.update(options);\n    }\n\n    /**\n     * Updates the NineSliceGeometry with the options.\n     * @param options - The options of the NineSliceGeometry.\n     */\n    public update(options: NineSliceGeometryOptions)\n    {\n        this.width = options.width ?? this.width;\n        this.height = options.height ?? this.height;\n        this._originalWidth = options.originalWidth ?? this._originalWidth;\n        this._originalHeight = options.originalHeight ?? this._originalHeight;\n        this._leftWidth = options.leftWidth ?? this._leftWidth;\n        this._rightWidth = options.rightWidth ?? this._rightWidth;\n        this._topHeight = options.topHeight ?? this._topHeight;\n        this._bottomHeight = options.bottomHeight ?? this._bottomHeight;\n\n        this.updateUvs();\n        this.updatePositions();\n    }\n\n    /** Updates the positions of the vertices. */\n    public updatePositions()\n    {\n        const positions = this.positions;\n\n        const w = this._leftWidth + this._rightWidth;\n        const scaleW = this.width > w ? 1.0 : this.width / w;\n\n        const h = this._topHeight + this._bottomHeight;\n        const scaleH = this.height > h ? 1.0 : this.height / h;\n\n        const scale = Math.min(scaleW, scaleH);\n\n        positions[9] = positions[11] = positions[13] = positions[15] = this._topHeight * scale;\n        positions[17] = positions[19] = positions[21] = positions[23] = this.height - (this._bottomHeight * scale);\n        positions[25] = positions[27] = positions[29] = positions[31] = this.height;\n\n        positions[2] = positions[10] = positions[18] = positions[26] = this._leftWidth * scale;\n        positions[4] = positions[12] = positions[20] = positions[28] = this.width - (this._rightWidth * scale);\n        positions[6] = positions[14] = positions[22] = positions[30] = this.width;\n\n        this.getBuffer('aPosition').update();\n    }\n\n    /** Updates the UVs of the vertices. */\n    public updateUvs()\n    {\n        const uvs = this.uvs;\n\n        uvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\n        uvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\n\n        uvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\n        uvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\n\n        const _uvw = 1.0 / this._originalWidth;\n        const _uvh = 1.0 / this._originalHeight;\n\n        uvs[2] = uvs[10] = uvs[18] = uvs[26] = _uvw * this._leftWidth;\n        uvs[9] = uvs[11] = uvs[13] = uvs[15] = _uvh * this._topHeight;\n\n        uvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - (_uvw * this._rightWidth);\n        uvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - (_uvh * this._bottomHeight);\n\n        this.getBuffer('aUV').update();\n    }\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13047, "column": 0}, "map": {"version":3,"file":"NineSliceSpritePipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-nine-slice/NineSliceSpritePipe.ts"],"sourcesContent":["import { ExtensionType } from '../../extensions/Extensions';\nimport { BigPool } from '../../utils/pool/PoolGroup';\nimport { BatchableMesh } from '../mesh/shared/BatchableMesh';\nimport { NineSliceGeometry } from './NineSliceGeometry';\n\nimport type { InstructionSet } from '../../rendering/renderers/shared/instructions/InstructionSet';\nimport type { RenderPipe } from '../../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Renderer } from '../../rendering/renderers/types';\nimport type { PoolItem } from '../../utils/pool/Pool';\nimport type { Container } from '../container/Container';\nimport type { NineSliceSprite } from './NineSliceSprite';\n\nexport class NineSliceSpritePipe implements RenderPipe<NineSliceSprite>\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'nineSliceSprite',\n    } as const;\n\n    private readonly _renderer: Renderer;\n    private readonly _gpuSpriteHash: Record<number, BatchableMesh> = Object.create(null);\n    private readonly _destroyRenderableBound = this.destroyRenderable.bind(this) as (renderable: Container) => void;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n        this._renderer.renderableGC.addManagedHash(this, '_gpuSpriteHash');\n    }\n\n    public addRenderable(sprite: NineSliceSprite, instructionSet: InstructionSet)\n    {\n        const gpuSprite = this._getGpuSprite(sprite);\n\n        if (sprite.didViewUpdate) this._updateBatchableSprite(sprite, gpuSprite);\n\n        this._renderer.renderPipes.batch.addToBatch(gpuSprite, instructionSet);\n    }\n\n    public updateRenderable(sprite: NineSliceSprite)\n    {\n        const gpuSprite = this._gpuSpriteHash[sprite.uid];\n\n        if (sprite.didViewUpdate) this._updateBatchableSprite(sprite, gpuSprite);\n\n        gpuSprite._batcher.updateElement(gpuSprite);\n    }\n\n    public validateRenderable(sprite: NineSliceSprite): boolean\n    {\n        const gpuSprite = this._getGpuSprite(sprite);\n\n        return !gpuSprite._batcher.checkAndUpdateTexture(\n            gpuSprite,\n            sprite._texture\n        );\n    }\n\n    public destroyRenderable(sprite: NineSliceSprite)\n    {\n        const batchableMesh = this._gpuSpriteHash[sprite.uid];\n\n        // this will call reset!\n        BigPool.return(batchableMesh.geometry as PoolItem);\n        BigPool.return(batchableMesh as PoolItem);\n\n        this._gpuSpriteHash[sprite.uid] = null;\n\n        sprite.off('destroyed', this._destroyRenderableBound);\n    }\n\n    private _updateBatchableSprite(sprite: NineSliceSprite, batchableSprite: BatchableMesh)\n    {\n        (batchableSprite.geometry as NineSliceGeometry)\n            .update(sprite);\n\n        // = sprite.bounds;\n        batchableSprite.texture = sprite._texture;\n    }\n\n    private _getGpuSprite(sprite: NineSliceSprite): BatchableMesh\n    {\n        return this._gpuSpriteHash[sprite.uid] || this._initGPUSprite(sprite);\n    }\n\n    private _initGPUSprite(sprite: NineSliceSprite): BatchableMesh\n    {\n        const batchableMesh = BigPool.get(BatchableMesh);\n\n        batchableMesh.geometry = BigPool.get(NineSliceGeometry);\n        batchableMesh.renderable = sprite;\n        batchableMesh.transform = sprite.groupTransform;\n        batchableMesh.texture = sprite._texture;\n        batchableMesh.roundPixels = (this._renderer._roundPixels | sprite._roundPixels) as 0 | 1;\n\n        this._gpuSpriteHash[sprite.uid] = batchableMesh;\n\n        // if the sprite has not been updated by the view, we need to update the batchable mesh now.\n        if (!sprite.didViewUpdate)\n        {\n            this._updateBatchableSprite(sprite, batchableMesh);\n        }\n\n        // TODO perhaps manage this outside this pipe? (a bit like how we update / add)\n        sprite.on('destroyed', this._destroyRenderableBound);\n\n        return batchableMesh;\n    }\n\n    public destroy()\n    {\n        for (const i in this._gpuSpriteHash)\n        {\n            const batchableMesh = this._gpuSpriteHash[i];\n\n            batchableMesh.geometry.destroy();\n        }\n\n        (this._gpuSpriteHash as null) = null;\n        (this._renderer as null) = null;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13133, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/sprite-nine-slice/init.ts"],"sourcesContent":["import { extensions } from '../../extensions/Extensions';\nimport { NineSliceSpritePipe } from './NineSliceSpritePipe';\n\nextensions.add(NineSliceSpritePipe);\n"],"names":[],"mappings":";;;;;;kKAGA,aAAA,CAAW,GAAA,kMAAI,sBAAmB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 13140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13146, "column": 0}, "map": {"version":3,"file":"getFastGlobalBounds.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/bounds/getFastGlobalBounds.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { boundsPool } from './utils/matrixAndBoundsPool';\n\nimport type { Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport type { Container } from '../Container';\nimport type { Bounds } from './Bounds';\n\n// TODO could we cache local bounds on the render groups?\n\nconst tempMatrix = new Matrix();\n\n/**\n * Does exactly the same as getGlobalBounds, but does instead makes use of transforming AABBs\n * of the various children within the scene graph. This is much faster, but less accurate.\n *\n * the result will never be smaller - only ever slightly larger (in most cases, it will be the same).\n * @param target - The target container to get the bounds from\n * @param bounds - The output bounds object.\n * @returns The bounds.\n */\nexport function getFastGlobalBounds(target: Container, bounds: Bounds): Bounds\n{\n    bounds.clear();\n\n    _getGlobalBoundsRecursive(target, bounds);\n\n    if (!bounds.isValid)\n    {\n        bounds.set(0, 0, 0, 0);\n    }\n\n    const renderGroup = target.renderGroup || target.parentRenderGroup;\n\n    bounds.applyMatrix(renderGroup.worldTransform);\n\n    return bounds;\n}\n\nexport function _getGlobalBoundsRecursive(\n    target: Container,\n    bounds: Bounds,\n)\n{\n    if (target.localDisplayStatus !== 0b111 || !target.measurable)\n    {\n        return;\n    }\n\n    const manageEffects = !!target.effects.length;\n\n    let localBounds = bounds;\n\n    if (target.renderGroup || manageEffects)\n    {\n        localBounds = boundsPool.get().clear();\n    }\n\n    if (target.boundsArea)\n    {\n        bounds.addRect(target.boundsArea, target.worldTransform);\n    }\n    else\n    {\n        if (target.renderPipeId)\n        {\n            const viewBounds = (target as Renderable).bounds;\n\n            localBounds.addFrame(\n                viewBounds.minX,\n                viewBounds.minY,\n                viewBounds.maxX,\n                viewBounds.maxY,\n                target.groupTransform\n            );\n        }\n\n        const children = target.children;\n\n        for (let i = 0; i < children.length; i++)\n        {\n            _getGlobalBoundsRecursive(children[i], localBounds);\n        }\n    }\n\n    if (manageEffects)\n    {\n        let advanced = false;\n\n        const renderGroup = target.renderGroup || target.parentRenderGroup;\n\n        for (let i = 0; i < target.effects.length; i++)\n        {\n            if (target.effects[i].addBounds)\n            {\n                if (!advanced)\n                {\n                    advanced = true;\n                    localBounds.applyMatrix(renderGroup.worldTransform);\n                }\n\n                target.effects[i].addBounds(localBounds, true);\n            }\n        }\n\n        if (advanced)\n        {\n            localBounds.applyMatrix(renderGroup.worldTransform.copyTo(tempMatrix).invert());\n            bounds.addBounds(localBounds, target.relativeGroupTransform);\n        }\n\n        bounds.addBounds(localBounds);\n        boundsPool.return(localBounds);\n    }\n    else if (target.renderGroup)\n    {\n        bounds.addBounds(localBounds, target.relativeGroupTransform);\n        boundsPool.return(localBounds);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13218, "column": 0}, "map": {"version":3,"file":"getRenderableBounds.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/bounds/getRenderableBounds.ts"],"sourcesContent":["import type { Renderable } from '../../../rendering/renderers/shared/Renderable';\nimport type { Bounds } from './Bounds';\n\nexport function getGlobalRenderableBounds(renderables: Renderable[], bounds: Bounds): Bounds\n{\n    bounds.clear();\n\n    // instead of copying the matrix each time we are assigning it in bounds\n    // this is a performance hack :D\n    // so we need to restore the matrix after we are done\n\n    const tempMatrix = bounds.matrix;\n\n    for (let i = 0; i < renderables.length; i++)\n    {\n        const renderable = renderables[i];\n\n        if (renderable.globalDisplayStatus < 0b111)\n        {\n            continue;\n        }\n\n        bounds.matrix = renderable.worldTransform;\n        bounds.addBounds(renderable.bounds);\n    }\n\n    bounds.matrix = tempMatrix;\n\n    return bounds;\n}\n"],"names":[],"mappings":";;;;AAGgB,SAAA,yBAAA,CAA0B,WAAA,EAA2B,MACrE,EAAA;IACI,MAAA,CAAO,KAAM,EAAA,CAAA;IAMb,MAAM,aAAa,MAAO,CAAA,MAAA,CAAA;IAE1B,IAAA,IAAS,CAAI,GAAA,CAAA,EAAG,CAAI,GAAA,WAAA,CAAY,MAAA,EAAQ,CACxC,EAAA,CAAA;QACU,MAAA,UAAA,GAAa,WAAA,CAAY,CAAC,CAAA,CAAA;QAE5B,IAAA,UAAA,CAAW,mBAAA,GAAsB,CACrC,EAAA;YACI,SAAA;QAAA,CACJ;QAEA,MAAA,CAAO,MAAA,GAAS,UAAW,CAAA,cAAA,CAAA;QACpB,MAAA,CAAA,SAAA,CAAU,WAAW,MAAM,CAAA,CAAA;IAAA,CACtC;IAEA,MAAA,CAAO,MAAS,GAAA,UAAA,CAAA;IAET,OAAA,MAAA,CAAA;AACX","ignoreList":[0]}},
    {"offset": {"line": 13238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13244, "column": 0}, "map": {"version":3,"file":"types.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/rendering/renderers/types.ts"],"sourcesContent":["import type { ICanvas } from '../../environment/canvas/ICanvas';\nimport type { WebGLOptions, WebGLPipes, WebGLRenderer } from './gl/WebGLRenderer';\nimport type { WebGPUOptions, WebGPUPipes, WebGPURenderer } from './gpu/WebGPURenderer';\n\n/** A generic renderer. */\n/**\n * @memberof rendering\n * @extends rendering.WebGLRenderer\n * @extends rendering.WebGPURenderer\n */\nexport type Renderer<T extends ICanvas = HTMLCanvasElement> = WebGLRenderer<T> | WebGPURenderer<T>;\nexport type RenderPipes = WebGLPipes | WebGPUPipes;\n/**\n * @extends rendering.WebGLOptions\n * @extends rendering.WebGPUOptions\n */\nexport interface RendererOptions extends WebGLOptions, WebGPUOptions {}\n\n/**\n * Ids for the different render types.\n * The idea is that you can use bitwise operations to filter whether or not you want to do something\n * in a certain render type.\n * Filters for example can be compatible for both webGL or WebGPU but not compatible with canvas.\n * So internally if it works with both we set filter.compatibleRenderers = RendererType.WEBGL | RendererType.WEBGPU\n * if it only works with webgl we set filter.compatibleRenderers = RendererType.WEBGL\n *\n */\nexport enum RendererType\n{\n    WEBGL = 0b01,\n    WEBGPU = 0b10,\n    BOTH = 0b11\n}\n\nexport type GpuPowerPreference = 'low-power' | 'high-performance';\n"],"names":["RendererType"],"mappings":";;;;AA2BY,IAAA,YAAA,GAAA,aAAA,GAAA,CAAA,CAAAA,aAAL,KAAA;IAEHA,aAAAA,CAAAA,aAAAA,CAAA,QAAA,GAAQ,CAAR,CAAA,GAAA,OAAA,CAAA;IACAA,aAAAA,CAAAA,aAAAA,CAAA,SAAA,GAAS,CAAT,CAAA,GAAA,QAAA,CAAA;IACAA,aAAAA,CAAAA,aAAAA,CAAA,OAAA,GAAO,CAAP,CAAA,GAAA,MAAA,CAAA;IAJQA,OAAAA,aAAAA,CAAAA;AAAA,CAAA,EAAA,YAAA,IAAA,CAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 13256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13262, "column": 0}, "map": {"version":3,"file":"Bounds.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/scene/container/bounds/Bounds.ts"],"sourcesContent":["import { Matrix } from '../../../maths/matrix/Matrix';\nimport { Rectangle } from '../../../maths/shapes/Rectangle';\n\n/**\n * Simple bounds implementation instead of more ambiguous [number, number, number, number]\n * @memberof rendering\n */\nexport interface BoundsData\n{\n    minX: number;\n    minY: number;\n    maxX: number;\n    maxY: number;\n}\n\nconst defaultMatrix = new Matrix();\n\n// TODO optimisations\n// 1 - get rectangle could use a dirty flag, rather than setting the data each time is called\n// 2- getFrame ALWAYS assumes a matrix, could be optimised to avoid the matrix calculation if not needed\n\n/**\n * A representation of an AABB bounding box.\n * @memberof rendering\n */\nexport class Bounds\n{\n    /** @default Infinity */\n    public minX = Infinity;\n\n    /** @default Infinity */\n    public minY = Infinity;\n\n    /** @default -Infinity */\n    public maxX = -Infinity;\n\n    /** @default -Infinity */\n    public maxY = -Infinity;\n\n    public matrix = defaultMatrix;\n\n    private _rectangle: Rectangle;\n\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity)\n    {\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Checks if bounds are empty.\n     * @returns - True if empty.\n     */\n    public isEmpty(): boolean\n    {\n        return this.minX > this.maxX || this.minY > this.maxY;\n    }\n\n    /** The bounding rectangle of the bounds. */\n    get rectangle(): Rectangle\n    {\n        if (!this._rectangle)\n        {\n            this._rectangle = new Rectangle();\n        }\n\n        const rectangle = this._rectangle;\n\n        if (this.minX > this.maxX || this.minY > this.maxY)\n        {\n            rectangle.x = 0;\n            rectangle.y = 0;\n            rectangle.width = 0;\n            rectangle.height = 0;\n        }\n        else\n        {\n            rectangle.copyFromBounds(this);\n        }\n\n        return rectangle;\n    }\n\n    /** Clears the bounds and resets. */\n    public clear(): this\n    {\n        this.minX = Infinity;\n        this.minY = Infinity;\n        this.maxX = -Infinity;\n        this.maxY = -Infinity;\n\n        this.matrix = defaultMatrix;\n\n        return this;\n    }\n\n    /**\n     * Sets the bounds.\n     * @param x0 - left X of frame\n     * @param y0 - top Y of frame\n     * @param x1 - right X of frame\n     * @param y1 - bottom Y of frame\n     */\n    public set(x0: number, y0: number, x1: number, y1: number)\n    {\n        this.minX = x0;\n        this.minY = y0;\n        this.maxX = x1;\n        this.maxY = y1;\n    }\n\n    /**\n     * Adds sprite frame\n     * @param x0 - left X of frame\n     * @param y0 - top Y of frame\n     * @param x1 - right X of frame\n     * @param y1 - bottom Y of frame\n     * @param matrix\n     */\n    public addFrame(x0: number, y0: number, x1: number, y1: number, matrix?: Matrix): void\n    {\n        matrix ||= this.matrix;\n\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        let x = (a * x0) + (c * y0) + tx;\n        let y = (b * x0) + (d * y0) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        x = (a * x1) + (c * y0) + tx;\n        y = (b * x1) + (d * y0) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        x = (a * x0) + (c * y1) + tx;\n        y = (b * x0) + (d * y1) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        x = (a * x1) + (c * y1) + tx;\n        y = (b * x1) + (d * y1) + ty;\n\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Adds a rectangle to the bounds.\n     * @param rect - The rectangle to be added.\n     * @param matrix - The matrix to apply to the bounds.\n     */\n    public addRect(rect: Rectangle, matrix?: Matrix)\n    {\n        this.addFrame(rect.x, rect.y, rect.x + rect.width, rect.y + rect.height, matrix);\n    }\n\n    /**\n     * Adds other {@link Bounds}.\n     * @param bounds - The Bounds to be added\n     * @param matrix\n     */\n    public addBounds(bounds: BoundsData, matrix?: Matrix)\n    {\n        this.addFrame(bounds.minX, bounds.minY, bounds.maxX, bounds.maxY, matrix);\n    }\n\n    /**\n     * Adds other Bounds, masked with Bounds.\n     * @param mask - The Bounds to be added.\n     */\n    public addBoundsMask(mask: Bounds): void\n    {\n        this.minX = this.minX > mask.minX ? this.minX : mask.minX;\n        this.minY = this.minY > mask.minY ? this.minY : mask.minY;\n        this.maxX = this.maxX < mask.maxX ? this.maxX : mask.maxX;\n        this.maxY = this.maxY < mask.maxY ? this.maxY : mask.maxY;\n    }\n\n    /**\n     * Adds other Bounds, multiplied with matrix.\n     * @param matrix - The matrix to apply to the bounds.\n     */\n    public applyMatrix(matrix: Matrix): void\n    {\n        const minX = this.minX;\n        const minY = this.minY;\n        const maxX = this.maxX;\n        const maxY = this.maxY;\n\n        // multiple bounds by matrix\n        const { a, b, c, d, tx, ty } = matrix;\n\n        let x = (a * minX) + (c * minY) + tx;\n        let y = (b * minX) + (d * minY) + ty;\n\n        this.minX = x;\n        this.minY = y;\n        this.maxX = x;\n        this.maxY = y;\n\n        x = (a * maxX) + (c * minY) + tx;\n        y = (b * maxX) + (d * minY) + ty;\n        this.minX = x < this.minX ? x : this.minX;\n        this.minY = y < this.minY ? y : this.minY;\n        this.maxX = x > this.maxX ? x : this.maxX;\n        this.maxY = y > this.maxY ? y : this.maxY;\n\n        x = (a * minX) + (c * maxY) + tx;\n        y = (b * minX) + (d * maxY) + ty;\n        this.minX = x < this.minX ? x : this.minX;\n        this.minY = y < this.minY ? y : this.minY;\n        this.maxX = x > this.maxX ? x : this.maxX;\n        this.maxY = y > this.maxY ? y : this.maxY;\n\n        x = (a * maxX) + (c * maxY) + tx;\n        y = (b * maxX) + (d * maxY) + ty;\n        this.minX = x < this.minX ? x : this.minX;\n        this.minY = y < this.minY ? y : this.minY;\n        this.maxX = x > this.maxX ? x : this.maxX;\n        this.maxY = y > this.maxY ? y : this.maxY;\n    }\n\n    /**\n     * Resizes the bounds object to include the given rectangle.\n     * @param rect - The rectangle to be included.\n     */\n    public fit(rect: Rectangle): this\n    {\n        if (this.minX < rect.left) this.minX = rect.left;\n        if (this.maxX > rect.right) this.maxX = rect.right;\n\n        if (this.minY < rect.top) this.minY = rect.top;\n        if (this.maxY > rect.bottom) this.maxY = rect.bottom;\n\n        return this;\n    }\n\n    /**\n     * Resizes the bounds object to include the given bounds.\n     * @param left - The left value of the bounds.\n     * @param right - The right value of the bounds.\n     * @param top - The top value of the bounds.\n     * @param bottom - The bottom value of the bounds.\n     */\n    public fitBounds(left: number, right: number, top: number, bottom: number): this\n    {\n        if (this.minX < left) this.minX = left;\n        if (this.maxX > right) this.maxX = right;\n\n        if (this.minY < top) this.minY = top;\n        if (this.maxY > bottom) this.maxY = bottom;\n\n        return this;\n    }\n\n    /**\n     * Pads bounds object, making it grow in all directions.\n     * If paddingY is omitted, both paddingX and paddingY will be set to paddingX.\n     * @param paddingX - The horizontal padding amount.\n     * @param paddingY - The vertical padding amount.\n     */\n    public pad(paddingX: number, paddingY: number = paddingX): this\n    {\n        this.minX -= paddingX;\n        this.maxX += paddingX;\n\n        this.minY -= paddingY;\n        this.maxY += paddingY;\n\n        return this;\n    }\n\n    /** Ceils the bounds. */\n    public ceil(): this\n    {\n        this.minX = Math.floor(this.minX);\n        this.minY = Math.floor(this.minY);\n        this.maxX = Math.ceil(this.maxX);\n        this.maxY = Math.ceil(this.maxY);\n\n        return this;\n    }\n\n    /** Clones the bounds. */\n    public clone(): Bounds\n    {\n        return new Bounds(this.minX, this.minY, this.maxX, this.maxY);\n    }\n\n    /**\n     * Scales the bounds by the given values\n     * @param x - The X value to scale by.\n     * @param y - The Y value to scale by.\n     */\n    public scale(x: number, y: number = x): this\n    {\n        this.minX *= x;\n        this.minY *= y;\n        this.maxX *= x;\n        this.maxY *= y;\n\n        return this;\n    }\n\n    /** the x value of the bounds. */\n    get x(): number\n    {\n        return this.minX;\n    }\n    set x(value: number)\n    {\n        const width = this.maxX - this.minX;\n\n        this.minX = value;\n        this.maxX = value + width;\n    }\n\n    /** the y value of the bounds. */\n    get y(): number\n    {\n        return this.minY;\n    }\n\n    set y(value: number)\n    {\n        const height = this.maxY - this.minY;\n\n        this.minY = value;\n        this.maxY = value + height;\n    }\n\n    /** the width value of the bounds. */\n    get width(): number\n    {\n        return this.maxX - this.minX;\n    }\n\n    set width(value: number)\n    {\n        this.maxX = this.minX + value;\n    }\n\n    /** the height value of the bounds. */\n    get height(): number\n    {\n        return this.maxY - this.minY;\n    }\n\n    set height(value: number)\n    {\n        this.maxY = this.minY + value;\n    }\n\n    /** the left value of the bounds. */\n    get left(): number\n    {\n        return this.minX;\n    }\n\n    /** the right value of the bounds. */\n    get right(): number\n    {\n        return this.maxX;\n    }\n\n    /** the top value of the bounds. */\n    get top(): number\n    {\n        return this.minY;\n    }\n\n    /** the bottom value of the bounds. */\n    get bottom(): number\n    {\n        return this.maxY;\n    }\n\n    /** Is the bounds positive. */\n    get isPositive(): boolean\n    {\n        return (this.maxX - this.minX > 0) && (this.maxY - this.minY > 0);\n    }\n\n    get isValid(): boolean\n    {\n        return (this.minX + this.minY !== Infinity);\n    }\n\n    /**\n     * Adds screen vertices from array\n     * @param vertexData - calculated vertices\n     * @param beginOffset - begin offset\n     * @param endOffset - end offset, excluded\n     * @param matrix\n     */\n    public addVertexData(vertexData: Float32Array, beginOffset: number, endOffset: number, matrix?: Matrix): void\n    {\n        let minX = this.minX;\n        let minY = this.minY;\n        let maxX = this.maxX;\n        let maxY = this.maxY;\n\n        matrix ||= this.matrix;\n\n        const a = matrix.a;\n        const b = matrix.b;\n        const c = matrix.c;\n        const d = matrix.d;\n        const tx = matrix.tx;\n        const ty = matrix.ty;\n\n        for (let i = beginOffset; i < endOffset; i += 2)\n        {\n            const localX = vertexData[i];\n            const localY = vertexData[i + 1];\n\n            const x = (a * localX) + (c * localY) + tx;\n            const y = (b * localX) + (d * localY) + ty;\n\n            minX = x < minX ? x : minX;\n            minY = y < minY ? y : minY;\n            maxX = x > maxX ? x : maxX;\n            maxY = y > maxY ? y : maxY;\n        }\n\n        this.minX = minX;\n        this.minY = minY;\n        this.maxX = maxX;\n        this.maxY = maxY;\n    }\n\n    /**\n     * Checks if the point is contained within the bounds.\n     * @param x - x coordinate\n     * @param y - y coordinate\n     */\n    public containsPoint(x: number, y: number): boolean\n    {\n        if (this.minX <= x && this.minY <= y && this.maxX >= x && this.maxY >= y)\n        {\n            return true;\n        }\n\n        return false;\n    }\n\n    public toString(): string\n    {\n        // eslint-disable-next-line max-len\n        return `[pixi.js:Bounds minX=${this.minX} minY=${this.minY} maxX=${this.maxX} maxY=${this.maxY} width=${this.width} height=${this.height}]`;\n    }\n\n    /**\n     * Copies the bounds from another bounds object.\n     * @param bounds - The bounds to copy from.\n     * @returns - This bounds object.\n     */\n    public copyFrom(bounds: Bounds): this\n    {\n        this.minX = bounds.minX;\n        this.minY = bounds.minY;\n        this.maxX = bounds.maxX;\n        this.maxY = bounds.maxY;\n\n        return this;\n    }\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13597, "column": 0}, "map": {"version":3,"file":"FilterSystem.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/filters/FilterSystem.ts"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions';\nimport { Matrix } from '../maths/matrix/Matrix';\nimport { Point } from '../maths/point/Point';\nimport { BindGroup } from '../rendering/renderers/gpu/shader/BindGroup';\nimport { Geometry } from '../rendering/renderers/shared/geometry/Geometry';\nimport { UniformGroup } from '../rendering/renderers/shared/shader/UniformGroup';\nimport { Texture } from '../rendering/renderers/shared/texture/Texture';\nimport { TexturePool } from '../rendering/renderers/shared/texture/TexturePool';\nimport { type Renderer, RendererType } from '../rendering/renderers/types';\nimport { Bounds } from '../scene/container/bounds/Bounds';\nimport { getFastGlobalBounds } from '../scene/container/bounds/getFastGlobalBounds';\nimport { getGlobalRenderableBounds } from '../scene/container/bounds/getRenderableBounds';\nimport { warn } from '../utils/logging/warn';\n\nimport type { WebGLRenderer } from '../rendering/renderers/gl/WebGLRenderer';\nimport type { WebGPURenderer } from '../rendering/renderers/gpu/WebGPURenderer';\nimport type { Instruction } from '../rendering/renderers/shared/instructions/Instruction';\nimport type { Renderable } from '../rendering/renderers/shared/Renderable';\nimport type { RenderTarget } from '../rendering/renderers/shared/renderTarget/RenderTarget';\nimport type { RenderSurface } from '../rendering/renderers/shared/renderTarget/RenderTargetSystem';\nimport type { System } from '../rendering/renderers/shared/system/System';\nimport type { Container } from '../scene/container/Container';\nimport type { Sprite } from '../scene/sprite/Sprite';\nimport type { Filter } from './Filter';\nimport type { FilterEffect } from './FilterEffect';\n\ntype FilterAction = 'pushFilter' | 'popFilter';\n\n//\nconst quadGeometry = new Geometry({\n    attributes: {\n        aPosition: {\n            buffer: new Float32Array([0, 0, 1, 0, 1, 1, 0, 1]),\n            format: 'float32x2',\n            stride: 2 * 4,\n            offset: 0,\n        },\n    },\n    indexBuffer: new Uint32Array([0, 1, 2, 0, 2, 3]),\n});\n\n/**\n * The filter pipeline is responsible for applying filters scene items!\n *\n * KNOWN BUGS:\n * 1. Global bounds calculation is incorrect if it is used when flip flopping filters. The maths can be found below\n * eg: filters [noiseFilter, blurFilter] noiseFilter will calculate the global bounds incorrectly.\n *\n * 2. RenderGroups do not work with filters. This is because the renderGroup matrix is not currently taken into account.\n *\n * Implementation notes:\n * 1. Gotcha - nesting filters that require blending will not work correctly. This creates a chicken and egg problem\n * the complexity and performance required to do this is not worth it i feel.. but lets see if others agree!\n *\n * 2. Filters are designed to be changed on the fly, this is means that changing filter information each frame will\n * not trigger an instruction rebuild. If you are constantly turning a filter on and off.. its therefore better to set\n * enabled to true or false on the filter. Or setting an empty array.\n *\n * 3. Need to look at perhaps aliasing when flip flopping filters. Really we should only need to antialias the FIRST\n * Texture we render too. The rest can be non aliased. This might help performance.\n * Currently we flip flop with an antialiased texture if antialiasing is enabled on the filter.\n */\nexport interface FilterInstruction extends Instruction\n{\n    renderPipeId: 'filter',\n    action: FilterAction,\n    container?: Container,\n    renderables?: Renderable[],\n    filterEffect: FilterEffect,\n}\n\nexport interface FilterData\n{\n    skip: boolean;\n    enabledLength?: number;\n    inputTexture: Texture\n    bounds: Bounds,\n    blendRequired: boolean,\n    container: Container,\n    filterEffect: FilterEffect,\n    previousRenderSurface: RenderSurface,\n    backTexture?: Texture,\n}\n\n/**\n * System that manages the filter pipeline\n * @memberof rendering\n */\nexport class FilterSystem implements System\n{\n    /** @ignore */\n    public static extension = {\n        type: [\n            ExtensionType.WebGLSystem,\n            ExtensionType.WebGPUSystem,\n        ],\n        name: 'filter',\n    } as const;\n\n    public readonly renderer: Renderer;\n\n    private _filterStackIndex = 0;\n    private _filterStack: FilterData[] = [];\n\n    private readonly _filterGlobalUniforms = new UniformGroup({\n        uInputSize: { value: new Float32Array(4), type: 'vec4<f32>' },\n        uInputPixel: { value: new Float32Array(4), type: 'vec4<f32>' },\n        uInputClamp: { value: new Float32Array(4), type: 'vec4<f32>' },\n        uOutputFrame: { value: new Float32Array(4), type: 'vec4<f32>' },\n        uGlobalFrame: { value: new Float32Array(4), type: 'vec4<f32>' },\n        uOutputTexture: { value: new Float32Array(4), type: 'vec4<f32>' },\n    });\n\n    private readonly _globalFilterBindGroup: BindGroup = new BindGroup({});\n    private _activeFilterData: FilterData;\n\n    constructor(renderer: Renderer)\n    {\n        this.renderer = renderer;\n    }\n\n    /**\n     * The back texture of the currently active filter. Requires the filter to have `blendRequired` set to true.\n     * @readonly\n     */\n    public get activeBackTexture(): Texture | undefined\n    {\n        return this._activeFilterData?.backTexture;\n    }\n\n    public push(instruction: FilterInstruction)\n    {\n        const renderer = this.renderer;\n\n        const filters = instruction.filterEffect.filters;\n\n        if (!this._filterStack[this._filterStackIndex])\n        {\n            this._filterStack[this._filterStackIndex] = this._getFilterData();\n        }\n\n        // get a filter data from the stack. They can be reused multiple times each frame,\n        // so we don't need to worry about overwriting them in a single pass.\n        const filterData = this._filterStack[this._filterStackIndex];\n\n        this._filterStackIndex++;\n\n        // if there are no filters, we skip the pass\n        if (filters.length === 0)\n        {\n            filterData.skip = true;\n\n            return;\n        }\n\n        const bounds: Bounds = filterData.bounds;\n\n        // this path is used by the blend modes mostly!\n        // they collect all renderables and push them into a list.\n        // this list is then used to calculate the bounds of the filter area\n        if (instruction.renderables)\n        {\n            getGlobalRenderableBounds(instruction.renderables, bounds);\n        }\n        // if a filterArea is provided, we save our selves some measuring and just use that area supplied\n        else if (instruction.filterEffect.filterArea)\n        {\n            bounds.clear();\n\n            // transform the filterArea into global space..\n            bounds.addRect(instruction.filterEffect.filterArea);\n\n            // new for v8, we transform the bounds into the space of the container\n            bounds.applyMatrix(instruction.container.worldTransform);\n        }\n        // classic filter path, we get the bounds of the container and use it by recursively\n        // measuring.\n        else\n        {\n            getFastGlobalBounds(instruction.container, bounds);\n        }\n\n        if (instruction.container)\n        {\n            // When a container is cached as a texture, its filters need to be applied relative to its\n            // cached parent's coordinate space rather than world space. This transform adjustment ensures\n            // filters are applied in the correct coordinate system.\n            const renderGroup = instruction.container.renderGroup || instruction.container.parentRenderGroup;\n            const filterFrameTransform = renderGroup.cacheToLocalTransform;\n\n            if (filterFrameTransform)\n            {\n                bounds.applyMatrix(filterFrameTransform);\n            }\n        }\n\n        // get GLOBAL bounds of the item we are going to apply the filter to\n\n        const colorTextureSource = renderer.renderTarget.renderTarget.colorTexture.source;\n\n        // next we get the settings for the filter\n        // we need to find the LOWEST resolution for the filter list\n        let resolution = Infinity;\n        // Padding is additive to add padding to our padding\n        let padding = 0;\n        // if this is true for all filter, it should be true, and otherwise false\n        let antialias = true;\n        // true if any filter requires the previous render target\n        let blendRequired = false;\n        // true if any filter in the list is enabled\n        let enabled = false;\n        // false if any filter in the list has false\n        let clipToViewport = true;\n\n        for (let i = 0; i < filters.length; i++)\n        {\n            const filter = filters[i];\n\n            resolution = Math.min(resolution, filter.resolution === 'inherit'\n                ? colorTextureSource._resolution : filter.resolution);\n            padding += filter.padding;\n\n            if (filter.antialias === 'off')\n            {\n                antialias = false;\n            }\n            else if (filter.antialias === 'inherit')\n            {\n                antialias &&= colorTextureSource.antialias;\n            }\n\n            if (!filter.clipToViewport)\n            {\n                clipToViewport = false;\n            }\n\n            const isCompatible = !!(filter.compatibleRenderers & renderer.type);\n\n            if (!isCompatible)\n            {\n                enabled = false;\n                break;\n            }\n\n            if (filter.blendRequired && !((renderer as WebGLRenderer).backBuffer?.useBackBuffer ?? true))\n            {\n                // #if _DEBUG\n                // eslint-disable-next-line max-len\n                warn('Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options.');\n                // #endif\n\n                enabled = false;\n                break;\n            }\n\n            enabled = filter.enabled || enabled;\n            blendRequired ||= filter.blendRequired;\n        }\n\n        // if no filters are enabled lets skip!\n        if (!enabled)\n        {\n            filterData.skip = true;\n\n            return;\n        }\n\n        // here we constrain the bounds to the viewport we will render too\n        // this should not take into account the x, y offset of the viewport - as this is\n        // handled by the viewport on the gpu.\n        if (clipToViewport)\n        {\n            const viewPort = renderer.renderTarget.rootViewPort;\n\n            const rootResolution = renderer.renderTarget.renderTarget.resolution;\n\n            bounds.fitBounds(0, viewPort.width / rootResolution, 0, viewPort.height / rootResolution);\n        }\n\n        // round the bounds to the nearest pixel\n        bounds\n            .scale(resolution)\n            .ceil()\n            .scale(1 / resolution)\n            .pad(padding | 0);\n\n        // skip if the bounds are negative or zero as this means they are\n        // not visible on the screen\n        if (!bounds.isPositive)\n        {\n            filterData.skip = true;\n\n            return;\n        }\n\n        // set all the filter data\n        filterData.skip = false;\n\n        filterData.bounds = bounds;\n        filterData.blendRequired = blendRequired;\n        filterData.container = instruction.container;\n        filterData.filterEffect = instruction.filterEffect;\n\n        filterData.previousRenderSurface = renderer.renderTarget.renderSurface;\n\n        // bind...\n        // get a P02 texture from our pool...\n        filterData.inputTexture = TexturePool.getOptimalTexture(\n            bounds.width,\n            bounds.height,\n            resolution,\n            antialias,\n        );\n\n        renderer.renderTarget.bind(filterData.inputTexture, true);\n        // set the global uniforms to take into account the bounds offset required\n\n        renderer.globalUniforms.push({\n            offset: bounds,\n        });\n    }\n\n    public pop()\n    {\n        const renderer = this.renderer;\n\n        this._filterStackIndex--;\n        const filterData = this._filterStack[this._filterStackIndex];\n\n        // if we are skipping this filter then we just do nothing :D\n        if (filterData.skip)\n        {\n            return;\n        }\n\n        this._activeFilterData = filterData;\n\n        const inputTexture = filterData.inputTexture;\n\n        const bounds = filterData.bounds;\n\n        let backTexture = Texture.EMPTY;\n\n        renderer.renderTarget.finishRenderPass();\n\n        if (filterData.blendRequired)\n        {\n            // this actually forces the current commandQueue to render everything so far.\n            // if we don't do this, we won't be able to copy pixels for the background\n            const previousBounds = this._filterStackIndex > 0 ? this._filterStack[this._filterStackIndex - 1].bounds : null;\n\n            const renderTarget = renderer.renderTarget.getRenderTarget(filterData.previousRenderSurface);\n\n            backTexture = this.getBackTexture(renderTarget, bounds, previousBounds);\n        }\n\n        filterData.backTexture = backTexture;\n\n        const filters = filterData.filterEffect.filters;\n\n        // get a BufferResource from the uniformBatch.\n        // this will batch the shader uniform data and give us a buffer resource we can\n        // set on our globalUniform Bind Group\n\n        // update the resources on the bind group...\n        this._globalFilterBindGroup.setResource(inputTexture.source.style, 2);\n        this._globalFilterBindGroup.setResource(backTexture.source, 3);\n\n        renderer.globalUniforms.pop();\n\n        if (filters.length === 1)\n        {\n            // render a single filter...\n            // this.applyFilter(filters[0], inputTexture, filterData.previousRenderSurface, false);\n            filters[0].apply(this, inputTexture, filterData.previousRenderSurface, false);\n\n            // return the texture to the pool so we can reuse the next frame\n            TexturePool.returnTexture(inputTexture);\n        }\n        else\n        {\n            let flip = filterData.inputTexture;\n\n            // get another texture that we will render the next filter too\n            let flop = TexturePool.getOptimalTexture(\n                bounds.width,\n                bounds.height,\n                flip.source._resolution,\n                false\n            );\n\n            let i = 0;\n\n            // loop and apply the filters, omitting the last one as we will render that to the final target\n            for (i = 0; i < filters.length - 1; ++i)\n            {\n                const filter = filters[i];\n\n                filter.apply(this, flip, flop, true);\n                const t = flip;\n\n                flip = flop;\n                flop = t;\n            }\n\n            filters[i].apply(this, flip, filterData.previousRenderSurface, false);\n\n            // return those textures for later!\n            TexturePool.returnTexture(flip);\n            TexturePool.returnTexture(flop);\n        }\n\n        // if we made a background texture, lets return that also\n        if (filterData.blendRequired)\n        {\n            TexturePool.returnTexture(backTexture);\n        }\n    }\n\n    public getBackTexture(lastRenderSurface: RenderTarget, bounds: Bounds, previousBounds?: Bounds)\n    {\n        const backgroundResolution = lastRenderSurface.colorTexture.source._resolution;\n\n        const backTexture = TexturePool.getOptimalTexture(\n            bounds.width,\n            bounds.height,\n            backgroundResolution,\n            false,\n        );\n\n        let x = bounds.minX;\n        let y = bounds.minY;\n\n        if (previousBounds)\n        {\n            x -= previousBounds.minX;\n            y -= previousBounds.minY;\n        }\n\n        x = Math.floor(x * backgroundResolution);\n        y = Math.floor(y * backgroundResolution);\n\n        const width = Math.ceil(bounds.width * backgroundResolution);\n        const height = Math.ceil(bounds.height * backgroundResolution);\n\n        this.renderer.renderTarget.copyToTexture(\n            lastRenderSurface,\n            backTexture,\n            { x, y },\n            { width, height },\n            { x: 0, y: 0 }\n        );\n\n        return backTexture;\n    }\n\n    public applyFilter(filter: Filter, input: Texture, output: RenderSurface, clear: boolean)\n    {\n        const renderer = this.renderer;\n\n        const filterData = this._filterStack[this._filterStackIndex];\n\n        const bounds = filterData.bounds;\n\n        const offset = Point.shared;\n        const previousRenderSurface = filterData.previousRenderSurface;\n\n        const isFinalTarget = previousRenderSurface === output;\n\n        let resolution = this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution;\n\n        // to find the previous resolution we need to account for the skipped filters\n        // the following will find the last non skipped filter...\n        let currentIndex = this._filterStackIndex - 1;\n\n        while (currentIndex > 0 && this._filterStack[currentIndex].skip)\n        {\n            --currentIndex;\n        }\n\n        if (currentIndex > 0)\n        {\n            resolution = this._filterStack[currentIndex].inputTexture.source._resolution;\n        }\n\n        const filterUniforms = this._filterGlobalUniforms;\n        const uniforms = filterUniforms.uniforms;\n\n        const outputFrame = uniforms.uOutputFrame;\n        const inputSize = uniforms.uInputSize;\n        const inputPixel = uniforms.uInputPixel;\n        const inputClamp = uniforms.uInputClamp;\n        const globalFrame = uniforms.uGlobalFrame;\n        const outputTexture = uniforms.uOutputTexture;\n\n        // are we rendering back to the original surface?\n        if (isFinalTarget)\n        {\n            let lastIndex = this._filterStackIndex;\n\n            // get previous bounds.. we must take into account skipped filters also..\n            while (lastIndex > 0)\n            {\n                lastIndex--;\n                const filterData = this._filterStack[this._filterStackIndex - 1];\n\n                if (!filterData.skip)\n                {\n                    offset.x = filterData.bounds.minX;\n                    offset.y = filterData.bounds.minY;\n\n                    break;\n                }\n            }\n\n            outputFrame[0] = bounds.minX - offset.x;\n            outputFrame[1] = bounds.minY - offset.y;\n        }\n        else\n        {\n            outputFrame[0] = 0;\n            outputFrame[1] = 0;\n        }\n\n        outputFrame[2] = input.frame.width;\n        outputFrame[3] = input.frame.height;\n\n        inputSize[0] = input.source.width;\n        inputSize[1] = input.source.height;\n        inputSize[2] = 1 / inputSize[0];\n        inputSize[3] = 1 / inputSize[1];\n\n        inputPixel[0] = input.source.pixelWidth;\n        inputPixel[1] = input.source.pixelHeight;\n        inputPixel[2] = 1.0 / inputPixel[0];\n        inputPixel[3] = 1.0 / inputPixel[1];\n\n        inputClamp[0] = 0.5 * inputPixel[2];\n        inputClamp[1] = 0.5 * inputPixel[3];\n        inputClamp[2] = (input.frame.width * inputSize[2]) - (0.5 * inputPixel[2]);\n        inputClamp[3] = (input.frame.height * inputSize[3]) - (0.5 * inputPixel[3]);\n\n        const rootTexture = this.renderer.renderTarget.rootRenderTarget.colorTexture;\n\n        globalFrame[0] = offset.x * resolution;\n        globalFrame[1] = offset.y * resolution;\n\n        globalFrame[2] = rootTexture.source.width * resolution;\n        globalFrame[3] = rootTexture.source.height * resolution;\n\n        // set the output texture - this is where we are going to render to\n\n        const renderTarget = this.renderer.renderTarget.getRenderTarget(output);\n\n        renderer.renderTarget.bind(output, !!clear);\n\n        if (output instanceof Texture)\n        {\n            outputTexture[0] = output.frame.width;\n            outputTexture[1] = output.frame.height;\n        }\n        else\n        {\n            // this means a renderTarget was passed directly\n            outputTexture[0] = renderTarget.width;\n            outputTexture[1] = renderTarget.height;\n        }\n\n        outputTexture[2] = renderTarget.isRoot ? -1 : 1;\n        filterUniforms.update();\n\n        // TODO - should prolly use a adaptor...\n        if ((renderer as WebGPURenderer).renderPipes.uniformBatch)\n        {\n            const batchUniforms = (renderer as WebGPURenderer).renderPipes.uniformBatch\n                .getUboResource(filterUniforms);\n\n            this._globalFilterBindGroup.setResource(batchUniforms, 0);\n        }\n        else\n        {\n            this._globalFilterBindGroup.setResource(filterUniforms, 0);\n        }\n\n        // now lets update the output texture...\n\n        // set bind group..\n        this._globalFilterBindGroup.setResource(input.source, 1);\n        this._globalFilterBindGroup.setResource(input.source.style, 2);\n\n        filter.groups[0] = this._globalFilterBindGroup;\n\n        renderer.encoder.draw({\n            geometry: quadGeometry,\n            shader: filter,\n            state: filter._state,\n            topology: 'triangle-list'\n        });\n\n        // WebGPU blit's automatically, but WebGL does not!\n        if (renderer.type === RendererType.WEBGL)\n        {\n            renderer.renderTarget.finishRenderPass();\n        }\n    }\n\n    private _getFilterData(): FilterData\n    {\n        return {\n            skip: false,\n            inputTexture: null,\n            bounds: new Bounds(),\n            container: null,\n            filterEffect: null,\n            blendRequired: false,\n            previousRenderSurface: null,\n        };\n    }\n\n    /**\n     * Multiply _input normalized coordinates_ to this matrix to get _sprite texture normalized coordinates_.\n     *\n     * Use `outputMatrix * vTextureCoord` in the shader.\n     * @param outputMatrix - The matrix to output to.\n     * @param {Sprite} sprite - The sprite to map to.\n     * @returns The mapped matrix.\n     */\n    public calculateSpriteMatrix(outputMatrix: Matrix, sprite: Sprite): Matrix\n    {\n        const data = this._activeFilterData;\n\n        const mappedMatrix = outputMatrix.set(\n            data.inputTexture._source.width,\n            0, 0,\n            data.inputTexture._source.height,\n            data.bounds.minX, data.bounds.minY\n        );\n\n        const worldTransform = sprite.worldTransform.copyTo(Matrix.shared);\n\n        const renderGroup = sprite.renderGroup || sprite.parentRenderGroup;\n\n        if (renderGroup && renderGroup.cacheToLocalTransform)\n        {\n            // get the matrix relative to the render group..\n            worldTransform.prepend(renderGroup.cacheToLocalTransform);\n        }\n\n        worldTransform.invert();\n        mappedMatrix.prepend(worldTransform);\n        mappedMatrix.scale(\n            1.0 / sprite.texture.frame.width,\n            1.0 / sprite.texture.frame.height\n        );\n\n        mappedMatrix.translate(sprite.anchor.x, sprite.anchor.y);\n\n        return mappedMatrix;\n    }\n\n    public destroy?: () => void;\n}\n"],"names":["filterData"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 13980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 13986, "column": 0}, "map": {"version":3,"file":"FilterPipe.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/filters/FilterPipe.ts"],"sourcesContent":["import { ExtensionType } from '../extensions/Extensions';\n\nimport type { InstructionSet } from '../rendering/renderers/shared/instructions/InstructionSet';\nimport type { InstructionPipe } from '../rendering/renderers/shared/instructions/RenderPipe';\nimport type { Renderer } from '../rendering/renderers/types';\nimport type { Container } from '../scene/container/Container';\nimport type { Effect } from '../scene/container/Effect';\nimport type { FilterInstruction } from './FilterSystem';\n\nexport class FilterPipe implements InstructionPipe<FilterInstruction>\n{\n    public static extension = {\n        type: [\n            ExtensionType.WebGLPipes,\n            ExtensionType.WebGPUPipes,\n            ExtensionType.CanvasPipes,\n        ],\n        name: 'filter',\n    } as const;\n\n    private _renderer: Renderer;\n\n    constructor(renderer: Renderer)\n    {\n        this._renderer = renderer;\n    }\n\n    public push(filterEffect: Effect, container: Container, instructionSet: InstructionSet): void\n    {\n        const renderPipes = this._renderer.renderPipes;\n\n        renderPipes.batch.break(instructionSet);\n\n        instructionSet.add({\n            renderPipeId: 'filter',\n            canBundle: false,\n            action: 'pushFilter',\n            container,\n            filterEffect,\n        } as FilterInstruction);\n    }\n\n    public pop(_filterEffect: Effect, _container: Container, instructionSet: InstructionSet): void\n    {\n        this._renderer.renderPipes.batch.break(instructionSet);\n\n        instructionSet.add({\n            renderPipeId: 'filter',\n            action: 'popFilter',\n            canBundle: false,\n        });\n    }\n\n    public execute(instruction: FilterInstruction)\n    {\n        if (instruction.action === 'pushFilter')\n        {\n            this._renderer.filter.push(instruction);\n        }\n        else if (instruction.action === 'popFilter')\n        {\n            this._renderer.filter.pop();\n        }\n    }\n\n    public destroy(): void\n    {\n        this._renderer = null;\n    }\n}\n"],"names":[],"mappings":";;;;;;AASO,MAAM,UACb,CAAA;IAYI,YAAY,QACZ,CAAA;QACI,IAAA,CAAK,SAAY,GAAA,QAAA,CAAA;IAAA,CACrB;IAEO,IAAA,CAAK,YAAsB,EAAA,SAAA,EAAsB,cACxD,EAAA;QACU,MAAA,WAAA,GAAc,IAAA,CAAK,SAAU,CAAA,WAAA,CAAA;QAEvB,WAAA,CAAA,KAAA,CAAM,KAAA,CAAM,cAAc,CAAA,CAAA;QAEtC,cAAA,CAAe,GAAI,CAAA;YACf,YAAc,EAAA,QAAA;YACd,SAAW,EAAA,KAAA;YACX,MAAQ,EAAA,YAAA;YACR,SAAA;YACA,YAAA;QAAA,CACkB,CAAA,CAAA;IAAA,CAC1B;IAEO,GAAA,CAAI,aAAuB,EAAA,UAAA,EAAuB,cACzD,EAAA;QACI,IAAA,CAAK,SAAU,CAAA,WAAA,CAAY,KAAM,CAAA,KAAA,CAAM,cAAc,CAAA,CAAA;QAErD,cAAA,CAAe,GAAI,CAAA;YACf,YAAc,EAAA,QAAA;YACd,MAAQ,EAAA,WAAA;YACR,SAAW,EAAA,KAAA;QAAA,CACd,CAAA,CAAA;IAAA,CACL;IAEO,QAAQ,WACf,EAAA;QACQ,IAAA,WAAA,CAAY,MAAA,KAAW,YAC3B,EAAA;YACS,IAAA,CAAA,SAAA,CAAU,MAAO,CAAA,IAAA,CAAK,WAAW,CAAA,CAAA;QAAA,CAC1C,MAAA,IACS,WAAY,CAAA,MAAA,KAAW,WAChC,EAAA;YACS,IAAA,CAAA,SAAA,CAAU,MAAA,CAAO,GAAI,EAAA,CAAA;QAAA,CAC9B;IAAA,CACJ;IAEO,OACP,GAAA;QACI,IAAA,CAAK,SAAY,GAAA,IAAA,CAAA;IAAA,CACrB;AACJ,CAAA;AA5Da,UAAA,CAEK,SAAY,GAAA;IACtB,IAAM,EAAA;0KACF,gBAAc,CAAA,UAAA;0KACd,gBAAc,CAAA,WAAA;0KACd,gBAAc,CAAA,WAAA;KAClB;IACA,IAAM,EAAA,QAAA;AACV,CAAA","ignoreList":[0]}},
    {"offset": {"line": 14036, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14042, "column": 0}, "map": {"version":3,"file":"init.mjs","sources":["file://D%3A/dev/slot-game/frontend/node_modules/pixi.js/src/filters/init.ts"],"sourcesContent":["import { extensions } from '../extensions/Extensions';\nimport { FilterPipe } from './FilterPipe';\nimport { FilterSystem } from './FilterSystem';\n\nextensions.add(FilterSystem);\nextensions.add(FilterPipe);\n"],"names":[],"mappings":";;;;;;;;kKAIA,aAAA,CAAW,GAAA,kKAAI,eAAY,CAAA,CAAA;kKAC3B,aAAA,CAAW,GAAA,gKAAI,aAAU,CAAA","ignoreList":[0]}},
    {"offset": {"line": 14052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14058, "column": 0}, "map": {"version":3,"file":"browserAll.mjs","sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 14088, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}