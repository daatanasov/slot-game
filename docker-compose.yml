version: '3.8'

services:
    postgresDB:
        image: postgres:latest
        environment:
            POSTGRES_DB: myapp_db
            POSTGRES_USER: myapp_user
            POSTGRES_PASSWORD: myapp_secret_password
        volumes:
            - postgresDB_data:/var/lib/postgresql/data
        ports:
            - '5432:5432'
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U myapp_user -d myapp_db']
            interval: 5s
            timeout: 5s
            retries: 5

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        environment:
            - DATABASE_URL=postgresql://myapp_user:myapp_secret_password@postgresDB:5432/myapp_db
            - NODE_ENV=development
        ports:
            - '8080:8080'
        depends_on:
            postgresDB:
                condition: service_healthy
        volumes:
            - ./backend:/app
            - /app/node_modules

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - '3000:3000'
        network_mode: 'bridge' # Ensures proper network bridging
        depends_on:
            - backend
        volumes:
            - ./frontend:/app
            - /app/.next
            - /app/node_modules
        command: sh -c "ls -la .next && npm run build && npm run start"

volumes:
    postgresDB_data:
